{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#\u6b22\u8fce\u6765\u5230-lzlqwqs-note","title":"\u6b22\u8fce\u200b\u6765\u5230\u200b lzlqwq's Note!","text":"<p>\u200b\u8fd9\u91cc\u200b\u6709\u200b\u4e00\u4e2a\u200b\u849f\u200b\u84bb\u200b\u7684\u200b\u4e00\u4e9b\u200b OI \u200b\u5b66\u4e60\u200b\u7b14\u8bb0\u200b</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/","title":"2024.7.15 \u200b\u8bad\u7ec3\u200b\u8bb0\u5f55","text":"","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p3034-usaco---cow-photography","title":"P3034 USACO - Cow Photography","text":"<p>P3034</p> <p>\u200b\u770b\u5230\u200b\u9898\u200b\uff0c\u200b\u7b2c\u4e00\u773c\u200b\u8003\u8651\u200b\u5c06\u200b\u4e94\u6b21\u200b\u62cd\u7167\u200b\u7684\u200b\u5e8f\u5217\u200b\u7ecf\u8fc7\u200b\u4e00\u4e9b\u200b\u65b9\u6cd5\u200b\u7ec4\u5408\u200b\u5f97\u5230\u200b\u539f\u200b\u5e8f\u5217\u200b\uff0c\u200b\u601d\u8003\u200b\u540e\u200b\u53d1\u73b0\u200b\u4e0d\u597d\u200b\u505a\u200b\uff1b\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u4e0d\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u968f\u610f\u200b\u79fb\u52a8\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b\u5143\u7d20\u200b\u7684\u200b\u7edd\u5bf9\u200b\u4f4d\u7f6e\u200b\u5176\u5b9e\u200b\u4e0d\u600e\u4e48\u200b\u597d\u200b\u523b\u753b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u6574\u4f53\u200b\u504f\u79fb\u200b\uff1b\u200b\u4f46\u200b\u4ed4\u7ec6\u200b\u4e00\u60f3\u200b\uff0c\u200b\u8fd9\u4e00\u200b\u64cd\u4f5c\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u5143\u7d20\u200b\u7684\u200b \u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b \u200b\u5f71\u54cd\u200b\u4e0d\u200b\u5927\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5e8f\u5217\u200b\u5143\u7d20\u200b\u7684\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u5173\u7cfb\u200b</p> <p>\u200b\u601d\u8def\u200b\u5df2\u7ecf\u200b\u6709\u200b\u4e86\u200b\uff0c\u200b\u95ee\u9898\u200b\u6765\u200b\u4e86\u200b\uff0c\u200b\u600e\u4e48\u200b\u786e\u5b9a\u200b\u8981\u200b\u8003\u5bdf\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u4e0d\u662f\u200b\u5728\u200b\u8be5\u6b21\u200b\u79fb\u52a8\u200b\u7684\u200b\u5143\u7d20\u200b\u5462\u200b\uff1f\u200b\u9898\u76ee\u200b\u5176\u5b9e\u200b\u7ed9\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u91cd\u8981\u200b\u7684\u200b\u6761\u4ef6\u200b \u2014\u2014 \u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u6700\u200b\u591a\u53ea\u200b\u4f1a\u200b\u79fb\u52a8\u200b\u4e00\u6b21\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u4ece\u200b\u6574\u4f53\u200b\u8003\u8651\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u4e24\u200b\u5143\u7d20\u200b \\(a_i, a_j (i&lt;j)\\)\uff0c\u200b\u4f1a\u200b\u5bf9\u200b\u5176\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u9020\u6210\u200b\u5f71\u54cd\u200b\u7684\u200b\u79fb\u52a8\u200b \u200b\u6700\u200b\u591a\u53ea\u200b\u4f1a\u200b\u51fa\u73b0\u200b \\(2\\) \u200b\u6b21\u200b\uff0c\u200b\u5373\u5c06\u200b \\(a_j\\) \u200b\u632a\u5230\u200b \\(a_i\\) \u200b\u524d\u200b\u6216\u200b\u5c06\u200b \\(a_i\\) \u200b\u632a\u5230\u200b \\(a_j\\) \u200b\u540e\u200b\uff0c\u200b\u9898\u76ee\u200b\u521a\u597d\u200b\u7ed9\u200b\u4e86\u200b \\(5\\) \u200b\u6b21\u200b\u62cd\u7167\u200b\u7ed3\u679c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8003\u5bdf\u200b\u5143\u7d20\u200b \\(a_i, a_j\\)\uff0c\u200b\u5982\u679c\u200b\u6709\u200b \\(3\\) \u200b\u6b21\u200b\u62cd\u7167\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u90fd\u200b\u6709\u200b \\(i&lt;j\\)\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u539f\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u5c31\u200b\u6709\u200b \\(i&lt;j\\)</p> <p>\u200b\u7531\u6b64\u200b\u77e5\u9053\u200b\u4e86\u200b\u539f\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u4efb\u610f\u200b\u4e24\u200b\u5143\u7d20\u200b\u7684\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u5173\u7cfb\u200b\uff0c\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u6c42\u51fa\u200b\u539f\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6b63\u597d\u200b\u53d1\u73b0\u200b \\(sort\\) \u200b\u7684\u200b \\(cmp\\) \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5b8c\u7f8e\u200b\u5207\u5408\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u56e0\u6b64\u200b\u76f4\u63a5\u200b\u4efb\u53d6\u200b\u4e00\u6b21\u200b\u62cd\u7167\u200b\u7ed3\u679c\u200b \\(sort\\) \u200b\u4e00\u904d\u200b\uff0c\u200b\u6392\u5e8f\u200b\u7ed3\u679c\u200b\u5c31\u662f\u200b\u539f\u200b\u5e8f\u5217\u200b</p> <p>\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u8bb0\u5f55\u200b\u5728\u200b\u7b2c\u200b \\(i(1\\le i \\le 5)\\) \u200b\u6b21\u200b\u62cd\u7167\u200b\u4e2d\u200b\u5143\u7d20\u200b \\(a_i (0 \\le a_i \\le 1000000000)\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u503c\u57df\u200b\u5f88\u5927\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f7f\u7528\u200b \\(map\\) \u200b\u8bb0\u5f55\u200b\uff0c\u200b\u5f00\u200b \\(O2\\) \u200b\u5373\u53ef\u200b\u6c34\u8fc7\u200b\uff1b\u200b\u4e8b\u5b9e\u4e0a\u200b\u7531\u4e8e\u200b\u672c\u9898\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u67e5\u8be2\u200b\uff0c\u200b\u4f7f\u7528\u200b \\(umap\\) \u200b\u4f1a\u200b\u66f4\u200b\u5feb\u200b\uff0c\u200b\u5b9e\u6d4b\u200b\u4e0d\u200b\u5f00\u200b \\(O2\\) \u200b\u6700\u200b\u6162\u70b9\u200b\u7ea6\u200b \\(700ms\\)\uff0c\u200b\u53ef\u200b\u8fc7\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(nlogn)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2e4+5;\n\nint N;\nint A[6][MAXN];\nint ans[MAXN];\n\nunordered_map &lt;int, unordered_map &lt;int, int&gt; &gt; pos;\n\nbool cmp(int a, int b){\n    int cnt=0;\n    for (int i=1; i&lt;=5; i++){\n        if (pos[i][a] &lt; pos[i][b]){\n            cnt++;\n        }\n    }\n    if (cnt &gt;= 3){\n        return true;\n    }\n    return false;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=5; i++){\n        for (int j=1; j&lt;=N; j++){\n            scanf(\"%d\", &amp;A[i][j]);\n            pos[i][A[i][j]] = j;\n        }\n    }\n    for (int i=1; i&lt;=N; i++){\n        ans[i] = A[1][i];\n    }\n\n    sort(ans+1, ans+N+1, cmp);\n\n    for (int i=1; i&lt;=N; i++){\n        printf(\"%d\\n\", ans[i]);\n    }\n    return 0;\n}\n</code></pre>","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4188-usaco---lifeguards-s","title":"P4188 USACO - Lifeguards S","text":"<p>P4188</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5148\u6c42\u200b\u51fa\u200b\u6240\u6709\u200b\u533a\u95f4\u200b\u8986\u76d6\u200b\u7684\u200b \u200b\u65f6\u95f4\u200b\u70b9\u200b\uff0c\u200b\u518d\u200b\u51cf\u53bb\u200b\u5355\u4e2a\u200b\u533a\u95f4\u200b\u4e2d\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u533a\u95f4\u200b \u200b\u4e0d\u200b\u91cd\u53e0\u200b \u200b\u65f6\u95f4\u200b\u70b9\u200b\u7684\u200b\u6570\u91cf\u200b\u6700\u5c0f\u503c\u200b\uff1b\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\u662f\u200b\u65f6\u95f4\u200b\u70b9\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u7ed9\u5b9a\u200b\u533a\u95f4\u200b \\(l, r (l \\le r)\\)\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u8986\u76d6\u200b\u7684\u200b\u65f6\u95f4\u200b\u70b9\u6709\u200b \\(r-l\\) \u200b\u4e2a\u200b\u800c\u200b\u975e\u200b \\(r-l+1\\) \u200b\u4e2a\u200b</p> <p>\u200b\u5148\u200b\u8003\u8651\u200b\u5982\u4f55\u200b\u6c42\u200b\u51fa\u200b\u6240\u6709\u200b\u533a\u95f4\u200b\u8986\u76d6\u200b\u7684\u200b\u65f6\u95f4\u200b\u70b9\u200b\u3002\u200b\u9996\u5148\u200b\u5fc5\u4e0d\u53ef\u5c11\u200b\u7684\u200b\u80af\u5b9a\u200b\u662f\u200b\u5148\u200b\u7ed9\u200b\u533a\u95f4\u200b\u6309\u7167\u200b\u5de6\u200b\u7aef\u70b9\u200b \\(sort\\) \u200b\u4e00\u904d\u200b\uff1b\u200b\u63a5\u4e0b\u6765\u200b\u4f7f\u7528\u200b\u7c7b\u4f3c\u200b\u53cc\u200b\u6307\u9488\u200b\u7684\u200b\u601d\u60f3\u200b\uff0c\u200b\u8003\u8651\u200b\u65b0\u200b\u52a0\u5165\u200b\u7ebf\u6bb5\u200b \\(line[i]\\)\uff0c\u200b\u53c2\u7167\u200b\u4e0b\u56fe\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b \\(borderr\\) \u200b\u8868\u793a\u200b\u65b0\u200b\u52a0\u5165\u200b\u7ebf\u6bb5\u200b\u524d\u200b \u200b\u5df1\u7ecf\u200b\u52a0\u5165\u200b\u7684\u200b\u7ebf\u6bb5\u200b\u80fd\u591f\u200b\u8986\u76d6\u200b\u7684\u200b\u6700\u5927\u200b\u65f6\u95f4\u200b\u70b9\u200b\uff0c\\(line[i].l\\) \u200b\u8868\u793a\u200b\u76ee\u524d\u200b\u533a\u95f4\u200b\u7684\u200b\u5de6\u7aef\u200b\u65f6\u95f4\u200b\u70b9\u200b\uff0c\\(line[i].r\\) \u200b\u8868\u793a\u200b\u76ee\u524d\u200b\u533a\u95f4\u200b\u7684\u200b\u53f3\u7aef\u200b\u65f6\u95f4\u200b\u70b9\u200b</p> <p></p> <p>\u200b\u5bb9\u6613\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5982\u679c\u200b \\(line[i].r \\le borderr\\)\uff0c\u200b\u90a3\u4e48\u200b\u5f53\u524d\u200b\u7ebf\u6bb5\u200b\u6ca1\u6709\u200b\u771f\u6b63\u200b\u4ea7\u751f\u200b\u8d21\u732e\u200b\uff0c\u200b\u8df3\u8fc7\u200b\u5373\u53ef\u200b\uff1b\u200b\u5f53\u200b \\(line[i].r &gt; borderr\\) \u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u6c42\u200b\u51fa\u200b\u5f53\u524d\u200b\u7ebf\u6bb5\u200b \u200b\u5de6\u4fa7\u200b\u4e0d\u200b\u4e0e\u200b\u5148\u524d\u200b\u52a0\u5165\u200b\u7ebf\u6bb5\u200b\u91cd\u53e0\u200b\u7684\u200b\u6700\u5927\u200b\u65f6\u95f4\u200b\u70b9\u200b\uff0c\u200b\u8bbe\u200b\u4e3a\u200b \\(recentl\\)\uff0c\u200b\u8fd9\u6837\u200b\u8be5\u200b\u7ebf\u6bb5\u200b\u7684\u200b\u8d21\u732e\u200b\u5373\u200b\u4e3a\u200b \\(line[i].r - recentl\\)\uff0c\u200b\u5982\u4e0b\u200b\u56fe\u4e3a\u200b\u4e24\u79cd\u200b\u4e0d\u540c\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6613\u5f97\u200b \\(recentl = max(borderr, line[i].l)\\)</p> <p></p> <p>\u200b\u56e0\u6b64\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u533a\u95f4\u200b\u7edf\u8ba1\u200b\u5373\u53ef\u200b\uff0c\u200b\u522b\u5fd8\u4e86\u200b\u6bcf\u6b21\u200b\u7edf\u8ba1\u200b\u540e\u200b\u8fd8\u8981\u200b\u66f4\u65b0\u200b \\(borderr\\)\uff0c\u200b\u76f4\u63a5\u200b\u4ee4\u200b \\(borderr = line[i].r\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u89e3\u51b3\u200b\u4e86\u200b\u603b\u200b\u8d21\u732e\u200b</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\u8003\u8651\u200b\u5982\u4f55\u200b\u6c42\u200b\u51fa\u200b\u5355\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u8d21\u732e\u200b\u3002\u200b\u8bbe\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u4e3a\u200b \\(line[i]\\)\uff0c\u200b\u9996\u5148\u200b\u4ecd\u7136\u200b\u8981\u200b\u7279\u5224\u200b \\(line[i].r \\le borderr\\)\uff0c\u200b\u8fd9\u200b\u8bf4\u660e\u200b\u6709\u200b\u533a\u95f4\u200b\u88ab\u200b\u5b8c\u5168\u200b\u5305\u542b\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(break\\) \u200b\u540e\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200b\u603b\u200b\u8d21\u732e\u200b\u5373\u53ef\u200b\uff1b\u200b\u6700\u574f\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5355\u4e2a\u200b\u533a\u95f4\u200b \\(line[i]\\) \u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4e0e\u200b\u4e4b\u524d\u200b\u7684\u200b\u533a\u95f4\u200b\u4ea7\u751f\u200b\u91cd\u53e0\u200b\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u4e0e\u200b\u540e\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b \\(line[i+1]\\) \u200b\u4ea7\u751f\u200b\u91cd\u53e0\u200b\uff0c\u200b\u6211\u4eec\u200b\u8003\u8651\u200b \\(line[i].l\\) \u200b\u4e0e\u200b \\(borderr\\)\u3001\\(line[i].r\\) \u200b\u4e0e\u200b \\(line[i+1].l\\) \u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5de6\u200b\u7aef\u70b9\u200b\u5904\u200b\u6700\u5927\u200b\u65e0\u200b\u91cd\u53e0\u200b\u65f6\u95f4\u200b\u70b9\u200b\u5373\u200b\u4e3a\u200b \\(max(line[i].l, borderr)\\)\uff0c\u200b\u53f3\u200b\u7aef\u70b9\u200b\u6700\u5927\u200b\u65e0\u200b\u91cd\u53e0\u200b\u65f6\u95f4\u200b\u70b9\u200b\u5373\u200b\u4e3a\u200b \\(min(line[i].r, line[i+1].l)\\)\uff0c\u200b\u53ef\u4ee5\u200b\u7ed3\u5408\u200b\u4e0b\u56fe\u200b\u7406\u89e3\u200b</p> <p></p> <p>\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u7edf\u8ba1\u200b\u5904\u200b\u6700\u5c0f\u200b\u7684\u200b\u5355\u4e2a\u200b\u533a\u95f4\u200b\u8d21\u732e\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7528\u200b\u603b\u200b\u8d21\u732e\u200b\u51cf\u53bb\u200b\u5373\u53ef\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b\uff1b\u200b\u5b9e\u73b0\u200b\u65f6\u200b\u6ce8\u610f\u200b\u8be5\u200b\u8d21\u732e\u200b\u53ef\u80fd\u200b\u4e3a\u200b \u200b\u8d1f\u6570\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u7279\u5224\u200b\u4e3a\u200b \\(0\\) \u200b\u5e76\u200b\u76f4\u63a5\u200b \\(break\\)\uff1b\u200b\u540c\u65f6\u200b\uff0c\u200b\u548c\u200b\u7edf\u8ba1\u200b\u603b\u200b\u8d21\u732e\u200b\u65f6\u200b\u76f8\u540c\u200b\uff0c\u200b\u4e5f\u200b\u522b\u5fd8\u4e86\u200b\u66f4\u65b0\u200b \\(borderr\\) \u200b\u5373\u200b \\(borderr = line[i].r\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(nlogn)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N;\nlong long sum, mcover=1e9;\n\nstruct Line{\n    int l;\n    int r;\n}line[MAXN];\n\nbool cmp(Line a, Line b){\n    if (a.l == b.l){\n        return a.r &lt; b.r;\n    }\n    return a.l &lt; b.l;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d\", &amp;line[i].l, &amp;line[i].r);\n    }\n    sort(line+1, line+N+1, cmp);\n\n    int borderr = 0;\n    for (int i=1; i&lt;=N; i++){\n        if (line[i].r &gt; borderr){\n            int recentl = max(line[i].l, borderr);\n            sum += line[i].r-recentl;\n            borderr = line[i].r;\n        }   \n    }\n\n    borderr = 0;\n    line[N+1].l = line[N].r;\n    for (int i=1; i&lt;=N; i++){\n        if (line[i].r &lt;= borderr){\n            mcover = 0;\n        }\n        else{\n            long long cover = min(line[i+1].l, line[i].r)-max(line[i].l, borderr);\n            mcover = min(mcover, cover);\n            borderr = line[i].r;\n        }\n\n        if (mcover &lt;= 0){\n            mcover = 0;\n            break;\n        }   \n    }\n\n    printf(\"%lld\", sum-mcover);\n    return 0;\n}\n</code></pre>","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4181-usaco---rental-service-s","title":"P4181 USACO - Rental Service S","text":"<p>P4181</p> <p>\u200b\u6bcf\u4e2a\u200b\u5976\u725b\u200b\u6709\u200b\u4e24\u79cd\u200b\u5206\u914d\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4e00\u79cd\u200b\u662f\u200b\u5c06\u200b\u5976\u725b\u200b\u79df\u51fa\u53bb\u200b\uff0c\u200b\u4e00\u79cd\u200b\u662f\u200b\u5356\u51fa\u200b\u8be5\u200b\u5976\u725b\u200b\u751f\u4ea7\u200b\u7684\u200b\u5976\u200b\uff1b\u200b\u9996\u5148\u200b\u6ce8\u610f\u200b\u5230\u200b\u79df\u200b\u5976\u725b\u200b\u8fd9\u4e00\u200b\u65b9\u5f0f\u200b\u5bf9\u200b\u5177\u4f53\u200b\u79df\u200b\u54ea\u4e00\u53ea\u200b\u5976\u725b\u200b\u6ca1\u6709\u200b\u9650\u5236\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6613\u5f97\u200b\u8d2a\u5fc3\u200b\uff0c\u200b\u5373\u200b \u200b\u4f18\u5148\u200b\u79df\u200b\u4ea7\u5976\u91cf\u200b\u5c0f\u200b\u7684\u200b\u5976\u725b\u200b\uff0c\u200b\u540c\u65f6\u200b \u200b\u4f18\u5148\u200b\u79df\u7ed9\u200b\u4ef7\u683c\u200b\u6700\u9ad8\u200b\u7684\u200b\u519c\u573a\u4e3b\u200b\uff1b\u200b\u540c\u7406\u200b\uff0c\u200b\u5356\u5976\u200b\u65f6\u200b\u4e5f\u200b \u200b\u4f18\u5148\u200b\u5356\u200b\u7ed9\u200b\u4ef7\u683c\u200b\u6700\u9ad8\u200b\u7684\u200b\u5546\u5e97\u200b</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5546\u5e97\u200b\u6309\u7167\u200b\u4ef7\u683c\u200b \u200b\u4ece\u5927\u5230\u200b\u5c0f\u200b\u6392\u5e8f\u200b\u3001\u200b\u5c06\u200b\u79df\u200b\u5976\u725b\u200b\u7684\u200b\u519c\u573a\u4e3b\u200b\u6309\u7167\u200b\u79df\u7528\u200b\u4ef7\u683c\u200b \u200b\u4ece\u5927\u5230\u200b\u5c0f\u200b\u6392\u5e8f\u200b\uff1b\u200b\u6211\u4eec\u200b\u6ce8\u610f\u200b\u5230\u200b\u5c06\u200b\u6240\u6709\u200b\u5976\u725b\u200b\u6392\u5e8f\u200b\u540e\u200b\uff0c\u200b\u5fc5\u7136\u200b\u6709\u200b\u4ece\u5934\u200b\u8fde\u7eed\u200b\u4e00\u90e8\u5206\u200b\u9009\u62e9\u200b\u79df\u51fa\u53bb\u200b\uff0c\u200b\u5269\u4e0b\u200b\u4e00\u90e8\u5206\u200b\u9009\u62e9\u200b\u5356\u51fa\u53bb\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8003\u8651\u200b \u200b\u679a\u4e3e\u200b\u65ad\u70b9\u200b \\(i\\) \uff0c\u200b\u94a6\u5b9a\u200b\u5c06\u200b\u7b2c\u200b \\(1\\) \u200b\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u200b\u5976\u725b\u200b\u7684\u200b\u5976\u200b\u5356\u51fa\u53bb\u200b\uff0c\u200b\u7b2c\u200b \\(i+1\\) \u200b\u5230\u200b\u7b2c\u200b \\(N\\) \u200b\u5934\u200b\u5976\u725b\u200b\u79df\u51fa\u53bb\u200b\uff1b\u200b\u6240\u4ee5\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u8981\u200b\u5bf9\u200b\u5976\u725b\u200b\u6309\u7167\u200b\u4ea7\u5976\u91cf\u200b \u200b\u4ece\u5927\u5230\u200b\u5c0f\u200b\u6392\u5e8f\u200b</p> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u603b\u200b\u8d21\u732e\u200b\u5206\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e00\u90e8\u5206\u200b\u6765\u81ea\u200b\u79df\u51fa\u200b\u5976\u725b\u200b\uff1b\u200b\u8fd9\u200b\u4e00\u90e8\u5206\u200b\u5f88\u200b\u597d\u200b\u7ef4\u62a4\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4e0a\u200b \u200b\u524d\u7f00\u200b\u548c\u200b \u200b\u5373\u53ef\u200b\uff0c\u200b\u5bf9\u200b\u6392\u5e8f\u200b\u540e\u200b\u7684\u200b \\(r[i]\\) \u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b9a\u4e49\u200b \\(sum[i]\\) \u200b\u4e3a\u200b\u5176\u200b\u524d\u7f00\u200b\u548c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8868\u793a\u200b\u79df\u51fa\u200b \\(i\\) \u200b\u5934\u725b\u200b\u80fd\u200b\u5f97\u5230\u200b\u7684\u200b\u94b1\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u5356\u5976\u200b\u725b\u5976\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u867d\u7136\u200b\u5356\u51fa\u200b\u5976\u200b\u7684\u200b\u603b\u548c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u524d\u7f00\u200b\u548c\u200b\u7ef4\u62a4\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u6bcf\u6b21\u200b\u90fd\u200b\u4ece\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u200b\u5546\u5e97\u200b\u5411\u200b\u540e\u200b\u5faa\u73af\u200b\u5904\u7406\u200b\u662f\u5426\u200b\u80fd\u200b\u5356\u51fa\u200b\u5976\u4f1a\u200b\u8d85\u65f6\u200b\uff1b\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b\u76f8\u90bb\u200b\u4e24\u6b21\u200b\u5356\u5976\u200b\u603b\u548c\u200b\u7684\u200b \u200b\u589e\u91cf\u200b (\u200b\u8bbe\u200b\u5f53\u524d\u200b\u5976\u725b\u200b\u4e3a\u200b \\(i\\)\uff0c\u200b\u8fd9\u4e2a\u200b\u589e\u91cf\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b \\(c[i]\\))\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b \u200b\u76f4\u63a5\u200b\u8003\u8651\u200b\u5176\u200b\u5bf9\u200b\u7b54\u6848\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e0b\u4e0a\u200b\u4e00\u6b21\u200b\u5356\u5b8c\u200b\u540e\u200b\u6240\u5f97\u200b\u6240\u6709\u200b\u7684\u200b\u94b1\u200b \\(sell\\)\uff0c\u200b\u5f53\u524d\u200b\u5356\u5230\u200b\u7684\u200b\u5546\u5e97\u200b\u4f4d\u7f6e\u200b \\(cnt\\)\uff0c\u200b\u76f4\u63a5\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u5373\u53ef\u200b\uff1b\u200b\u8fd9\u91cc\u200b\u6709\u4e2a\u200b\u6280\u5de7\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5355\u72ec\u200b\u5f00\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u5546\u5e97\u200b\u4e2d\u200b\u5df2\u6709\u200b\u7684\u200b\u725b\u5976\u200b \\(storemilk\\)\uff0c\u200b\u8fd9\u6837\u200b\u7701\u53bb\u200b\u4e86\u200b\u76f4\u63a5\u200b\u6539\u52a8\u200b\u5546\u5e97\u200b\u539f\u672c\u200b\u4fe1\u606f\u200b\u7684\u200b\u9ebb\u70e6\u200b</p> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u8bbe\u200b\u5f53\u524d\u200b\u8981\u200b\u5356\u51fa\u200b\u7684\u200b\u725b\u5976\u200b (\u200b\u589e\u91cf\u200b) \u200b\u4e3a\u200b \\(milk=c[i]\\)\uff0c\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u200b\u7684\u200b\u5546\u5e97\u200b\u7684\u200b\u5bb9\u91cf\u200b\u4e3a\u200b \\(store[i].q\\) (\u200b\u5b9e\u9645\u200b\u5269\u4f59\u200b\u5bb9\u91cf\u200b\u4e3a\u200b \\(store[i].q-storemilk\\)) \u3001\u200b\u4ef7\u683c\u200b\u4e3a\u200b \\(store[i].p\\)\uff0c\u200b\u5206\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b\uff1b</p> <ol> <li>\u200b\u5f53\u200b\u5546\u5e97\u200b\u5269\u4f59\u200b\u5bb9\u91cf\u200b\u4e0d\u8db3\u200b \\(milk\\) \u200b\u65f6\u200b<ul> <li>\u200b\u7528\u200b \\(store[i].q-storemilk\\) \u200b\u66f4\u65b0\u200b \\(sell\\)</li> </ul> </li> <li>\u200b\u66f4\u65b0\u200b\u5f53\u524d\u200b\u8981\u200b\u5356\u51fa\u200b\u7684\u200b\u725b\u5976\u200b\u6570\u91cf\u200b \\(milk\\)</li> <li>\u200b\u6536\u56de\u200b \\(storemilk\\)\uff0c\u200b\u5c06\u200b\u5176\u8bbe\u200b\u4e3a\u200b \\(0\\)</li> <li>\u200b\u522b\u5fd8\u4e86\u200b\u8fdb\u884c\u200b \\(cnt+1\\)</li> <li>\u200b\u5f53\u200b\u5546\u5e97\u200b\u5269\u4f59\u200b\u5bb9\u91cf\u200b\u591f\u200b \\(milk\\) \u200b\u65f6\u200b</li> <li>\u200b\u7528\u200b \\(milk\\) \u200b\u66f4\u65b0\u200b \\(sell\\) (\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\uff01\u200b\u8fd9\u91cc\u200b\u4e0d\u662f\u200b \\(storemilk+milk\\))</li> <li>\u200b\u66f4\u65b0\u200b \\(storemilk\\) (\u200b\u56e0\u4e3a\u200b\u8fd9\u91cc\u200b \\(store[i].q\\) \u200b\u7684\u200b\u53d8\u5316\u200b\u5b9e\u9645\u4e0a\u200b\u76f4\u63a5\u200b\u4f53\u73b0\u200b\u5728\u200b\u4e86\u200b \\(storemilk\\) \u200b\u7684\u200b\u53d8\u5316\u200b\u4e0a\u200b)</li> <li>\u200b\u8df3\u51fa\u200b\u5faa\u73af\u200b\u5373\u53ef\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5df2\u7ecf\u200b\u5356\u5149\u200b\u4e86\u200b</li> </ol> <p>\u200b\u6700\u7ec8\u200b\u7edf\u8ba1\u200b\u51fa\u200b\u5f53\u524d\u200b\u7684\u200b\u603b\u4ef7\u503c\u200b\uff0c\u200b\u52a0\u4e0a\u200b\u79df\u51fa\u200b\u7684\u200b\u4ef7\u503c\u200b\uff0c\u200b\u4e0e\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b \\(ans\\) \u200b\u6bd4\u8f83\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5982\u679c\u200b \u200b\u5f53\u524d\u200b\u603b\u4ef7\u503c\u200b $ \\le ans$\uff0c\u200b\u5176\u5b9e\u200b \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b \\(break\\) \uff0c\u200b\u56e0\u4e3a\u200b\u5bb9\u6613\u200b\u8bc1\u660e\u200b\u4ef7\u503c\u200b\u53d8\u5316\u200b\u5206\u754c\u70b9\u200b\u552f\u4e00\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N, M, R;\nint c[MAXN], r[MAXN];\nlong long sumr[MAXN];\nlong long ans = 0;\n\nstruct Store{\n    int p;\n    int q;\n}store[MAXN];\n\nbool cmp(int a, int b){\n    return a&gt;b;\n}\nbool cmp_store(Store a, Store b){\n    if (a.p == b.p){\n        return a.q &gt; b.q;\n    }\n    return a.p &gt; b.p;\n}\n\nint main(){\n    scanf(\"%d%d%d\", &amp;N, &amp;M, &amp;R);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;c[i]);\n    }\n    sort(c+1, c+N+1, cmp);\n    for (int i=1; i&lt;=M; i++){\n        scanf(\"%d%d\", &amp;store[i].q, &amp;store[i].p);\n    }\n    sort(store+1, store+M+1, cmp_store);\n    for (int i=1; i&lt;=R; i++){\n        scanf(\"%d\", &amp;r[i]);\n    }\n    sort(r+1, r+R+1, cmp);\n\n    for (int i=1; i&lt;=R; i++){\n        sumr[i] = sumr[i-1]+r[i];   \n    }\n\n    long long storemilk=0, cnt=1;\n    long long sell=0, rent=0;\n\n    for (int i=0; i&lt;=N; i++){\n        long long milk = c[i];\n        while (cnt&lt;=M){\n            if (milk+storemilk &gt;= store[cnt].q){\n                milk = milk+storemilk-store[cnt].q;\n                sell += 1ll*(store[cnt].q-storemilk)*store[cnt].p;\n                storemilk = 0;\n                cnt++;\n            }   \n            else{\n                sell += 1ll*milk*store[cnt].p;\n                storemilk = milk+storemilk;\n                break;\n            }\n        }   \n        rent = sumr[min(N-i, R)];\n        if (rent+sell &gt; ans){\n            ans = rent+sell;\n        }\n        else{\n            break;\n        }\n    }\n\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4265---usaco-snow-boots-s","title":"P4265 - USACO Snow Boots S","text":"<p>P4265</p> <p>\u200b\u8003\u8651\u200b \\(DP\\)\uff1b\u200b\u8bbe\u200b \\(dp[i]\\) \u200b\u8868\u793a\u200b\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u6240\u200b\u7a7f\u200b\u7684\u200b\u9774\u5b50\u200b\u7f16\u53f7\u200b (\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4e22\u5f03\u200b\u4e86\u200b \\(dp[i]-1\\) \u200b\u53cc\u200b\u9774\u5b50\u200b)\uff0c\u200b\u8003\u8651\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u663e\u7136\u200b\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u200b\u53ea\u80fd\u200b\u7531\u200b\u524d\u9762\u200b\u7684\u200b\u683c\u5b50\u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b\uff0c\u200b\u56e0\u6b64\u200b\u679a\u4e3e\u200b \\(j (1 \\le j &lt; i)\\)\uff1b\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u8981\u4e48\u200b\u76f4\u63a5\u200b\u7a7f\u7740\u200b\u5728\u200b\u7b2c\u200b \\(j\\) \u200b\u683c\u200b\u7684\u200b\u9774\u5b50\u200b\u8d70\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u200b\uff0c\u200b\u8981\u4e48\u200b\u5728\u200b\u7b2c\u200b \\(j\\) \u200b\u683c\u8131\u200b\u4e0b\u200b\u4e00\u4e9b\u200b\u9774\u5b50\u200b\u518d\u200b\u8d70\u200b\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u518d\u200b\u679a\u4e3e\u200b \\(k (dp[j] \\le k \\le B)\\)\uff0c\u200b\u8868\u793a\u200b\u5230\u8fbe\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u65f6\u200b\u6240\u200b\u7a7f\u200b\u7684\u200b\u9774\u5b50\u200b</p> <p>\u200b\u6211\u4eec\u200b\u60f3\u200b\u4ece\u200b\u7b2c\u200b \\(j\\) \u200b\u683c\u200b\u7a7f\u7740\u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u9774\u5b50\u200b\u8d70\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u200b\uff0c\u200b\u9700\u8981\u200b\uff1a - \u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u9774\u5b50\u200b\u80fd\u591f\u200b\u8d70\u200b\u5728\u200b\u7b2c\u200b \\(j\\) \u200b\u683c\u200b\u7684\u200b\u96ea\u200b\u4e0a\u200b - \u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u9774\u5b50\u200b\u80fd\u591f\u200b\u8d70\u200b\u5728\u200b\u7b2c\u200b \\(i\\) \u200b\u683c\u200b\u7684\u200b\u96ea\u200b\u4e0a\u200b - \u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u9774\u5b50\u200b\u80fd\u200b\u8d70\u200b\u7684\u200b\u8ddd\u79bb\u200b\u81f3\u5c11\u200b\u662f\u200b \\(i\\) \u200b\u5230\u200b \\(j\\) \u200b\u7684\u200b\u8ddd\u79bb\u200b</p> <p>\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b \\(dp[i] = min(dp[i], k)\\)\uff0c\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(dp[N]-1\\)\uff0c\u200b\u6ce8\u610f\u200b\u4e0d\u8981\u200b\u5fd8\u8bb0\u200b \\(-1\\)</p> <p>\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\u4e3a\u200b \\(dp[1] = 0\\)\uff0c\u200b\u56e0\u4e3a\u200b\u4e00\u200b\u5f00\u59cb\u200b\u4e0d\u200b\u7a7f\u200b\u9774\u5b50\u200b\uff0c\u200b\u53e6\u5916\u200b\u7531\u4e8e\u200b\u9700\u200b\u8981\u6c42\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u522b\u5fd8\u4e86\u200b\u5728\u200b\u6700\u200b\u5f00\u59cb\u200b \\(memset\\) \u200b\u4e00\u4e0b\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(N^2B)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 305;\n\nint N, B;\nint h[MAXN], s[MAXN], d[MAXN];\nint dp[MAXN];\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;B);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;h[i]);\n    }\n    for (int i=1; i&lt;=B; i++){\n        scanf(\"%d%d\", &amp;s[i], &amp;d[i]);\n    }\n\n    memset(dp, 0x3f, sizeof(dp));\n    dp[1] = 0;\n    for (int i=2; i&lt;=N; i++){\n        for (int j=1; j&lt;i; j++){\n            for (int k=dp[j]; k&lt;=B; k++){\n                if (s[k] &gt;= h[i] &amp;&amp; s[k] &gt;= h[j] &amp;&amp; d[k]&gt;=i-j){\n                    dp[i] = min(dp[i], k);\n                }\n            }   \n        }\n    }\n\n    printf(\"%d\", dp[N]-1);\n    return 0;\n}\n</code></pre>","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/15/2024715-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4264-usaco---teleportation-s","title":"P4264 USACO - Teleportation S","text":"<p>P4264</p> <p>\u200b\u4e0d\u4f1a\u200b\u3002\u200b\u5495\u5495\u200b\u5495\u200b\u3002</p>","tags":["\u601d\u7ef4","\u8d2a\u5fc3","DP"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/","title":"2024.7.16 \u200b\u8bad\u7ec3\u200b\u8bb0\u5f55","text":"","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#bndsoj-usaco---grazing-patterns","title":"BNDSOJ USACO - Grazing Patterns","text":"<p>Grazing Patterns</p> <p>\u200b\u770b\u5230\u200b\u9898\u200b\uff0c\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u66b4\u529b\u200b \\(bfs\\)\uff1b\u200b\u6211\u4eec\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u8d77\u70b9\u200b\u90fd\u200b\u5b58\u5165\u200b\u961f\u5217\u200b\u4e2d\u200b\uff0c\u200b\u5f53\u200b\u4e24\u70b9\u200b\u79fb\u52a8\u200b\u5230\u200b\u540c\u4e00\u200b\u4f4d\u7f6e\u200b\u4e14\u200b\u8d70\u8fc7\u200b\u6b65\u6570\u200b\u4e4b\u200b\u548c\u200b\u4e3a\u200b \\(25-K\\) \u200b\u65f6\u200b\u66f4\u65b0\u200b\u7b54\u6848\u200b\uff1b\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u8d77\u6765\u200b\u53d1\u73b0\u200b\u8fd9\u79cd\u200b\u505a\u6cd5\u200b\u8f83\u4e3a\u200b\u70e6\u7410\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u5148\u200b\u8003\u8651\u200b\u5bf9\u200b\u9898\u610f\u200b\u8fdb\u884c\u200b\u4e00\u4e9b\u200b\u7b80\u5316\u200b</p> <p>\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u9898\u9762\u200b\u4e2d\u200b\u4e24\u725b\u200b\u5404\u200b\u8d70\u51fa\u200b\u4e86\u200b\u4e00\u6761\u200b\u6709\u200b\u5411\u200b\u8def\u5f84\u200b\uff0c\u200b\u4e14\u200b\u8fd9\u200b\u4e24\u6761\u200b\u6709\u200b\u5411\u200b\u8def\u5f84\u200b \u200b\u7ec8\u70b9\u200b\u76f8\u540c\u200b\uff0c\u200b\u4e14\u200b \u200b\u957f\u5ea6\u200b\u76f8\u540c\u200b\uff1b\u200b\u8003\u8651\u200b\u5bf9\u200b\u8def\u5f84\u200b\u8fdb\u884c\u200b\u8f6c\u5316\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e24\u200b\u8def\u5f84\u200b\u7ec8\u70b9\u200b\u76f8\u540c\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u7c73\u5c14\u5fb7\u200b\u91cc\u5fb7\u200b\u8d70\u51fa\u200b\u7684\u200b\u8def\u5f84\u200b \u200b\u53cd\u5411\u200b \u200b\u4e00\u4e0b\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7c73\u5c14\u5fb7\u200b\u91cc\u5fb7\u200b\u8d70\u51fa\u200b\u7684\u200b\u8def\u5f84\u200b\u8d77\u70b9\u200b\u5c31\u200b\u4e3a\u200b\u8d1d\u831c\u200b\u8d70\u51fa\u200b\u7684\u200b\u8def\u5f84\u200b\u7684\u200b\u7ec8\u70b9\u200b\uff0c\u200b\u7c73\u5c14\u5fb7\u200b\u91cc\u5fb7\u200b\u8d70\u51fa\u200b\u7684\u200b\u8def\u5f84\u200b\u7684\u200b\u7ec8\u70b9\u200b\u5373\u200b\u4e3a\u200b \\((5, 5)\\)\uff1b\u200b\u8fd9\u6837\u200b\u4e24\u725b\u200b\u7684\u200b\u8def\u5f84\u200b\u5c31\u200b\u88ab\u200b \u200b\u5408\u6210\u200b\u4e3a\u200b\u4e00\u6761\u200b\u4ece\u200b \\((1, 1)\\) \u200b\u5230\u200b \\((5, 5)\\) \u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u5408\u79f0\u200b\u524d\u200b\u4e24\u200b\u8def\u5f84\u200b\u957f\u5ea6\u200b\u76f8\u540c\u200b\uff0c\u200b\u539f\u200b\u76f8\u4ea4\u200b\u70b9\u200b\u5b9e\u9645\u4e0a\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u552f\u4e00\u200b\u786e\u5b9a\u200b\u7684\u200b\uff1b</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u9645\u200b\u8981\u6c42\u200b\u7684\u200b\u5c31\u200b\u662f\u4ece\u200b \\((1, 1)\\) \u200b\u8d70\u200b\u5230\u200b \\((5, 5)\\) \u200b\u4e14\u200b\u6070\u597d\u200b\u8986\u76d6\u200b\u4e86\u200b\u6574\u4e2a\u200b\u5730\u56fe\u200b\u7684\u200b\u8def\u5f84\u200b\u6570\u91cf\u200b\uff0c\\(dfs\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint K, ans=0;\nint mp[6][6];\nint mv[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};\nbool vis[6][6];\n\nvoid dfs(int x, int y, int step){\n    if (x == 5 &amp;&amp; y == 5 &amp;&amp; step == 25-K){\n        ans++;\n        return;\n    }\n\n    for (int i=0; i&lt;4; i++){\n        int nx = x+mv[i][0];\n        int ny = y+mv[i][1];\n\n        if (nx&lt;1 || ny&lt;1 || nx&gt;5 || ny&gt;5){\n            continue;\n        }\n        if (mp[nx][ny] == -1 || vis[nx][ny]){\n            continue;\n        }\n\n        vis[nx][ny] = true;\n        dfs(nx, ny, step+1);\n        vis[nx][ny] = false;\n    }   \n}\n\nint main(){\n    scanf(\"%d\", &amp;K);\n\n    for (int i=1; i&lt;=K; i++){\n        int x, y;\n        scanf(\"%d%d\", &amp;x, &amp;y);\n        mp[x][y] = -1;\n    }\n\n    vis[1][1] = true;\n    dfs(1, 1, 1);\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p1884-usaco---overplanting-s","title":"P1884 USACO - Overplanting S","text":"<p>P1884</p> <p>\u200b\u8fd9\u9053\u9898\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u626b\u63cf\u7ebf\u200b\u677f\u5b50\u200b\uff0c\u200b\u53ef\u662f\u200b\u6211\u200b\u4e0d\u4f1a\u200b\u5440\u200b</p> <p>\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u66b4\u529b\u200b\u3002\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u663e\u7136\u200b\u7684\u200b\u505a\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u5de6\u4e0a\u89d2\u200b\u3001\u200b\u53f3\u4e0b\u89d2\u200b\u5750\u6807\u200b\u5206\u522b\u200b\u4e3a\u200b \\((lx, ly), (rx, ry)\\) \u200b\u7684\u200b\u77e9\u5f62\u200b\uff0c\u200b\u679a\u4e3e\u200b \\(x(lx &lt; x \\le rx)\\) \u200b\u4e0e\u200b \\(y(ry \\le y &lt; rx)\\)\uff0c\u200b\u5f00\u200b\u4e00\u4e2a\u200b \\(vis\\) \u200b\u6570\u7ec4\u200b\u8bb0\u5f55\u200b\u8fd9\u6837\u200b\u7684\u200b\u70b9\u200b \\((x, y)\\) \u200b\u662f\u5426\u200b\u7edf\u8ba1\u200b\u8fc7\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u7edf\u8ba1\u200b\u8fc7\u200b\u5c31\u200b\u66f4\u65b0\u200b\u7b54\u6848\u200b\u5e76\u200b\u66f4\u65b0\u200b \\(vis\\) \u200b\u6570\u7ec4\u200b\uff1b\u200b\u8fd9\u79cd\u200b\u505a\u6cd5\u200b\u5f88\u200b\u663e\u7136\u200b\u4f1a\u200b\u8d85\u65f6\u200b</p> <p>\u200b\u6211\u4eec\u200b\u6ce8\u610f\u200b\u5230\u200b\u66b4\u529b\u200b\u505a\u6cd5\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u901a\u8fc7\u200b\u679a\u4e3e\u200b\u77e9\u5f62\u200b\u5185\u200b\u6bcf\u4e2a\u200b\u70b9\u6765\u200b\u4fdd\u8bc1\u200b\u4e0d\u4f1a\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b\u9762\u79ef\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u505a\u6cd5\u200b\u6bd4\u8f83\u200b\u76f4\u89c2\u200b\u4f46\u200b\u5f88\u200b\u4f4e\u6548\u200b\uff1b\u200b\u5176\u5b9e\u200b\u95ee\u9898\u200b\u7684\u200b\u5173\u952e\u200b\u5c31\u200b\u5728\u4e8e\u200b \u200b\u5982\u4f55\u200b\u4fdd\u8bc1\u200b\u4e0d\u4f1a\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b\u9762\u79ef\u200b\uff0c\u200b\u8003\u8651\u200b\u65b0\u200b\u52a0\u5165\u200b\u77e9\u5f62\u200b \\((lx, ly), (rx, ry)\\)\uff0c\u200b\u5bf9\u4e8e\u200b\u4e4b\u524d\u200b\u7684\u200b\u4efb\u4e00\u200b\u77e9\u5f62\u200b \\((lx', ly'), (rx', ry')\\)\uff0c\u200b\u65b0\u200b\u52a0\u5165\u200b\u7684\u200b\u77e9\u5f62\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4e0e\u200b\u8be5\u200b\u77e9\u5f62\u200b\u4ea7\u751f\u200b\u91cd\u53e0\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u628a\u200b\u539f\u6765\u200b\u7684\u200b\u77e9\u5f62\u200b \u200b\u5206\u5272\u200b\u4e3a\u200b\u4e00\u4e9b\u200b\u4e0e\u200b\u65b0\u200b\u77e9\u5f62\u200b\u4e0d\u200b\u91cd\u53e0\u200b\u7684\u200b\u77e9\u5f62\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u89e3\u51b3\u200b\u4e86\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b\u7684\u200b\u95ee\u9898\u200b</p> <p>\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u5982\u679c\u200b\u76f4\u63a5\u200b\u8003\u8651\u200b\u65b0\u200b\u77e9\u5f62\u200b\u6574\u4f53\u200b\u4e0e\u200b\u539f\u200b\u77e9\u5f62\u200b\u6574\u4f53\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u6709\u200b\u5f88\u591a\u200b\u60c5\u51b5\u200b\u9700\u8981\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u9ebb\u70e6\u200b\uff1b\u200b\u5176\u5b9e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8003\u8651\u200b\u65b0\u200b\u77e9\u5f62\u200b \u200b\u5404\u8fb9\u200b \u200b\u4e0e\u200b\u539f\u200b\u77e9\u5f62\u200b\u5bf9\u5e94\u200b\u5404\u8fb9\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5373\u200b \u200b\u6309\u8fb9\u200b\u5206\u5272\u200b\uff1b\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5982\u679c\u200b\u65b0\u200b\u77e9\u5f62\u200b\u7684\u200b\u4e0b\u8fb9\u200b\u6bd4\u539f\u200b\u77e9\u5f62\u200b\u7684\u200b\u4e0b\u8fb9\u200b\u9ad8\u200b\uff0c\u200b\u8bf4\u660e\u200b\u539f\u200b\u77e9\u5f62\u200b\u5e95\u90e8\u200b\u9700\u8981\u200b\u5206\u5272\u200b\u51fa\u200b\u4e00\u5757\u200b\u5c0f\u200b\u77e9\u5f62\u200b\uff1b\u200b\u53ef\u4ee5\u200b\u53c2\u7167\u200b\u4e0b\u56fe\u200b\u7406\u89e3\u200b\uff0c\u200b\u5f53\u65b0\u200b\u77e9\u5f62\u200b\u88ab\u200b\u539f\u200b\u77e9\u5f62\u200b\u5b8c\u5168\u200b\u5305\u542b\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u9645\u4e0a\u200b\u5c06\u200b\u539f\u200b\u77e9\u5f62\u200b\u5206\u5272\u200b\u6210\u200b\u4e86\u200b\u56db\u5757\u200b</p> <p></p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2e6+5;\n\nint N, front=0, rear=0;\nlong long ans;\n\nstruct Rec{\n    int lx;\n    int ly;\n    int rx;\n    int ry;\n}rec[MAXN];\n\nvoid Cut(Rec rec1, Rec rec2){\n    // cout &lt;&lt; \"use!\" &lt;&lt; endl;\n    if (rec2.ly &lt;= rec1.ry || rec2.ry &gt;= rec1.ly || rec2.lx &gt;= rec1.rx || rec2.rx &lt;= rec1.lx){\n        rec[rear].lx = rec1.lx;\n        rec[rear].ly = rec1.ly;\n        rec[rear].rx = rec1.rx;\n        rec[rear].ry = rec1.ry;\n        rear++;\n        return;\n    }   \n    if (rec2.ly &lt; rec1.ly){\n        rec[rear].lx = rec1.lx;\n        rec[rear].ly = rec1.ly;\n        rec[rear].rx = rec1.rx;\n        rec[rear].ry = rec2.ly;\n        rear++;\n    }\n    if (rec2.ry &gt; rec1.ry){\n        rec[rear].lx = rec1.lx;\n        rec[rear].ly = rec2.ry;\n        rec[rear].rx = rec1.rx;\n        rec[rear].ry = rec1.ry;\n        rear++;\n    }\n    if (rec2.lx &gt; rec1.lx){\n        rec[rear].lx = rec1.lx;\n        rec[rear].ly = min(rec1.ly, rec2.ly);\n        rec[rear].rx = rec2.lx;\n        rec[rear].ry = max(rec1.ry, rec2.ry);\n        rear++;\n    }\n    if (rec2.rx &lt; rec1.rx){\n        rec[rear].lx = rec2.rx;\n        rec[rear].ly = min(rec1.ly, rec2.ly);\n        rec[rear].rx = rec1.rx;\n        rec[rear].ry = max(rec1.ry, rec2.ry);\n        rear++;\n    }\n    return;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d%d%d\", &amp;rec[rear].lx, &amp;rec[rear].ly, &amp;rec[rear].rx, &amp;rec[rear].ry);\n        int recentrear = rear;\n        rear++;\n\n        for (int j=front; j&lt;recentrear; j++){\n            Cut(rec[j], rec[recentrear]);\n            front++;    \n        }\n    }\n\n    for (int i=front; i&lt;=rear; i++){\n        // cout &lt;&lt; \"id \" &lt;&lt; i &lt;&lt; \": \" &lt;&lt; rec[i].lx &lt;&lt; \" \" &lt;&lt; rec[i].ly &lt;&lt; \" \" &lt;&lt; rec[i].rx &lt;&lt; \" \" &lt;&lt; rec[i].ry &lt;&lt; endl;\n        ans += 1ll*(rec[i].rx-rec[i].lx)*(rec[i].ly-rec[i].ry); \n    }\n\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4087-usaco---milk-measurement-s","title":"P4087 USACO - Milk Measurement S","text":"<p>P4087</p> <p>\u200b\u8bb0\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\u7684\u200b\u4e2a\u6570\u200b \\(cnt1\\)\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5982\u679c\u200b\u7167\u7247\u200b\u9700\u8981\u200b\u88ab\u200b\u8c03\u6574\u200b\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b \\(cnt1\\) \u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u8981\u4e48\u200b\u5c31\u662f\u200b\u5177\u4f53\u200b\u7684\u200b\u725b\u200b\u6709\u200b\u53d8\u5316\u200b\uff1b\u200b\u6309\u7167\u200b\u8fd9\u4e2a\u200b\u601d\u8def\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u5177\u4f53\u5206\u6790\u200b\u4e00\u4e0b\u200b\u5982\u679c\u200b\u7167\u7247\u200b\u9700\u8981\u200b\u88ab\u200b\u6539\u53d8\u200b\uff0c\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\u4ec0\u4e48\u200b\u6761\u4ef6\u200b</p> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5206\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b\uff1a\u200b\u8bb0\u200b \\(recentmilk\\) \u200b\u4e3a\u200b \u200b\u6d4b\u91cf\u200b\u524d\u200b \u200b\u7684\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\uff0c\\(recentcnt\\) \u200b\u4e3a\u200b\u6d4b\u91cf\u200b\u524d\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\\(maxmilk\\) \u200b\u4e3a\u200b \u200b\u6d4b\u91cf\u200b\u540e\u200b \u200b\u7684\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\uff0c\\(maxcnt\\) \u200b\u4e3a\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u7684\u200b\u4e2a\u6570\u200b</p> <ol> <li>\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u4e0d\u53d8\u200b (\\(recentmilk = maxmilk\\))</li> </ol> <p>1.1   \u200b\u6d4b\u91cf\u200b\u540e\u200b \u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5373\u200b\u6b64\u65f6\u200b \\(recentcnt \\ne maxcnt\\)\uff0c\u200b\u90a3\u4e48\u200b\u663e\u7136\u200b\u7167\u7247\u200b\u8981\u200b\u53d1\u751f\u53d8\u5316\u200b</p> <p>1.2 \u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4e0d\u200b\u53d8\u5316\u200b\uff0c\u200b\u5373\u200b\u6b64\u65f6\u200b \\(recentcnt = maxcnt\\) \uff0c\u200b\u6211\u4eec\u200b\u53cd\u8bc1\u200b\uff1a\u200b\u5982\u679c\u200b\u7167\u7247\u200b\u8fd8\u4f1a\u200b\u53d1\u751f\u200b\u6539\u52a8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53ea\u80fd\u200b\u662f\u200b\u6d4b\u91cf\u200b\u540e\u200b\u5177\u4f53\u200b\u7684\u200b\u725b\u200b\u53d1\u751f\u200b\u4e86\u200b\u53d8\u5316\u200b\uff0c\u200b\u5373\u200b\u6709\u200b\u4e00\u5934\u200b\u725b\u200b\u4e0a\u6765\u200b\u6709\u200b\u4e00\u5934\u200b\u725b\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u4f46\u200b\u4e00\u6b21\u200b\u6d4b\u91cf\u200b\u53ea\u80fd\u200b\u6539\u53d8\u200b\u4e00\u5934\u200b\u725b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0d\u200b\u6210\u7acb\u200b</p> <ol> <li>\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u53d8\u5316\u200b (\\(recentmilk \\ne maxmilk\\))</li> </ol> <p>2.1 \u200b\u6d4b\u91cf\u200b\u540e\u200b \u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u663e\u7136\u200b\u7167\u7247\u200b\u4e5f\u200b\u8981\u200b\u53d1\u751f\u53d8\u5316\u200b</p> <p>2.2 \u200b\u5982\u679c\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4e0d\u53d8\u200b\uff1a</p> <p>2.2.1  \u200b\u4e00\u5934\u200b\u6d4b\u91cf\u200b\u524d\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\u7ecf\u8fc7\u200b\u6d4b\u91cf\u200b\u540e\u200b\u4ea7\u91cf\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002\u200b\u518d\u200b\u5206\u200b\u4ea7\u91cf\u200b\u53d8\u5927\u200b\u6216\u200b\u53d8\u5c0f\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b</p> <p>2.2.1.1 \u200b\u5176\u200b\u4ea7\u91cf\u200b\u53d8\u200b\u5927\u200b\u3002\u200b\u6b64\u65f6\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b (\u200b\u53d8\u6210\u200b \\(1\\))\uff0c\u200b\u53c8\u200b\u7531\u4e8e\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u539f\u672c\u200b\u7684\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u5c31\u662f\u200b \\(1\\)\uff0c\u200b\u8fd9\u6837\u200b\u5bf9\u200b\u7167\u7247\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b</p> <p>2.2.1.2 \u200b\u5176\u200b\u4ea7\u91cf\u200b\u53d8\u5c0f\u200b\u3002\u200b\u5982\u679c\u200b\u5176\u200b\u53d8\u5c0f\u200b\u540e\u200b\u4ecd\u7136\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53c8\u200b\u7531\u4e8e\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u8bf4\u660e\u200b\u539f\u6765\u200b\u7684\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u662f\u200b \\(1\\)\uff0c\u200b\u73b0\u5728\u200b\u8fd8\u662f\u200b \\(1\\)\uff0c\u200b\u6b64\u65f6\u200b\u5bf9\u200b\u7167\u7247\u200b\u4e0d\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\u3002\u200b\u53e6\u200b\u4e00\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u679c\u200b\u5176\u200b\u53d8\u5c0f\u200b\u540e\u200b\u4e0d\u518d\u200b\u662f\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u8bf4\u660e\u200b\u53d8\u5c0f\u200b\u540e\u200b\u6709\u200b\u53e6\u200b\u4e00\u4e9b\u200b\u725b\u200b\u7684\u200b\u4ea7\u91cf\u6bd4\u200b\u5b83\u200b\u5927\u200b\u4e86\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7167\u7247\u200b\u9700\u8981\u200b\u53d8\u5316\u200b</p> <p>2.2.2 \u200b\u4e00\u5934\u200b\u6d4b\u91cf\u200b\u524d\u200b\u4ea7\u91cf\u200b\u4e0d\u662f\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\u7ecf\u8fc7\u200b\u6d4b\u91cf\u200b\u540e\u200b\u4ea7\u91cf\u200b\u53d8\u4e3a\u200b\u6700\u5927\u200b\u3002\u200b\u6b64\u65f6\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u53d8\u4e3a\u200b \\(1\\)\uff0c\u200b\u90a3\u4e48\u200b\u539f\u672c\u200b\u7684\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u4e5f\u200b\u4e3a\u200b \\(1\\)\uff0c\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u6b64\u65f6\u200b\u5177\u4f53\u200b\u7684\u200b\u725b\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7167\u7247\u200b\u9700\u8981\u200b\u53d8\u5316\u200b</p> <p>\u200b\u6211\u4eec\u200b\u5bf9\u200b\u4e0a\u9762\u200b\u7684\u200b\u8ba8\u8bba\u200b\u8fdb\u884c\u200b\u603b\u7ed3\u200b\uff0c\u200b\u5982\u679c\u200b\u7167\u7247\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u53ef\u80fd\u200b\u6709\u200b\u5982\u4e0b\u200b\u60c5\u51b5\u200b</p> <ol> <li>\u200b\u6d4b\u91cf\u200b\u540e\u200b \u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5373\u200b \\(recentcnt \\ne maxcnt\\)</li> <li>\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u800c\u200b\u8be5\u6b21\u200b\u53d8\u5316\u200b\u7684\u200b\u725b\u4e3a\u200b\u6d4b\u91cf\u200b\u524d\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u5176\u200b\u4ea7\u91cf\u200b\u53d8\u5c0f\u200b\uff0c\u200b\u53d8\u5316\u200b\u540e\u200b\u4e0d\u518d\u200b\u662f\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff1b\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u5982\u679c\u200b\u5176\u200b\u4ea7\u91cf\u200b\u53d8\u200b\u5927\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u662f\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8be5\u6761\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8868\u8ff0\u200b\u4e3a\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e14\u200b\u8be5\u6b21\u200b\u53d8\u5316\u200b\u7684\u200b\u725b\u4e3a\u200b\u6d4b\u91cf\u200b\u5176\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u5176\u200b\u53d8\u5316\u200b\u540e\u200b\u4e0d\u518d\u200b\u662f\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff1b\u200b\u8fdb\u4e00\u6b65\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u8be5\u6b21\u200b\u53d8\u5316\u200b\u7684\u200b\u725b\u200b\u4e0d\u662f\u200b\u6d4b\u91cf\u200b\u524d\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u539f\u672c\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\u6700\u7ec8\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u4ea7\u91cf\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\uff1b\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u8868\u8ff0\u200b\u4e3a\u200b \u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e14\u200b\u53d8\u5316\u200b\u540e\u200b\u539f\u672c\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u7684\u200b\u725b\u200b\u4e0d\u518d\u200b\u662f\u200b\u73b0\u5728\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u7684\u200b\u725b\u200b</li> <li>\u200b\u6d4b\u91cf\u200b\u540e\u200b\u6700\u5927\u200b\u4ea7\u91cf\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e14\u200b\u4e3a\u200b\u6d4b\u91cf\u200b\u524d\u200b\u4ea7\u91cf\u200b\u975e\u200b\u6700\u5927\u200b\u7684\u200b\u725b\u200b\u53d1\u751f\u53d8\u5316\u200b</li> </ol> <p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c31\u200b\u89e3\u51b3\u200b\u4e86\u200b\u4f55\u65f6\u200b\u7167\u7247\u200b\u4f1a\u200b\u53d8\u5316\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u5168\u7a0b\u200b\u53ea\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b \\(recentmilk, maxmilk, recentcnt, maxcnt\\) \u200b\u4e0e\u200b\u652f\u6301\u200b\u7ed9\u5b9a\u200b\u5976\u725b\u200b\u67e5\u8be2\u200b\u5976\u725b\u200b\u5f53\u524d\u200b\u4ea7\u5976\u91cf\u200b\u3001\u200b\u7ed9\u5b9a\u200b\u5976\u91cf\u200b\u67e5\u8be2\u200b\u5f53\u524d\u200b\u4ea7\u5976\u91cf\u200b\u4e3a\u200b\u8be5\u200b\u5976\u91cf\u200b\u7684\u200b\u5976\u725b\u200b\u6709\u200b\u591a\u5c11\u200b\u4e2a\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff1b\u200b\u5bb9\u6613\u200b\u53d1\u73b0\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u7ed3\u6784\u200b\u53ea\u200b\u9700\u8981\u200b\u652f\u6301\u200b\u5355\u70b9\u200b\u6539\u200b\u5355\u70b9\u200b\u67e5\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u5f00\u200b\u7ebf\u6bb5\u200b\u6811\u200b\uff0c\u200b\u53ea\u5f00\u200b \\(map\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u6211\u4eec\u200b\u679a\u4e3e\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u6d4b\u91cf\u200b\uff0c\u200b\u6309\u200b\u9898\u610f\u200b\u5bf9\u200b\u4e24\u4e2a\u200b \\(map\\) \u200b\u8fdb\u884c\u200b\u7ef4\u62a4\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u524d\u200b\u8fdb\u884c\u200b \\(recentmilk = maxmilk, recentcnt = maxcnt\\) \u200b\u5b58\u50a8\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u540e\u200b\u66f4\u65b0\u200b \\(maxmilk\\) \u200b\u4e0e\u200b \\(maxcnt\\)\uff0c\u200b\u518d\u200b\u8bb0\u5f55\u200b\u672c\u6b21\u200b\u66f4\u6539\u200b\u662f\u5426\u200b\u66f4\u6539\u200b\u7684\u200b\u662f\u200b\u6700\u5927\u200b\u725b\u200b\uff0c\u200b\u66f4\u6539\u200b\u540e\u200b\u539f\u672c\u200b\u6700\u5927\u200b\u725b\u200b\u662f\u5426\u200b\u8fd8\u662f\u200b\u6700\u5927\u200b\u725b\u200b\uff0c\u200b\u6309\u7167\u200b\u603b\u7ed3\u200b\u51fa\u200b\u7684\u200b\u6761\u4ef6\u200b\u8fdb\u884c\u200b\u7ef4\u62a4\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5, INF = 2e9;\n\nint N, G, ans;\n\nstruct Measure{\n    int day;\n    int id;\n    long long c;\n}m[MAXN];\n\nbool cmp(Measure a, Measure b){\n    return a.day &lt; b.day;\n}\n\nmap &lt;int, long long&gt; milk;\nmap &lt;int, int&gt; cnt;\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;G);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d%lld\", &amp;m[i].day, &amp;m[i].id, &amp;m[i].c);\n    }\n    sort(m+1, m+N+1, cmp);\n\n    long long maxmilk=0, recentmilk=0;\n    int maxcnt=INF, recentcnt=0;\n    bool flagbefore = false, flagafter = false;\n    cnt[0] = INF;\n\n    for (int i=1; i&lt;=N; i++){\n        if (milk[m[i].id] == maxmilk){\n            flagbefore = true;\n        }\n        else{\n            flagbefore = false;\n        }\n        cnt[milk[m[i].id]]--;\n        if (cnt[milk[m[i].id]] == 0){\n            cnt.erase(milk[m[i].id]);\n        }\n        milk[m[i].id]+=m[i].c;\n        cnt[milk[m[i].id]]++;\n\n        recentmilk = maxmilk;\n        recentcnt = maxcnt;\n        auto it = cnt.end();\n        it--;\n        maxmilk = (*it).first;\n        maxcnt = (*it).second;\n        if (milk[m[i].id] == maxmilk){\n            flagafter = true;\n        }\n        else{\n            flagafter = false;\n        }\n\n        if (maxcnt != recentcnt){\n            ans++;\n        }\n        else if ((flagbefore == false || flagafter == false) &amp;&amp; (maxmilk != recentmilk)){\n            ans++;\n        }\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4089-usaco---the-bovine-shuffle","title":"P4089 USACO - The Bovine Shuffle","text":"<p>P4089</p> <p>\u200b\u6211\u4eec\u200b\u89c2\u5bdf\u200b\u5230\u200b\uff0c\u200b\u5982\u679c\u200b \\(i, a[i], a[a[i]], ...\\) \u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u73af\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u73af\u91cc\u200b\u7684\u200b\u5976\u725b\u200b\u53ea\u4f1a\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u73af\u91cc\u200b\u6309\u200b\u987a\u5e8f\u200b\u6765\u56de\u200b\u8df3\u200b\uff1b\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u521d\u59cb\u200b\u65f6\u200b\u8fd9\u4e2a\u200b\u73af\u4e0a\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u70b9\u200b\u90fd\u200b\u6709\u200b\u5976\u725b\u200b\uff0c\u200b\u5219\u200b \u200b\u4efb\u610f\u200b\u65f6\u523b\u200b\u8fd9\u4e2a\u200b\u73af\u4e0a\u200b\u4e5f\u200b\u90fd\u200b\u6709\u200b\u5976\u725b\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6bcf\u4e2a\u200b \\(i\\) \u200b\u5bf9\u200b \\(a[i]\\) \u200b\u8fde\u8fb9\u200b\uff0c\u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b \u200b\u5224\u73af\u200b\u5373\u53ef\u200b\uff0c\u200b\u6700\u7ec8\u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b\u5220\u4e0d\u6389\u200b\u7684\u200b\u70b9\u200b\u7684\u200b\u4e2a\u6570\u200b\u5c31\u662f\u200b\u7b54\u6848\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N, ans;\nint a[MAXN], in[MAXN];\n\nvector &lt;int&gt; G[MAXN];\n\nvoid TopoSort(){\n    queue &lt;int&gt; S;\n\n    for (int i=1; i&lt;=N; i++){\n        if (in[i] == 0){\n            S.push(i);\n        }   \n    }\n\n    while (!S.empty()){\n        int recent = S.front();\n        S.pop();\n        ans++;\n\n        for (int i=0; i&lt;G[recent].size(); i++){\n            in[G[recent][i]]--;\n            if (in[G[recent][i]] == 0){\n                S.push(G[recent][i]);\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;a[i]);\n        G[i].push_back(a[i]);\n        in[a[i]]++;\n    }\n\n    TopoSort();\n    printf(\"%d\", N-ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4378-out-of-sorts-s","title":"P4378 Out Of Sorts S","text":"<p>P4378</p> <p>\u200b\u672c\u8d28\u200b\u4e0a\u200b\uff0c\u200b\u4e00\u6b21\u200b\u5faa\u73af\u200b\u4f1a\u200b\u6d88\u6389\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\uff1b\u200b\u56e0\u6b64\u200b\uff0c\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u6700\u200b\u591a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u4e2a\u6570\u200b \\(+1\\) \u200b\u5373\u200b\u4e3a\u200b\u7b54\u6848\u200b\uff1b</p> <p>\u200b\u6211\u4eec\u200b\u611f\u6027\u200b\u7406\u89e3\u200b\uff0c\u200b\u5c06\u200b\u6570\u5217\u200b\u4ece\u5c0f\u5230\u5927\u200b\u6392\u5e8f\u200b\uff0c\u200b\u8ba4\u4e3a\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u524d\u79fb\u200b\u7684\u200b\u8ddd\u79bb\u200b\u53cd\u6620\u200b\u4e86\u200b\u5176\u539f\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u7684\u200b\u6570\u91cf\u200b\uff1b\u200b\u4f46\u662f\u200b\u8fd9\u4e48\u200b\u505a\u200b\u6709\u200b\u95ee\u9898\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u524d\u79fb\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5e76\u200b\u4e0d\u80fd\u200b\u771f\u6b63\u200b\u4ee3\u8868\u200b\u5176\u539f\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u6570\u91cf\u200b\uff0c\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u8bbe\u539f\u6570\u200b\u5217\u4e3a\u200b \\(3, 2, 1\\)\uff0c\u200b\u6392\u5e8f\u200b\u540e\u200b\u4e3a\u200b \\(1, 2, 3\\)\uff0c\u200b\u5143\u7d20\u200b \\(2\\) \u200b\u524d\u79fb\u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b \\(0\\)\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5176\u539f\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9006\u5e8f\u200b\u5bf9\u200b \\((3, 2)\\)\uff1b</p> <p>\u200b\u95ee\u9898\u200b\u51fa\u200b\u5728\u200b\u54ea\u200b\u5462\u200b\uff1f\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\uff0c\\(2\\) \u200b\u524d\u9762\u200b\u6709\u200b\u4e00\u4e2a\u200b \\(1\\)\uff0c\u200b\u9876\u200b\u6389\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u524d\u79fb\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u8fd9\u200b\u8bf4\u660e\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b \\(a_i\\) \u200b\u540e\u200b\u6709\u200b\u6bd4\u200b\u5b83\u200b\u7684\u200b\u503c\u200b\u8fd8\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b \\(a_j (a_j &lt; a_i)\\)\uff0c\u200b\u6392\u5e8f\u200b\u540e\u200b \\(a_j\\) \u200b\u4f1a\u53d8\u200b\u5230\u200b \\(a_i\\) \u200b\u524d\u9762\u200b\u5f71\u54cd\u200b\u539f\u200b \\(a_i\\) \u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u4e2a\u6570\u200b\u7edf\u8ba1\u200b\uff1b\u200b\u4f46\u200b\u53c8\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b \u200b\u53ea\u200b\u5173\u6ce8\u200b\u9006\u5e8f\u200b\u5bf9\u6570\u200b\u6700\u5927\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u7531\u4e8e\u200b \\(a_i &gt; a_j\\)\uff0c\\(a_i\\) \u200b\u53ca\u200b\u4ee5\u524d\u200b\u6240\u6709\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5b83\u200b\u7684\u200b\u5143\u7d20\u200b\u90fd\u200b\u4f1a\u200b\u5927\u4e8e\u200b \\(a_j\\)\uff0c\u200b\u6240\u4ee5\u200b \\(a_j\\) \u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u4e2a\u6570\u200b\u4e25\u683c\u200b\u5927\u4e8e\u200b \\(a_i\\)\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u53ea\u200b\u5173\u6ce8\u200b \\(a_j\\) \u200b\u5373\u53ef\u200b\uff0c\\(a_i\\) \u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u6570\u91cf\u200b\u7edf\u8ba1\u200b\u5dee\u5f02\u200b\u5bf9\u200b\u7b54\u6848\u200b \u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u539f\u200b\u5e8f\u5217\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7edf\u8ba1\u200b\u5143\u7d20\u200b\u7684\u200b \u200b\u6700\u5927\u200b\u79fb\u52a8\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u6700\u540e\u200b \\(+1\\) \u200b\u5373\u53ef\u200b (\u200b\u4e3a\u4ec0\u4e48\u200b \\(+1\\)? \u200b\u56e0\u4e3a\u200b\u6700\u7ec8\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u5b8c\u6210\u200b\u540e\u200b\u8fd8\u8981\u200b\u518d\u200b\u626b\u200b\u4e00\u904d\u200b\u786e\u5b9a\u200b\u5df2\u7ecf\u200b\u4e0d\u200b\u9700\u8981\u200b\u518d\u200b\u6765\u200b\u4e00\u8f6e\u200b)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N, ans;\n\nstruct Node{\n    int val;\n    int pos;\n}num[MAXN];\n\nbool cmp(Node a, Node b){\n    if (a.val == b.val){\n        return a.pos &lt; b.pos;\n    }\n    return a.val &lt; b.val;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;num[i].val);\n        num[i].pos = i;\n    }\n    sort(num+1, num+N+1, cmp);\n\n    for (int i=1; i&lt;=N; i++){\n        ans = max(ans, num[i].pos-i);\n    }\n    printf(\"%d\", ans+1);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/16/2024716-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p4380-usaco---multiplayer-moo-s","title":"P4380 USACO - Multiplayer Moo S","text":"<p>P4380</p> <p>\u200b\u7b2c\u4e00\u200b\u95ee\u200b\u7b80\u5355\u200b \\(dfs\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u7b2c\u4e8c\u200b\u95ee\u200b</p> <p>\u200b\u9996\u5148\u200b\u6709\u200b\u4e00\u4e2a\u200b\u601d\u8def\u200b\uff0c\u200b\u76f4\u63a5\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u76f8\u90bb\u200b\u4e14\u200b\u989c\u8272\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u683c\u200b\uff0c\u200b\u4ee5\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u989c\u8272\u200b\u4e3a\u200b\u57fa\u51c6\u200b\u989c\u8272\u200b\uff0c\u200b\u66b4\u529b\u200b\u8fdb\u884c\u200b \\(dfs\\) \u200b\u7edf\u8ba1\u200b\u7b54\u6848\u200b\uff1b\u200b\u8fd9\u6837\u200b\u80af\u5b9a\u200b\u53ef\u4ee5\u200b\u5199\u200b\uff0c\u200b\u4f46\u200b\u6bd4\u8f83\u200b\u9ebb\u70e6\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6709\u200b\u4e00\u4e2a\u200b\u66f4\u597d\u200b\u7684\u200b\u601d\u8def\u200b</p> <p>\u200b\u5728\u200b\u8fdb\u884c\u200b\u7b2c\u4e00\u904d\u200b \\(dfs\\) \u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u9645\u4e0a\u200b\u5df2\u7ecf\u200b\u80fd\u591f\u200b\u5f97\u51fa\u200b\u6bcf\u4e2a\u200b\u8fde\u901a\u200b\u5757\u200b\u7684\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b (\u200b\u5982\u200b\u5927\u5c0f\u200b\uff0c\u200b\u989c\u8272\u200b)\uff0c\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u5728\u200b\u7b2c\u4e8c\u904d\u200b\u518d\u200b \\(dfs\\) \u200b\u4e00\u6b21\u200b\uff1b\u200b\u56e0\u6b64\u200b\uff0c\u200b\u7b2c\u4e00\u904d\u200b\u65f6\u200b\u6211\u4eec\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u6bcf\u4e2a\u200b\u8fde\u901a\u200b\u5757\u200b\u7684\u200b\u5927\u5c0f\u200b \\(siz\\) \u200b\u4e0e\u200b\u989c\u8272\u200b \\(col\\)\uff0c\u200b\u5f00\u200b\u7ed3\u6784\u200b\u4f53\u200b\u5b58\u50a8\u200b\uff0c\u200b\u540c\u65f6\u200b\u5f00\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b \\(belong[i][j]\\) \u200b\u8868\u793a\u200b \\((i, j)\\) \u200b\u683c\u200b\u5c5e\u4e8e\u200b\u54ea\u4e2a\u200b\u8fde\u901a\u200b\u5757\u200b\uff1b\u200b\u6c42\u200b\u7b2c\u4e8c\u200b\u95ee\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ecd\u7136\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u65b9\u683c\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u6b21\u200b\u662f\u200b\u4e3a\u4e86\u200b\u5728\u200b\u76f8\u90bb\u200b\u7684\u200b\u8fde\u901a\u200b\u5757\u95f4\u200b \u200b\u8fde\u8fb9\u200b</p> <p>\u200b\u8fde\u597d\u200b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f97\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65e0\u5411\u200b\u8fde\u901a\u200b\u56fe\u200b\uff0c\u200b\u5e0c\u671b\u200b\u6c42\u200b\u51fa\u200b\u76f8\u90bb\u200b\u7684\u200b\u3001\u200b\u989c\u8272\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u989c\u8272\u200b\u4e4b\u4e00\u200b\u7684\u200b\u8fde\u901a\u200b\u5757\u200b\u7684\u200b\u5927\u5c0f\u200b\u4e4b\u200b\u548c\u200b\uff1b\u200b\u7531\u4e8e\u200b\u8fde\u901a\u200b\u5757\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u56fe\u4e0a\u200b\u76f4\u63a5\u200b\u76f8\u8fde\u200b\u7684\u200b\u4e24\u200b\u8fde\u901a\u200b\u5757\u200b\u989c\u8272\u200b\u5fc5\u7136\u200b\u4e0d\u540c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u8fde\u901a\u200b\u5757\u200b\u53ca\u200b\u989c\u8272\u200b\uff0c\\(dfs\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u4e0a\u200b\uff0c\u200b\u9996\u5148\u200b\uff0c\u200b\u8fde\u8fb9\u200b\u65f6\u200b\u8bb0\u5f97\u200b\u5f00\u200b \\(vis\\) \u200b\u6570\u7ec4\u200b\u8bb0\u5f55\u200b\u76f8\u90bb\u200b\u7684\u200b\u8fde\u901a\u200b\u5757\u200b\u662f\u5426\u200b\u5df2\u7ecf\u200b\u8fde\u8fc7\u200b\u8fb9\u200b\u4e86\u200b\uff0c\u200b\u4e0d\u8981\u200b\u91cd\u590d\u200b\u8fde\u8fb9\u200b\uff1b\u200b\u5176\u6b21\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fde\u8fb9\u200b\u65f6\u200b\u540c\u65f6\u200b\u8bb0\u5f55\u200b\u6bcf\u4e2a\u200b\u8fde\u901a\u200b\u5757\u200b\u76f8\u90bb\u200b\u7684\u200b\u8fde\u901a\u200b\u5757\u200b\u6709\u200b\u4ec0\u4e48\u200b\u989c\u8272\u200b (\u200b\u5373\u200b \\(dfs\\) \u200b\u65f6\u8be5\u200b\u8fde\u901a\u200b\u5757\u200b\u9664\u200b\u81ea\u8eab\u200b\u989c\u8272\u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u989c\u8272\u200b\u90fd\u200b\u6709\u200b\u4ec0\u4e48\u200b\u9009\u62e9\u200b)\uff0c\u200b\u65b9\u4fbf\u200b \\(dfs\\)\uff1b\u200b\u6bcf\u6b21\u200b\u679a\u4e3e\u200b\u8fde\u901a\u200b\u5757\u200b\uff0c\u200b\u76f4\u63a5\u200b\u628a\u200b\u8be5\u200b\u8fde\u901a\u200b\u5757\u200b\u6240\u6709\u200b\u7684\u200b\u989c\u8272\u200b\u53ef\u80fd\u200b \\(dfs\\) \u200b\u5b8c\u200b\uff0c\u200b\u4ee5\u540e\u200b\u518d\u200b\u9047\u5230\u200b\u8be5\u200b\u8fde\u901a\u200b\u5757\u200b\u76f4\u63a5\u200b \\(continue\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 505, MAXL = 7e4+5;\n\nint N, cnt, recentsiz, ans1, ans2;\nint mv[4][2] = {0, 1, 0, -1, 1, 0, -1, 0};\nint mp[MAXN][MAXN], belong[MAXN][MAXN];\nbool vis[MAXN][MAXN];\n\nmap &lt;int, bool&gt; visedge[MAXL];\n\nstruct Node{\n    int siz;\n    int col;\n}node[MAXL];\n\nvector &lt;int&gt; G[MAXL];\n\nvoid dfs(int x, int y, int tp){\n    belong[x][y] = cnt;\n    node[cnt].siz++;\n\n    for (int i=0; i&lt;4; i++){\n        int nx = x+mv[i][0];\n        int ny = y+mv[i][1];\n\n        if (nx&lt;1 || ny&lt;1 || nx&gt;N || ny&gt;N){\n            continue;\n        }\n        if (mp[nx][ny] != tp || vis[nx][ny] == true){\n            continue;\n        }\n\n        vis[nx][ny] = true;\n        dfs(nx, ny, tp);\n    }\n}\n\nvector &lt;int&gt; colors[MAXL];\nmap &lt;int, bool&gt; vis_2[MAXL];\n\nvoid dfs_2(int nod, int col1, int col2){\n    recentsiz += node[nod].siz;\n    for (int i=0; i&lt;G[nod].size(); i++){\n        if (node[G[nod][i]].col == col1 &amp;&amp; vis_2[G[nod][i]][col2] == false){\n            vis_2[G[nod][i]][col2] = true;\n            dfs_2(G[nod][i], col1, col2);       \n        }\n        else if (node[G[nod][i]].col == col2 &amp;&amp; vis_2[G[nod][i]][col1] == false){\n            vis_2[G[nod][i]][col1] = true;\n            dfs_2(G[nod][i], col1, col2);   \n        }\n    }   \n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        for (int j=1; j&lt;=N; j++){\n            scanf(\"%d\", &amp;mp[i][j]);\n        }\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        for (int j=1; j&lt;=N; j++){\n            if (vis[i][j] == false){\n                cnt++;\n                node[cnt].col = mp[i][j];\n                vis[i][j] = true;\n                dfs(i, j, mp[i][j]);\n            }   \n        }\n    }\n\n    for (int i=1; i&lt;=cnt; i++){\n        ans1 = max(ans1, node[i].siz);\n    }\n\n    int i, j, k;\n    for (i=1; i&lt;=N; i++){\n        for (j=1; j&lt;=N; j++){\n            for (k=0; k&lt;4; k++){\n                int nx = i+mv[k][0];\n                int ny = j+mv[k][1];\n\n                if (nx&lt;1 || ny&lt;1 || nx&gt;N || ny&gt;N){\n                    continue;\n                }\n                if (visedge[belong[nx][ny]][belong[i][j]] == false){\n                    visedge[belong[nx][ny]][belong[i][j]] = true;\n                    visedge[belong[i][j]][belong[nx][ny]] = true;               \n\n                    G[belong[nx][ny]].push_back(belong[i][j]);\n                    G[belong[i][j]].push_back(belong[nx][ny]);\n                    colors[belong[nx][ny]].push_back(node[belong[i][j]].col);\n                    colors[belong[i][j]].push_back(node[belong[nx][ny]].col);\n                }\n            }\n        }\n    }\n\n    for (int i=1; i&lt;=cnt; i++){\n        for (int j=0; j&lt;colors[i].size(); j++){\n            if (vis_2[i][colors[i][j]] == false){\n                vis_2[i][colors[i][j]] = true;\n                recentsiz = 0;\n                dfs_2(i, node[i].col, colors[i][j]);\n                ans2 = max(ans2, recentsiz);\n            }   \n        }\n    }\n\n    printf(\"%d\\n%d\", ans1, ans2);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u56fe\u8bba"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/","title":"2024.7.17 \u200b\u8bad\u7ec3\u200b\u8bb0\u5f55","text":"","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#bndsoj-usaco---connect-the-cows","title":"BNDSOJ USACO - Connect The Cows","text":"<p>Connect The Cows</p> <p>\u200b\u4e00\u200b\u5f00\u59cb\u200b\u62ff\u5230\u200b\u8fd9\u9053\u9898\u200b\uff0c\u200b\u8111\u6b8b\u200b\u76f4\u63a5\u200b\u5f00\u59cb\u200b\u4e00\u683c\u200b\u4e00\u683c\u200b \\(dfs\\)\uff0c\u200b\u96be\u60f3\u200b\u3001\u200b\u590d\u6742\u200b\u53c8\u200b\u5bb9\u6613\u200b\u5199\u9519\u200b\u2026\u2026\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u7531\u4e8e\u200b\u7ea6\u7ff0\u200b \u200b\u53ea\u4f1a\u200b\u5728\u200b\u725b\u5904\u200b\u8f6c\u5411\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u539f\u70b9\u200b \\((0, 0)\\) \u200b\u548c\u200b\u725b\u200b\u4e4b\u95f4\u200b \\(dfs\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u6211\u4eec\u200b\u679a\u4e3e\u200b\u6bcf\u200b\u53ea\u200b\u725b\u200b\u7684\u200b\u5750\u6807\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u4e24\u53ea\u200b\u725b\u200b \\(x\\) \u200b\u5750\u6807\u200b\u76f8\u540c\u200b\u6216\u200b \\(y\\) \u200b\u5750\u6807\u200b\u76f8\u540c\u200b\u5c31\u200b\u5728\u200b\u5b83\u4eec\u200b\u4e4b\u95f4\u200b\u8fde\u8fb9\u200b\uff1b\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u725b\u200b\u7684\u200b \\(x\\) \u200b\u5750\u6807\u200b\u4e3a\u200b \\(0\\) \u200b\u6216\u200b \\(y\\) \u200b\u5750\u6807\u200b\u4e5f\u200b\u4e3a\u200b \\(0\\)\uff0c\u200b\u4e5f\u200b\u522b\u5fd8\u4e86\u200b\u5728\u200b\u5b83\u200b\u4e0e\u200b\u539f\u70b9\u200b\u4e4b\u95f4\u200b\u8fde\u8fb9\u200b</p> <p>\\(dfs\\) \u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7f16\u53f7\u200b\u3001\u200b\u65b9\u5411\u200b \u200b\u4e0e\u200b\u7ecf\u8fc7\u200b\u7684\u200b\u725b\u200b\u7684\u200b\u6570\u91cf\u200b\uff1b\u200b\u522b\u5fd8\u4e86\u200b\u8bb0\u5f55\u200b\u65b9\u5411\u200b\uff01\u200b\u679a\u4e3e\u200b\u4e0e\u200b\u5f53\u524d\u200b\u70b9\u200b\u76f4\u63a5\u200b\u8fde\u8fb9\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u7279\u200b\u5224\u4e0b\u200b\u4e2a\u70b9\u200b\u662f\u200b \\(0\\) \u200b\u4e14\u200b\u5df2\u7ecf\u200b\u7ecf\u8fc7\u200b\u6240\u6709\u200b\u725b\u200b \u200b\u7684\u200b\u60c5\u51b5\u200b (\u200b\u56e0\u4e3a\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u7ecf\u8fc7\u200b\u6240\u6709\u200b\u725b\u200b\u56de\u5230\u200b\u539f\u70b9\u200b\u662f\u200b\u6ca1\u6709\u200b\u610f\u4e49\u200b\u7684\u200b\uff0c\u200b\u53cd\u6b63\u200b\u4e5f\u200b\u65e0\u6cd5\u200b\u6539\u53d8\u65b9\u5411\u200b)\uff1b\u200b\u82e5\u4e0b\u4e2a\u200b\u70b9\u200b\u4e3a\u200b\u725b\u200b\uff0c\u200b\u5fc5\u987b\u200b\u8f6c\u5411\u200b\uff0c\u200b\u65e0\u9700\u200b\u8003\u8651\u200b\u4e0d\u200b\u6539\u53d8\u65b9\u5411\u200b\u7684\u200b\u60c5\u51b5\u200b (\u200b\u5047\u8bbe\u200b\u4ece\u200b\u8d77\u59cb\u200b\u725b\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5411\u4e0b\u200b\u8d70\u200b\u5230\u200b\u4e2d\u95f4\u200b\u725b\u200b\uff0c\u200b\u5982\u679c\u200b\u4e2d\u95f4\u200b\u725b\u5904\u200b\u4e0d\u200b\u6539\u53d8\u65b9\u5411\u200b\uff0c\u200b\u53ea\u6709\u200b\u5728\u200b\u8be5\u200b\u5934\u725b\u200b\u4e0b\u65b9\u200b\u8fd8\u6709\u200b\u4e00\u5934\u200b\u725b\u65f6\u200b\u6709\u200b\u610f\u4e49\u200b\uff1b\u200b\u53c8\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b\u8fde\u8fb9\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u8d77\u59cb\u200b\u725b\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5411\u200b\u8fd9\u200b\u4e00\u5934\u200b\u725b\u8fde\u200b\u4e00\u6761\u200b\u8fb9\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u4e0d\u200b\u6539\u53d8\u65b9\u5411\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u7b54\u6848\u200b\u4f1a\u200b\u88ab\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 15;\n\nint N, ans;\n\nstruct Cow{\n    int x;\n    int y;\n}cow[MAXN];\n\nstruct Edge{\n    int to;\n    int dir;\n};\n\nvector &lt;Edge&gt; G[MAXN];\n\nvoid show(){\n    cout &lt;&lt; \"show: \" &lt;&lt; endl;\n    for (int i=0; i&lt;=N; i++){\n        for (int j=0; j&lt;G[i].size(); j++){\n            cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; G[i][j].to &lt;&lt; \", dir = \" &lt;&lt; G[i][j].dir &lt;&lt; endl;\n        }\n    }\n}\n\nbool vis[MAXN];\n\nvoid dfs(int node, int dir, int cnt){\n    if (node == 0 &amp;&amp; cnt == N+1){\n        ans++;\n        return; \n    }\n\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (dir == G[node][i].dir){\n            if (G[node][i].to == 0 &amp;&amp; cnt == N+1){\n                dfs(G[node][i].to, dir, cnt);\n            }\n\n            if (G[node][i].to != 0 &amp;&amp; vis[G[node][i].to] == false){\n                vis[G[node][i].to] = true;\n                for (int j=0; j&lt;4; j++){\n                    if (j != dir){\n                        dfs(G[node][i].to, j, cnt+1);\n                    }   \n                }\n                vis[G[node][i].to] = false;\n            }\n        }\n    }   \n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d\", &amp;cow[i].x, &amp;cow[i].y);\n        if (cow[i].x == 0){\n            if (cow[i].y &gt; 0){\n                G[0].push_back({i, 0});\n                G[i].push_back({0, 2});\n            }\n            else{\n                G[0].push_back({i, 2});\n                G[i].push_back({0, 0});\n            }\n        }\n        else if (cow[i].y == 0){\n            if (cow[i].x &gt; 0){\n                G[0].push_back({i, 3});\n                G[i].push_back({0, 1});\n            }\n            else{\n                G[0].push_back({i, 1});\n                G[i].push_back({0, 3});\n            }\n        }\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        for (int j=i+1; j&lt;=N; j++){\n            if (cow[i].x == cow[j].x){\n                if (cow[i].y &gt; cow[j].y){\n                    G[i].push_back({j, 2}); \n                    G[j].push_back({i, 0});\n                }\n                else{\n                    G[i].push_back({j, 0});\n                    G[j].push_back({i, 2});\n                }\n            }\n            else if (cow[i].y == cow[j].y){\n                if (cow[i].x &gt; cow[j].x){\n                    G[i].push_back({j, 1}); \n                    G[j].push_back({i, 3});\n                }\n                else{\n                    G[i].push_back({j, 3});\n                    G[j].push_back({i, 1});\n                }\n            }\n        }\n    }\n\n    // show();\n\n    vis[0] = true;\n    dfs(0, 0, 1);\n    dfs(0, 1, 1);\n    dfs(0, 2, 1);\n    dfs(0, 3, 1);\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#bndsoj-usaco---wrong-directions","title":"BNDSOJ USACO - Wrong Directions","text":"<p>Wrong Directions</p> <p>\u200b\u6211\u4eec\u200b\u5982\u679c\u200b\u6bcf\u6b21\u200b\u66f4\u6539\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u518d\u200b\u4ece\u5934\u200b\u626b\u200b\u4e00\u904d\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n^2)\\)\uff0c\u200b\u663e\u7136\u200b\u4f1a\u200b\u8d85\u65f6\u200b</p> <p>\u200b\u6211\u4eec\u200b\u4f18\u5316\u200b\u66b4\u529b\u200b\uff0c\u200b\u8003\u8651\u200b\u5c06\u200b\u539f\u200b\u5b57\u7b26\u4e32\u200b\u5206\u4e3a\u200b\u4e09\u6bb5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u4e3a\u200b\u66f4\u6539\u200b\u7684\u200b\u5b57\u7b26\u200b\u3001\u200b\u66f4\u6539\u200b\u7684\u200b\u5b57\u7b26\u200b\u524d\u6bb5\u200b\u3001\u200b\u66f4\u6539\u200b\u7684\u200b\u5b57\u7b26\u200b\u540e\u200b\u6bb5\u200b\u4e09\u6bb5\u200b\uff1b\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(N\\) \u200b\u7684\u200b\u539f\u200b\u5b57\u7b26\u4e32\u200b \\(s[i]\\) \u200b\u8fdb\u884c\u200b\u9884\u5904\u7406\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b \u200b\u53ea\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\u66f4\u6539\u200b\u524d\u6bb5\u200b\u8d70\u200b\u5230\u200b\u54ea\u91cc\u200b\u3001\u200b\u66f4\u6539\u200b\u540e\u6bb5\u200b\u76f8\u8f83\u200b\u4e8e\u200b\u539f\u70b9\u200b\u7684\u200b\u76f8\u5bf9\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9884\u5904\u7406\u200b\u51fa\u200b \u200b\u524d\u7f00\u200b\u4f4d\u7f6e\u200b\u6570\u7ec4\u200b \\(before[i]\\)\uff0c\u200b\u8bb0\u5f55\u200b\u6309\u7167\u200b\u5b50\u4e32\u200b \\(s[1...i]\\) \u200b\u64cd\u4f5c\u200b\u540e\u200b\u8d70\u200b\u5230\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff1b\u200b\u518d\u200b\u5904\u7406\u200b\u51fa\u200b \u200b\u540e\u7f00\u200b\u4f4d\u7f6e\u200b\u6570\u7ec4\u200b \\(after[i]\\)\uff0c\u200b\u8bb0\u5f55\u200b\u6309\u7167\u200b\u5b50\u4e32\u200b \\(s[i...N]\\) \u200b\u64cd\u4f5c\u200b\u540e\u200b\u8d70\u200b\u5230\u200b\u7684\u200b\u4f4d\u7f6e\u200b (\u200b\u8d77\u59cb\u200b\u65b9\u5411\u200b\u90fd\u200b\u9ed8\u8ba4\u200b\u5411\u5317\u200b)\uff1b</p> <p>\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\uff0c\\(before[i]\\) \u200b\u6570\u7ec4\u200b\u662f\u200b\u5bb9\u6613\u200b\u7ef4\u62a4\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u7531\u4e8e\u200b \\(after[i]\\) \u200b\u6570\u7ec4\u200b\u662f\u200b\u5012\u200b\u7740\u200b\u5904\u7406\u200b\u7684\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u6309\u7167\u200b\u5e38\u89c4\u200b\u65b9\u6cd5\u200b\u7ef4\u62a4\u200b\uff1b\u200b\u8003\u8651\u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b\u7b2c\u200b \\(i\\) \u200b\u4f4d\u200b\u7684\u200b\u5b57\u7b26\u200b\u79cd\u7c7b\u200b\uff1a</p> <ol> <li>\u200b\u5982\u679c\u200b\u4e3a\u200b \\(F\\)\uff0c\u200b\u90a3\u200b\u5f88\u200b\u597d\u529e\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4ee4\u200b \\(after[i].x = after[i+1].x\\)\uff0c\\(after[i].y = after[i+1].y+1\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u9ed8\u8ba4\u200b\u8d77\u59cb\u200b\u65b9\u5411\u5411\u200b\u5317\u200b\uff0c\u200b\u5411\u524d\u8d70\u200b\u4e00\u6b65\u200b\u5373\u200b\u4e3a\u200b\u5411\u5317\u8d70\u200b\u4e00\u6b65\u200b\uff0c\u200b\u4f53\u73b0\u200b\u5728\u200b \\(y\\) \u200b\u5750\u6807\u200b\u7684\u200b\u53d8\u5316\u200b\u4e0a\u200b</li> <li>\u200b\u5982\u679c\u200b\u4e3a\u200b \\(L\\)\uff0c\u200b\u90a3\u4e48\u200b\u539f\u6765\u200b\u7684\u200b \\(y\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\u53d8\u6210\u200b\u4e86\u200b\u73b0\u5728\u200b\u7684\u200b \\(x\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\uff0c\u200b\u539f\u6765\u200b\u7684\u200b \\(x\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\u53d8\u6210\u200b\u4e86\u200b\u73b0\u5728\u200b\u7684\u200b \\(y\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\uff1b\u200b\u81f3\u4e8e\u200b\u65b9\u5411\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u753b\u4e2a\u200b\u56fe\u200b\u8f85\u52a9\u200b\u7406\u89e3\u200b</li> </ol> <p></p> <p>\u200b\u6b64\u65f6\u200b\u6709\u200b \\(after[i].x = -after[i+1].y, after[i].y = after[i+1].x\\)</p> <ol> <li>\u200b\u5982\u679c\u200b\u4e3a\u200b \\(R\\)\uff0c\u200b\u90a3\u4e48\u200b\u539f\u6765\u200b\u7684\u200b \\(y\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\u8fd8\u662f\u200b\u53d8\u6210\u200b\u4e86\u200b\u73b0\u5728\u200b\u7684\u200b \\(x\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\uff0c\u200b\u539f\u6765\u200b\u7684\u200b \\(x\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\u4e5f\u200b\u8fd8\u662f\u200b\u53d8\u6210\u200b\u4e86\u200b\u73b0\u5728\u200b\u7684\u200b \\(y\\) \u200b\u79fb\u52a8\u200b\u91cf\u200b\uff1b\u200b\u5176\u5b9e\u200b\u56fe\u200b\u4e0e\u200b\u5de6\u8f6c\u200b\u65f6\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u53ea\u4e0d\u8fc7\u200b\u5de6\u8f6c\u200b\u65f6\u200b\u7684\u200b \\(after[i]\\) \u200b\u76f8\u5f53\u4e8e\u200b\u53f3\u8f6c\u200b\u65f6\u200b\u7684\u200b \\(after[i+1]\\)\u3001\u200b\u5de6\u8f6c\u200b\u65f6\u200b\u7684\u200b \\(after[i+1]\\) \u200b\u76f8\u5f53\u4e8e\u200b\u53f3\u8f6c\u200b\u65f6\u200b\u7684\u200b \\(after[i]\\)\uff1b\u200b\u7c7b\u4f3c\u200b\u7684\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b \\(after[i].x = after[i+1].y, after[i].y = -after[i+1].x\\)</li> </ol> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u51fa\u200b \\(after[i]\\) \u200b\u6570\u7ec4\u200b\u4e86\u200b\uff1b\u200b\u5b9e\u9645\u200b\u66f4\u6539\u200b\u7b2c\u200b \\(i\\) \u200b\u4f4d\u65f6\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5148\u200b\u5c06\u200b\u4f4d\u7f6e\u200b\u53d8\u66f4\u200b\u4e3a\u200b \\(before[i-1]\\)\uff0c\u200b\u8ba8\u8bba\u200b\u7b2c\u200b \\(i\\) \u200b\u4f4d\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c\u200b\u518d\u200b\u4e24\u200b\u5750\u6807\u200b\u5206\u522b\u200b\u589e\u52a0\u200b \\(after[i+1].x\\)\u3001\\(after[i+1].y\\) \u200b\u5373\u53ef\u200b\uff1b</p> <p>\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u6ce8\u610f\u200b\u6211\u4eec\u200b\u5728\u200b\u5904\u7406\u200b \\(after[i]\\) \u200b\u6570\u7ec4\u200b\u65f6\u200b\u9ed8\u8ba4\u200b\u65b9\u5411\u5411\u200b\u5317\u200b\uff0c\u200b\u4f46\u200b\u66f4\u6539\u200b\u5b57\u7b26\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6539\u53d8\u65b9\u5411\u200b\uff0c\u200b\u4f7f\u200b\u65b9\u5411\u200b\u4e0d\u662f\u200b\u5317\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u65b9\u5411\u200b\u7684\u200b\u53d8\u5316\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u65b9\u5411\u200b\u53d8\u6210\u200b\u897f\u200b / \u200b\u4e1c\u200b\uff0c\u200b\u90a3\u200b\u76f8\u5f53\u4e8e\u200b\u4e00\u6b21\u200b \u200b\u5de6\u8f6c\u200b / \u200b\u53f3\u8f6c\u200b\uff0c\u200b\u5426\u5219\u200b\u76f8\u5f53\u4e8e\u200b\u4e00\u6b21\u200b \u200b\u6309\u200b\u539f\u70b9\u200b\u5bf9\u79f0\u200b\u7ffb\u8f6c\u200b </p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nstring s;\nint ans;\n\nmap &lt;int, map&lt;int, bool&gt; &gt; vis;\n\nstruct Node{\n    int x;\n    int y;\n    int dir;\n}before[MAXN], after[MAXN];\n\npair&lt;int, int&gt; getnex(int x, int y, int dir){\n    int nx, ny;\n\n    if (dir == 0){\n        nx = x;\n        ny = y+1;\n    }       \n    else if (dir == 1){\n        nx = x-1;\n        ny = y;\n    }\n    else if (dir == 2){\n        nx = x;\n        ny = y-1;\n    }\n    else{\n        nx = x+1;\n        ny = y;\n    }\n\n    return {nx, ny};\n}\n\npair &lt;int, int&gt; offset(int x, int y, int dir){\n    if (dir == 1){\n        return {-y, x};\n    }\n    if (dir == 0){\n        return {x, y};\n    }\n    if (dir == 2){\n        return {-x, -y};\n    }\n    if (dir == 3){\n        return {y, -x};\n    }\n}\n\nint main(){\n    cin &gt;&gt; s;\n    before[0].x = 0;\n    before[0].y = 0;\n    before[0].dir = 0;\n\n    for (int i=1; i&lt;=s.size(); i++){\n        if (s[i-1] == 'L'){\n            before[i] = before[i-1];\n            before[i].dir = (before[i].dir+1)%4;\n        }   \n        else if (s[i-1] == 'R'){\n            before[i] = before[i-1];\n            before[i].dir = (before[i].dir+3)%4;\n        }\n        else{\n            int nx, ny;\n            nx = getnex(before[i-1].x, before[i-1].y, before[i-1].dir).first;\n            ny = getnex(before[i-1].x, before[i-1].y, before[i-1].dir).second;\n            before[i] = {nx, ny, before[i-1].dir};\n        }\n    }\n\n    for (int i=s.size(); i&gt;=1; i--){\n        if (s[i-1] == 'L'){\n            after[i].x = -after[i+1].y;\n            after[i].y = after[i+1].x;\n        }\n        else if (s[i-1] == 'R'){\n            after[i].x = after[i+1].y;\n            after[i].y = -after[i+1].x;\n        }\n        else{\n            after[i].x = after[i+1].x;\n            after[i].y = after[i+1].y+1;\n        }\n    }\n\n    for (int i=1; i&lt;=s.size(); i++){\n        int ansx = before[i-1].x, ansy = before[i-1].y, ansdir = before[i-1].dir;\n\n        if (s[i-1] == 'F'){\n            int offsetx = offset(after[i+1].x, after[i+1].y, (ansdir+1)%4).first;\n            int offsety = offset(after[i+1].x, after[i+1].y, (ansdir+1)%4).second;\n            int nx = ansx+offsetx;\n            int ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n\n            offsetx = offset(after[i+1].x, after[i+1].y, (ansdir+3)%4).first;\n            offsety = offset(after[i+1].x, after[i+1].y, (ansdir+3)%4).second;\n            nx = ansx+offsetx;\n            ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n        }\n        else if (s[i-1] == 'L'){\n            int offsetx = offset(after[i+1].x, after[i+1].y, (ansdir+3)%4).first;\n            int offsety = offset(after[i+1].x, after[i+1].y, (ansdir+3)%4).second;\n            int nx = ansx+offsetx;\n            int ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n\n            offsetx = offset(after[i+1].x, after[i+1].y+1, ansdir).first;\n            offsety = offset(after[i+1].x, after[i+1].y+1, ansdir).second;\n            nx = ansx+offsetx;\n            ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n        }\n        else if (s[i-1] == 'R'){\n            int offsetx = offset(after[i+1].x, after[i+1].y, (ansdir+1)%4).first;\n            int offsety = offset(after[i+1].x, after[i+1].y, (ansdir+1)%4).second;\n            int nx = ansx+offsetx;\n            int ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n\n            offsetx = offset(after[i+1].x, after[i+1].y+1, ansdir).first;\n            offsety = offset(after[i+1].x, after[i+1].y+1, ansdir).second;\n            nx = ansx+offsetx;\n            ny = ansy+offsety;\n            //cout &lt;&lt; nx &lt;&lt; \" \" &lt;&lt; ny &lt;&lt; endl;\n            if (!vis[nx][ny]){\n                vis[nx][ny] = true;\n                ans++;\n            }\n        }\n    }\n\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#bndsoj-usaco---three-lines","title":"BNDSOJ USACO - Three Lines","text":"<p>Three Lines</p> <p>\u200b\u770b\u5230\u200b\u9898\u200b\uff0c\u200b\u60f3\u5230\u200b\u4e00\u4e2a\u200b\u770b\u8d77\u6765\u200b\u5f88\u200b\u5bf9\u200b\u7684\u200b\u8d2a\u5fc3\u200b\uff1a\u200b\u6211\u4eec\u200b\u6309\u7167\u200b\u6bcf\u884c\u200b\u6709\u200b\u591a\u5c11\u200b\u5934\u725b\u200b\u4ece\u5927\u5230\u200b\u5c0f\u200b\u6392\u5e8f\u200b\u3001\u200b\u6bcf\u5217\u200b\u6709\u200b\u591a\u5c11\u200b\u5934\u725b\u200b\u4ece\u5927\u5230\u200b\u5c0f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5220\u53bb\u200b\u725b\u200b\u6700\u200b\u591a\u200b\u7684\u200b\u4e00\u884c\u200b\u3001\u200b\u725b\u200b\u6700\u200b\u591a\u200b\u7684\u200b\u4e00\u5217\u200b\uff0c\u200b\u518d\u200b\u5224\u65ad\u200b\u5269\u4e0b\u200b\u7684\u200b\u725b\u200b\u662f\u5426\u200b\u80fd\u591f\u200b\u7528\u200b\u4e00\u884c\u200b\u6216\u200b\u4e00\u5217\u200b\u8986\u76d6\u200b</p> <p>\u200b\u6211\u4eec\u200b\u611f\u6027\u200b\u7406\u89e3\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u8d2a\u5fc3\u200b\uff1b\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u7528\u200b\u4e24\u884c\u200b\u4e00\u5217\u200b\u6216\u200b\u4e24\u5217\u200b\u4e00\u884c\u200b\u5220\u725b\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5220\u200b\u4e00\u884c\u200b\u6216\u200b\u4e00\u5217\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u4e8e\u200b\u5220\u200b\u7684\u200b\u8fd9\u200b\u4e00\u884c\u200b / \u200b\u4e00\u5217\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u5220\u5b8c\u200b\u4e4b\u540e\u200b\u5c3d\u53ef\u80fd\u200b\u51cf\u5c0f\u200b\u63a5\u4e0b\u6765\u200b\u518d\u200b\u5220\u5217\u200b / \u200b\u884c\u200b \u200b\u7684\u200b\u538b\u529b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u5220\u200b\u5305\u542b\u200b\u725b\u200b\u6700\u200b\u591a\u200b\u7684\u200b\u4e00\u884c\u200b / \u200b\u4e00\u5217\u200b</p> <p>\u200b\u8fd9\u65f6\u5019\u200b\uff0c\u200b\u4f60\u200b\u53d1\u73b0\u200b\u8fd9\u6837\u200b\u611f\u6027\u200b\u7406\u89e3\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u663e\u7136\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff1a\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u6839\u672c\u200b\u4e0d\u7528\u200b\u884c\u200b\u6216\u200b\u4e0d\u7528\u200b\u5217\u200b\uff0c\u200b\u76f4\u63a5\u200b\u7528\u200b\u4e09\u884c\u200b / \u200b\u4e09\u5217\u200b\u5220\u725b\u200b\u600e\u4e48\u529e\u200b\uff1f\u200b\u662f\u200b\u7684\u200b\uff0c\u200b\u8d2a\u5fc3\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6b63\u786e\u6027\u200b\u65e0\u6cd5\u200b\u4fdd\u8bc1\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u9700\u8981\u200b \u200b\u7279\u5224\u200b\u4f7f\u7528\u200b\u4e09\u884c\u200b\u6216\u200b\u4e09\u5217\u200b\u80fd\u5426\u200b\u5220\u6389\u200b\u6240\u6709\u200b\u725b\u200b</p> <p>\u200b\u4e0d\u7279\u5224\u200b\u7684\u200b\u53cd\u200b\u4f8b\u5982\u200b\u4e0b\u200b\uff1a Text Only<pre><code>CCC\n CC\nCC\n</code></pre> \u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u4f1a\u200b\u5220\u9664\u200b\u7b2c\u4e00\u884c\u200b\u548c\u200b\u7b2c\u4e8c\u5217\u200b\uff0c\u200b\u5269\u4f59\u200b\u7684\u200b\u725b\u200b\u65e0\u6cd5\u200b\u7528\u200b\u4e00\u884c\u200b\u6216\u200b\u4e00\u5217\u200b\u8986\u76d6\u200b\uff1b\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u7528\u200b\u4e09\u884c\u200b\u6216\u8005\u200b\u4e09\u5217\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5220\u6389\u200b\u6240\u6709\u200b\u7684\u200b\u725b\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 5e4+5;\n\nint N, row, col, trow, tcol;\n\nstruct Cow{\n    int x;\n    int y;\n}cow[MAXN];\n\nmap &lt;int, bool&gt; vis1, vis2, t1, t2;\nmap &lt;int, int&gt; rc, cr, rc2, cr2;\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d\", &amp;cow[i].x, &amp;cow[i].y);\n        if (vis1[cow[i].x] == false){\n            vis1[cow[i].x] = true;\n            row++;\n        }\n        if (vis2[cow[i].y] == false){\n            vis2[cow[i].y] = true;\n            col++;\n        }\n    }\n\n    if (row &lt;= 3 || col &lt;= 3){\n        printf(\"1\");\n        return 0;\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        rc[cow[i].x]++;\n        cr[cow[i].y]++;\n    }\n    for (auto it = rc.begin(); it != rc.end(); it++){\n        rc2[(*it).second] = (*it).first;\n    }\n    for (auto it = cr.begin(); it != cr.end(); it++){\n        cr2[(*it).second] = (*it).first;\n    }\n    auto brc = rc2.end();\n    brc--;\n    auto bcr = cr2.end();\n    bcr--;\n    int mrc = (*brc).second;\n    int mcr = (*bcr).second;\n    // cout &lt;&lt; mrc &lt;&lt; \" \" &lt;&lt; mcr;\n\n    for (int i=1; i&lt;=N; i++){\n        if (cow[i].x == mrc || cow[i].y == mcr){\n            continue;\n        }\n        if (t1[cow[i].x] == false){\n            t1[cow[i].x] = true;\n            trow++;\n        }\n        if (t2[cow[i].y] == false){\n            t2[cow[i].y] = true;\n            tcol++;\n        }\n    }\n\n    if (trow == 1 || tcol == 1){\n        printf(\"1\");\n        return 0;\n    }\n    printf(\"0\");\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#bndsoj-usaco---islands","title":"BNDSOJ USACO - Islands","text":"<p>Islands</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u66b4\u529b\u200b\uff0c\u200b\u5982\u679c\u200b\u66b4\u529b\u200b\u679a\u4e3e\u200b\u6c34\u200b\u7684\u200b\u9ad8\u5ea6\u200b\uff0c\u200b\u7136\u540e\u200b\u626b\u200b\u4e00\u904d\u200b\u539f\u200b\u5e8f\u5217\u200b\u7edf\u8ba1\u200b\u5c9b\u5c7f\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(HN)\\)\uff0c\\(H\\) \u200b\u662f\u200b\u503c\u57df\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e3a\u200b \\(1e9\\)\uff0c\u200b\u663e\u7136\u200b\u4f1a\u200b\u7206\u70b8\u200b</p> <p>\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u503c\u57df\u200b\u5b9e\u5728\u200b\u662f\u200b\u592a\u5927\u200b\u4e86\u200b\uff0c\u200b\u600e\u6837\u200b\u907f\u514d\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u5462\u200b\uff1f\u200b\u6ce8\u610f\u200b\u5230\u200b\uff0c\u200b\u5982\u679c\u200b\u5c9b\u5c7f\u200b\u4e2a\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e34\u754c\u70b9\u200b \u200b\u5fc5\u7136\u200b\u662f\u200b\u6c34\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e0e\u200b\u4e4b\u524d\u200b\u67d0\u4e00\u200b\u8fd8\u200b\u6ca1\u6709\u200b\u88ab\u200b\u6df9\u6ca1\u200b\u7684\u200b\u9646\u673a\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u76f8\u540c\u200b\u65f6\u200b\uff1b\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u968f\u7740\u200b\u6c34\u4f4d\u200b\u9010\u6e10\u200b\u6da8\u9ad8\u200b\uff0c\u200b\u88ab\u200b\u6df9\u6ca1\u200b\u7684\u200b\u9646\u5730\u200b\u9ad8\u5ea6\u200b\u4e5f\u200b\u4f1a\u200b\u76f8\u5e94\u200b\u53d8\u9ad8\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b \u200b\u5bf9\u200b\u9646\u5730\u200b\u6309\u7167\u200b\u9ad8\u5ea6\u200b\u4ece\u5c0f\u5230\u5927\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4f9d\u6b21\u200b\u5904\u7406\u200b\u6df9\u6ca1\u200b\u5373\u53ef\u200b\uff1b\u200b\u8fd9\u6837\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u53d8\u4e3a\u200b \\(O(N^2)\\)\uff0c\u200b\u8fd8\u662f\u200b\u4f1a\u200b\u8d85\u65f6\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u4f18\u5316\u200b\u5982\u4f55\u200b\u7edf\u8ba1\u200b\u5c9b\u5c7f\u200b\u4e2a\u6570\u200b\u3002\u200b\u8003\u8651\u200b\u6c34\u4f4d\u200b\u4e0a\u6da8\u200b\u5f15\u8d77\u200b\u7684\u200b\u5c9b\u5c7f\u200b\u4e2a\u6570\u200b\u7684\u200b\u53d8\u5316\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u8bbe\u200b\u6df9\u6ca1\u200b\u524d\u6709\u200b \\(cnt\\) \u200b\u4e2a\u200b\u5c9b\u5c7f\u200b\uff0c\u200b\u5f53\u524d\u200b\u4e3a\u200b\u7b2c\u200b \\(i\\) \u200b\u5757\u200b\u9646\u5730\u200b\u88ab\u200b\u6df9\u6ca1\u200b\uff0c\u200b\u5206\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b\uff1a</p> <ol> <li>\u200b\u7b2c\u200b \\(i-1\\) \u200b\u5757\u200b\u4e0e\u200b\u7b2c\u200b \\(i+1\\) \u200b\u5757\u200b\u9646\u5730\u200b\u90fd\u200b\u88ab\u200b\u6df9\u6ca1\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(cnt=cnt-1\\)</li> <li>\u200b\u7b2c\u200b \\(i-1\\) \u200b\u5757\u200b\u4e0e\u200b\u7b2c\u200b \\(i+1\\) \u200b\u5757\u200b\u9646\u5730\u200b\u6709\u4e14\u200b\u4ec5\u200b\u6709\u200b\u4e00\u5757\u200b\u88ab\u200b\u6df9\u6ca1\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(cnt\\) \u200b\u4e0d\u53d8\u200b</li> <li>\u200b\u7b2c\u200b \\(i-1\\) \u200b\u5757\u200b\u4e0e\u200b\u7b2c\u200b \\(i+1\\) \u200b\u5757\u200b\u9646\u5730\u200b\u90fd\u200b\u6ca1\u6709\u200b\u88ab\u200b\u6df9\u6ca1\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(cnt=cnt+1\\)</li> </ol> <p>\u200b\u90a3\u4e48\u200b\u5982\u679c\u200b\u6df9\u6ca1\u200b\u7684\u200b\u9646\u5730\u200b\u7684\u200b\u65c1\u8fb9\u200b\u662f\u200b\u5cb8\u200b\u600e\u4e48\u529e\u200b\uff1f\u200b\u6ca1\u5173\u7cfb\u200b\uff0c\u200b\u521d\u59cb\u200b\u65f6\u4ee4\u200b\u7b2c\u200b \\(0\\) \u200b\u5757\u200b\u9646\u5730\u200b (\u200b\u5de6\u5cb8\u200b) \u200b\u4e0e\u200b\u7b2c\u200b \\(N+1\\) \u200b\u5757\u200b\u9646\u5730\u200b (\u200b\u53f3\u5cb8\u200b) \u200b\u4e5f\u200b\u88ab\u200b\u6df9\u6ca1\u200b\uff0c\u200b\u4e4b\u540e\u200b\u6b63\u5e38\u200b\u7edf\u8ba1\u200b\u5373\u53ef\u200b\uff1b\u200b\u8fd9\u6837\u200b\u7ef4\u62a4\u200b\u6bcf\u6b21\u200b\u66f4\u6539\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5c31\u200b\u4e3a\u200b \\(O(1)\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(NlogN)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N, ans;\nint h[MAXN];\nbool deleted[MAXN];\n\nstruct Node{\n    int val;\n    int pos;\n}sorth[MAXN];\n\nbool cmp(Node a, Node b){\n    return a.val &lt; b.val;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;h[i]);\n        sorth[i].val = h[i];\n        sorth[i].pos = i;\n    }\n    sort(sorth+1, sorth+N+1, cmp);\n    deleted[0] = true;\n    deleted[N+1] = true;\n\n    int recenth = -1, cnt = 1;\n    for (int i=1; i&lt;=N; ){\n        if (sorth[i].val != recenth){\n            ans = max(ans, cnt);\n            recenth = sorth[i].val;\n        }   \n        else{\n            int delpos = sorth[i].pos;\n            deleted[delpos] = true;\n            if (deleted[delpos-1] &amp;&amp; deleted[delpos+1]){\n                cnt--;\n            }\n            else if ((!deleted[delpos-1]) &amp;&amp; (!deleted[delpos+1])){\n                cnt++;\n            }\n            i++;\n        }\n    }\n\n    ans = max(ans, cnt);\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/18/2024717-%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/#p5120-usaco---convention-ii-s","title":"P5120 USACO - Convention II S","text":"<p>P5120</p> <p>\u200b\u8003\u8651\u200b\u6309\u7167\u200b\u9898\u610f\u200b\u6a21\u62df\u200b\uff0c\u200b\u4ee4\u200b \\(topend\\) \u200b\u4e3a\u200b\u5f53\u524d\u200b\u5403\u200b\u8349\u200b\u7684\u200b\u725b\u200b\u5403\u200b\u5b8c\u8349\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\\(cow[i].a\\) \u200b\u4e3a\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u5230\u8fbe\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\\(cow[i].t\\) \u200b\u4e3a\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u5403\u200b\u8349\u200b\u7684\u200b\u65f6\u95f4\u200b\uff1b\u200b\u7531\u4e8e\u200b\u6bcf\u6b21\u200b\u6765\u200b\u7684\u200b\u725b\u200b\uff0c\u200b\u6309\u7167\u200b\u8d44\u5386\u200b (\u200b\u5373\u200b\u8f93\u5165\u200b\u5148\u540e\u987a\u5e8f\u200b) \u200b\u6392\u5e8f\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u4f18\u5148\u200b\u961f\u5217\u200b\uff0c\u200b\u4e5f\u200b\u6309\u7167\u200b\u8f93\u5165\u200b\u5148\u540e\u987a\u5e8f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u6a21\u62df\u200b\u6392\u961f\u200b</p> <p>\u200b\u5f53\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u5230\u8fbe\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li> <p>\u200b\u8349\u5730\u200b\u4e0a\u200b\u6709\u200b\u725b\u200b\u5728\u200b\u5403\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8ba9\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u76f4\u63a5\u200b\u5165\u961f\u200b\u7b49\u5f85\u200b</p> </li> <li> <p>\u200b\u8349\u5730\u200b\u4e0a\u200b\u6ca1\u6709\u200b\u725b\u200b\u5728\u200b\u5403\u200b</p> </li> </ol> <p>2.1 \u200b\u961f\u5217\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u725b\u200b\u7b49\u5f85\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8ba9\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u5403\u200b\u5373\u53ef\u200b\uff1b\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e0d\u662f\u200b\u5165\u961f\u200b\uff0c\u200b\u6b64\u65f6\u200b\u76f4\u63a5\u200b\u4ee4\u200b \\(topend = cow[i].a+cow[i].t\\)</p> <p>2.2 \u200b\u961f\u5217\u200b\u4e2d\u6709\u200b\u725b\u200b\u7b49\u5f85\u200b\uff0c\u200b\u90a3\u4e48\u200b \u200b\u8ba9\u200b\u961f\u9996\u200b\u7684\u200b\u725b\u200b\u53bb\u200b\u5403\u200b\u8349\u200b \uff0c\u200b\u540c\u65f6\u200b \u200b\u7edf\u8ba1\u200b\u961f\u9996\u200b\u7684\u200b\u725b\u200b\u7684\u200b\u7b49\u5f85\u65f6\u95f4\u200b (\u200b\u6ce8\u610f\u200b\u4e0d\u662f\u200b\u7acb\u9a6c\u200b\u7edf\u8ba1\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u7684\u200b\u7b49\u5f85\u65f6\u95f4\u200b)\uff0c\u200b\u961f\u9996\u200b\u7684\u200b\u725b\u200b\u5728\u200b \\(q.top().a\\) \u200b\u65f6\u200b\u524d\u6765\u200b\uff0c\u200b\u5728\u200b \\(topend\\) \u200b\u65f6\u200b\u5403\u200b\u4e0a\u200b\u8349\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5176\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u4e3a\u200b \\(topend-q.top().a\\)\uff1b\u200b\u522b\u5fd8\u4e86\u200b\u5728\u200b\u7edf\u8ba1\u200b\u540e\u200b\u66f4\u65b0\u200b \\(topend\\)\uff0c\u200b\u52a0\u4e0a\u200b \\(q.top().t\\)\uff0c\u200b\u56e0\u4e3a\u200b\u5f53\u524d\u200b\u961f\u9996\u200b\u725b\u200b\u4e5f\u200b\u5f97\u200b\u5403\u200b\u4e00\u4f1a\u200b\uff1b\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u961f\u9996\u200b\u725b\u200b\u5403\u200b\u5b8c\u200b\u7684\u200b\u65f6\u95f4\u200b (\u200b\u4e5f\u200b\u5c31\u662f\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b \\(topend\\)) \u200b\u4ecd\u7136\u200b\u5c0f\u4e8e\u200b \\(cow[i].a\\)\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b \u200b\u91cd\u65b0\u5904\u7406\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u9700\u8981\u200b\u66f4\u6539\u200b\u51fa\u961f\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5373\u200b\u961f\u5217\u200b\u4e2d\u200b\u4e00\u4e9b\u200b\u770b\u8d77\u6765\u200b\u5728\u200b\u6392\u961f\u200b\u7684\u200b\u725b\u200b\u5b9e\u9645\u4e0a\u200b\u5df2\u7ecf\u200b\u5403\u200b\u5b8c\u200b\u4e86\u200b\uff1b\u200b\u5f53\u7136\u200b\uff0c\u200b\u5982\u679c\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b \\(topend\\) \u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \\(cow[i].a\\)\uff0c\u200b\u90a3\u4e48\u200b\u8bf4\u660e\u200b\u8fd8\u200b\u5f97\u200b\u7b49\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8ba9\u200b\u7b2c\u200b \\(i\\) \u200b\u5934\u725b\u200b\u5165\u961f\u200b\u5373\u53ef\u200b</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5904\u7406\u200b\u5b8c\u200b\u6240\u6709\u200b\u725b\u200b\u7684\u200b\u5230\u8fbe\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0c\u200b\u53ef\u80fd\u200b\u961f\u5217\u200b\u91cc\u200b\u8fd8\u6709\u200b\u725b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4f1a\u200b\u6709\u200b\u6ca1\u200b\u5403\u200b\u5b8c\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1b\u200b\u6b64\u65f6\u200b\u6309\u200b\u4e00\u6837\u200b\u7684\u200b\u65b9\u6cd5\u200b\u7ef4\u62a4\u200b\u961f\u5217\u200b\uff0c\u200b\u4f9d\u6b21\u200b\u8ba9\u200b\u961f\u9996\u200b\u725b\u200b\u51fa\u961f\u200b\uff0c\u200b\u76f4\u5230\u200b\u961f\u5217\u200b\u91cc\u200b\u6ca1\u6709\u200b\u725b\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint N, ans;\n\nstruct Cow{\n    int a;\n    int t;\n    int id;\n\n    bool operator &gt; (const Cow c) const {\n        return c.id &lt; id;\n    }\n}cow[MAXN];\n\npriority_queue &lt;Cow, vector&lt;Cow&gt;, greater&lt;Cow&gt; &gt; q;\n\nbool cmp(Cow a, Cow b){\n    return a.a &lt; b.a;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d\", &amp;cow[i].a, &amp;cow[i].t);\n        cow[i].id = i;\n    }\n    sort(cow+1, cow+N+1, cmp);\n    // cout &lt;&lt; cow[1].id &lt;&lt; endl;\n\n    int topend = cow[1].a+cow[1].t;\n    for (int i=2; i&lt;=N; i++){\n        if (topend &lt;= cow[i].a){\n            if (q.empty()){\n                topend = cow[i].a+cow[i].t;\n            }\n            else{\n                ans = max(ans, topend-q.top().a);\n                topend += q.top().t;\n                q.pop();\n                if (topend &lt; cow[i].a){\n                    i--;\n                }\n                else{\n                    q.push(cow[i]);\n                }\n            }\n        }\n        else{\n            q.push(cow[i]);\n        }   \n    }\n    while (!q.empty()){\n        ans = max(ans, topend-q.top().a);\n        topend += q.top().t;\n        q.pop();\n    }\n\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u66b4\u529b","\u601d\u7ef4","\u8d2a\u5fc3"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/","title":"2024.7.21 \u200b\u6a21\u62df\u200b\u8d5b\u200b(CSPS2022)\u200b\u8bb0\u5f55","text":"","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#t1---p8817","title":"T1 - P8817","text":"<p>P8817</p>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#sol","title":"Sol","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u663e\u7136\u200b\u8981\u200b\u9884\u5904\u7406\u200b\u51fa\u200b\u6bcf\u200b\u4e24\u4e2a\u200b\u70b9\u200b\u9700\u8981\u200b\u6362\u4e58\u200b\u51e0\u6b21\u200b\u8f66\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5bb9\u6613\u200b\u901a\u8fc7\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u70b9\u200b\u8dd1\u200b\u4e00\u6b21\u200b \\(bfs\\) \u200b\u5f97\u51fa\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^2)\\)\uff0c\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\uff1b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u8d2a\u5fc3\u200b\uff0c\u200b\u4ece\u200b\u8282\u70b9\u200b \\(1\\) \u200b\u8d70\u5230\u200b\u79bb\u200b\u53ef\u4ee5\u200b\u8d70\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u200b\uff0c\u200b\u518d\u200b\u4ece\u200b\u8fd9\u4e2a\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u200b\u8d70\u200b\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u200b\u2026\u2026\u200b\u4f46\u200b\u8fd9\u6837\u200b\u5bf9\u200b\u5417\u200b\uff1f\u200b\u597d\u50cf\u200b\u6709\u70b9\u200b\u95ee\u9898\u200b\uff1b\u200b\u6211\u4eec\u200b\u8d70\u200b\u5230\u200b\u5f53\u524d\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u65f6\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5bf9\u4e0b\u200b\u4e00\u6b65\u200b\u7684\u200b\u8303\u56f4\u200b\u6709\u200b\u5f71\u54cd\u200b\uff0c\u200b\u8fdb\u800c\u200b\u5f71\u54cd\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u80fd\u200b\u8d70\u200b\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6709\u200b\u540e\u6548\u200b\u6027\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u8d2a\u200b\uff1b\u200b\u4f46\u662f\u200b\u6211\u4eec\u200b\u5982\u679c\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u70b9\u200b\uff0c\\(O(n^4)\\) \u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u663e\u7136\u200b\u65e0\u6cd5\u200b\u63a5\u53d7\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u76f4\u63a5\u200b\u66b4\u529b\u200b\u8dd1\u200b\u8def\u200b</p> <p>\u200b\u8003\u8651\u200b\u4f18\u5316\u200b\u6211\u4eec\u200b\u7684\u200b\u8d2a\u5fc3\u200b\uff1b\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u540e\u6548\u200b\u6027\u200b\uff1f\u200b\u8fd9\u4e2a\u200b\u7b80\u5355\u200b\uff0c \u200b\u540e\u9762\u200b\u6ca1\u6709\u200b\u70b9\u200b \u200b\u4e86\u200b\u5457\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8bbe\u200b\u8def\u5f84\u200b\u4e3a\u200b \\(1-a-b-c-d-1\\)\uff0c\u200b\u5f53\u200b\u6211\u4eec\u200b\u786e\u5b9a\u200b \\(a,b,c\\) \u200b\u65f6\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8d2a\u200b \\(d\\)\uff1b\u200b\u53c8\u200b\u6ce8\u610f\u200b\u5230\u200b\u6574\u4e2a\u200b\u8def\u5f84\u200b\u662f\u200b\u5bf9\u79f0\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b \u200b\u628a\u200b\u6574\u4e2a\u200b\u8def\u5f84\u200b\u5206\u4e3a\u200b\u4e24\u7ec4\u200b\uff0c\u200b\u5373\u200b \\(\\{a, b\\}\\) \u200b\u4e0e\u200b \\(\\{c, d\\}\\)\uff1b\u200b\u5728\u200b\u786e\u5b9a\u200b \\(b\\) \u200b\u65f6\u200b\u53ef\u4ee5\u200b\u8d2a\u200b \\(a\\)\uff0c\u200b\u5728\u200b\u786e\u5b9a\u200b \\(c\\) \u200b\u65f6\u200b\u53ef\u4ee5\u200b\u8d2a\u200b \\(d\\)</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u8981\u200b\u5904\u7406\u200b\u51fa\u200b\u786e\u5b9a\u200b\u4e00\u4e2a\u70b9\u200b \\(node\\) \u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b\u70b9\u200b \\(node\\) \u200b\u4e14\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b\u70b9\u200b \\(1\\) \u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u70b9\u200b\uff1b\u200b\u8fd9\u200b\u5176\u5b9e\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5f00\u59cb\u200b\u7684\u200b \\(bfs\\) \u200b\u4e2d\u200b\u4e00\u5e76\u5904\u7406\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u5f53\u200b\u6211\u4eec\u200b\u786e\u5b9a\u200b\u70b9\u200b \\(node\\) \u200b\u53ef\u200b\u8fbe\u200b \\(i\\) \u200b\u65f6\u200b\uff0c\u200b\u518d\u200b\u5224\u65ad\u200b\u70b9\u200b \\(1\\) \u200b\u662f\u5426\u200b\u53ef\u200b\u8fbe\u200b \\(i\\)\uff1b\u200b\u6211\u4eec\u200b\u8bb0\u5f55\u200b\u8fd9\u6837\u200b\u53ef\u8fbe\u200b\u7684\u200b\u70b9\u200b \\(i\\)\uff0c\u200b\u76f4\u63a5\u200b\u6392\u5e8f\u200b\u5373\u53ef\u200b</p> <p>\u200b\u95ee\u9898\u200b\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5982\u679c\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u7684\u200b\u70b9\u200b \\(i\\)\uff0c\u200b\u90a3\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u53c8\u200b\u70b8\u200b\u4e86\u200b\uff1b\u200b\u600e\u4e48\u529e\u200b\uff1f\u200b\u5176\u5b9e\u200b\u4e0d\u200b\u9700\u8981\u200b\u7528\u200b\u8fd9\u4e48\u200b\u591a\u70b9\u200b\u7684\u200b\uff0c\u200b\u8bbe\u200b\u5df2\u77e5\u200b\u70b9\u200b \\(b\\)\uff0c\u200b\u70b9\u200b \\(i\\) \u200b\u53ea\u200b\u53ef\u80fd\u200b\u4e0e\u200b\u70b9\u200b \\(c\\)\u3001\u200b\u70b9\u200b \\(d\\) \u200b\u91cd\u5408\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6700\u591a\u200b\u8df3\u200b \\(2\\) \u200b\u6b21\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e0b\u200b \\(3\\) \u200b\u4e2a\u200b\u8fd9\u6837\u200b\u7684\u200b\u70b9\u200b \\(i\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2505, MAXL = 5e5+5;\n\nint n, m, k, front, rear;\nlong long ans;\nlong long w[MAXN];\nvector &lt;int&gt; G[MAXN];\n\nstruct Node{\n    int node;\n    int step;\n}q[MAXL];\n\nbool vis[MAXN];\nbool cget[MAXN][MAXN];\nvector &lt;int&gt; mget[MAXN];\n\nbool cmp(int a, int b){\n    return w[a]&gt;w[b];\n}\n\nvoid bfs(int start){\n    memset(vis, false, sizeof(vis));\n    vis[start] = true;\n    front = rear = 0;\n    q[rear].node = start;\n    q[rear].step = 0;\n    rear++;\n\n    while (front != rear){\n        int rnode = q[front].node;\n        int rstep = q[front].step;\n        front++;\n\n        if (rnode != start){\n            cget[start][rnode] = true;\n            if (cget[1][rnode] == true){\n                mget[start].push_back(rnode);\n                sort(mget[start].begin(), mget[start].end(), cmp);\n                if (mget[start].size() &gt;= 4) mget[start].pop_back();\n            }\n        }\n        if (rstep &gt; k) continue;\n        for (int i=0; i&lt;G[rnode].size(); i++){\n            if (vis[G[rnode][i]] == false){\n                vis[G[rnode][i]] = true;\n                q[rear].node = G[rnode][i];\n                q[rear].step = rstep+1;\n                rear++;\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d%d\", &amp;n, &amp;m, &amp;k);\n    for (int i=2; i&lt;=n; i++){\n        scanf(\"%lld\", &amp;w[i]);\n    }\n    for (int i=1; i&lt;=m; i++){\n        int node1, node2;\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        G[node1].push_back(node2);\n        G[node2].push_back(node1);\n    }\n\n    for (int i=1; i&lt;=n; i++){\n        bfs(i);\n    }\n\n    for (int i=2; i&lt;=n; i++){\n        for (int j=2; j&lt;=n; j++){\n            if (i == j || cget[i][j] == false) continue;\n            for (int p=0; p&lt;mget[i].size(); p++){\n                for (int q=0; q&lt;mget[j].size(); q++){\n                    if (i == mget[i][p] || i == mget[j][q] || j == mget[i][p] || j == mget[j][q] || mget[i][p] == mget[j][q]){\n                        continue;\n                    }\n                    ans = max(ans, w[i]+w[j]+w[mget[i][p]]+w[mget[j][q]]);\n                }\n            }\n        }\n    }\n\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#record","title":"Record","text":"<p>\u200b\u8d5b\u65f6\u200b\u53ef\u200b\u771f\u662f\u200b\u62bd\u8c61\u200b...\u200b\u6253\u200b\u5b8c\u200b \\(40pts\\) \u200b\u7eaf\u200b \\(O(n^4)\\) \u200b\u66b4\u529b\u200b\u540e\u200b\u5c31\u200b\u76f4\u63a5\u200b\u5f00\u200b\u540e\u9762\u200b\u7684\u200b\u9898\u200b\uff0c\u200b\u6d6a\u8d39\u200b\u4e86\u200b\u592a\u200b\u591a\u200b\u65f6\u95f4\u200b\uff1b\u200b\u867d\u7136\u200b\u6700\u540e\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u60f3\u51fa\u200b\u6b63\u89e3\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u65f6\u95f4\u200b\u4ea4\u4e0a\u200b\u4f18\u5316\u200b\u540e\u200b\u7684\u200b\u66b4\u529b\u200b\uff0c\u200b\u6bd4\u8d5b\u200b\u524d\u200b \\(1min\\) \u200b\u5361\u7ebf\u200b\u6ca1\u200b\u4ea4\u4e0a\u200b\uff0c\\(60pts \\rightarrow 45pts\\)\uff1b\u200b\u6240\u4ee5\u200b\u8fd8\u662f\u200b\u8bb0\u5f97\u200b\u522b\u592a\u200b\u6781\u9650\u200b\u2026\u2026</p>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#t2---p8818","title":"T2 - P8818","text":"<p>P8818</p> <p>\u200b\u7b80\u5355\u200b\u9898\u200b\u3002\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5bf9\u200b \\(a[i] (l_1 \\le i \\le r_1)\\) \u200b\u5168\u6b63\u200b/\u200b\u5168\u8d1f\u200b/\u200b\u6709\u200b\u6b63\u200b\u6709\u200b\u8d1f\u200b \u200b\u8fdb\u884c\u200b\u5206\u8ba8\u200b\uff0c\u200b\u5bf9\u4e8e\u200b \\(b[i] (l_2 \\le i \\le r_2)\\) \u200b\u540c\u7406\u200b\uff0c\u200b\u8fc7\u7a0b\u200b\u5e94\u8be5\u200b\u53ef\u4ee5\u200b\u4f18\u5316\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u4e48\u200b\u8ba8\u8bba\u200b\u6700\u200b\u76f4\u63a5\u200b\uff0c\u200b\u9002\u5408\u200b\u6211\u200b\u8fd9\u79cd\u200b\u6ca1\u8111\u5b50\u200b\u7684\u200b\u4eba\u200b</p> <p>\u200b\u5206\u8ba8\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b \\(a[i]\\) \u200b\u4efb\u610f\u200b\u533a\u95f4\u200b\u7684\u200b\u6700\u5927\u503c\u200b / \u200b\u6700\u5c0f\u503c\u200b / \u200b\u975e\u200b\u8d1f\u6570\u200b\u6700\u5c0f\u503c\u200b / \u200b\u975e\u200b\u6b63\u6570\u200b\u6700\u5927\u503c\u200b\u3001\\(b[i]\\) \u200b\u4efb\u610f\u200b\u533a\u95f4\u200b\u7684\u200b\u6700\u5927\u503c\u200b / \u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u76f4\u63a5\u200b\u679a\u4e3e\u200b\u663e\u7136\u200b\u4f1a\u70b8\u200b\uff0c\u200b\u4e0a\u200b\u76f8\u5173\u200b\u6570\u636e\u7ed3\u6784\u200b\u5373\u53ef\u200b\uff0c\u200b\u7ebf\u6bb5\u200b\u6811\u200b\u6216\u8005\u200b \\(ST\\) \u200b\u8868\u200b\u90fd\u884c\u200b\uff1b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5, MAXLOG = 20, INF = 1e9;\n\nint n, m, q, l1, r1, l2, r2, len1, len2;\nlong long m1, m2, m3, m4, m5, m6, m7, m8;\nlong long a[MAXN], b[MAXN], log_2[MAXN];\nlong long c1[MAXN][MAXLOG], c2[MAXN][MAXLOG], c3[MAXN][MAXLOG], c4[MAXN][MAXLOG];\nlong long d1[MAXN][MAXLOG], d2[MAXN][MAXLOG];\n\nvoid init(){\n    log_2[1] = 0;\n    log_2[2] = 1;\n\n    for (int i=3; i&lt;=max(n, m); i++){\n        log_2[i] = log_2[i/2]+1;\n    }\n}\n\nint main(){\n    scanf(\"%d%d%d\", &amp;n, &amp;m, &amp;q);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%lld\", &amp;a[i]);\n        c1[i][0] = a[i];\n        c2[i][0] = a[i];\n        if (a[i]==0) c3[i][0] = a[i], c4[i][0] = a[i];\n        else if (a[i]&gt;0) c3[i][0] = a[i], c4[i][0] = -INF;\n        else if (a[i]&lt;0) c3[i][0] = INF, c4[i][0] = a[i];\n    }\n    for (int i=1; i&lt;=m; i++){\n        scanf(\"%lld\", &amp;b[i]);\n        d1[i][0] = b[i];\n        d2[i][0] = b[i];\n    }\n\n    init();\n\n    for (int j=1; j&lt;=MAXLOG; j++){\n        for (int i=1; (i+(1&lt;&lt;j)-1)&lt;=n; i++){\n            c1[i][j] = max(c1[i][j-1], c1[i+(1&lt;&lt;(j-1))][j-1]);\n            c2[i][j] = min(c2[i][j-1], c2[i+(1&lt;&lt;(j-1))][j-1]);\n            c3[i][j] = min(c3[i][j-1], c3[i+(1&lt;&lt;(j-1))][j-1]);\n            c4[i][j] = max(c4[i][j-1], c4[i+(1&lt;&lt;(j-1))][j-1]);\n\n        }   \n    }   \n    for (int j=1; j&lt;=MAXLOG; j++){\n        for (int i=1; (i+(1&lt;&lt;j)-1)&lt;=m; i++){\n            d1[i][j] = max(d1[i][j-1], d1[i+(1&lt;&lt;(j-1))][j-1]);\n            d2[i][j] = min(d2[i][j-1], d2[i+(1&lt;&lt;(j-1))][j-1]);\n        }   \n    }   \n\n    for (int i=1; i&lt;=q; i++){\n        scanf(\"%d%d%d%d\", &amp;l1, &amp;r1, &amp;l2, &amp;r2);\n        len1 = r1-l1+1;\n        len2 = r2-l2+1;\n        m1 = max(c1[l1][log_2[len1]], c1[r1-(1&lt;&lt;log_2[len1])+1][log_2[len1]]);\n        m2 = min(c2[l1][log_2[len1]], c2[r1-(1&lt;&lt;log_2[len1])+1][log_2[len1]]);\n        m3 = max(d1[l2][log_2[len2]], d1[r2-(1&lt;&lt;log_2[len2])+1][log_2[len2]]);\n        m4 = min(d2[l2][log_2[len2]], d2[r2-(1&lt;&lt;log_2[len2])+1][log_2[len2]]);\n        m5 = min(c3[l1][log_2[len1]], c3[r1-(1&lt;&lt;log_2[len1])+1][log_2[len1]]);\n        m6 = max(c4[l1][log_2[len1]], c4[r1-(1&lt;&lt;log_2[len1])+1][log_2[len1]]);\n        // cout &lt;&lt; m1&lt;&lt; \" \" &lt;&lt; m2 &lt;&lt; \" \" &lt;&lt; m3 &lt;&lt; \" \" &lt;&lt; m4 &lt;&lt; \" \" &lt;&lt; m5 &lt;&lt; \" \" &lt;&lt; m6 &lt;&lt; endl;\n        if (m3 &lt;= 0){\n            if (m1 &lt;= 0) printf(\"%lld\\n\", m2*m3);\n            else if (m2 &gt;= 0) printf(\"%lld\\n\", m2*m4);\n            else printf(\"%lld\\n\", m2*m3);\n        }\n        else if (m4 &gt;= 0){\n            if (m1 &lt;= 0) printf(\"%lld\\n\", m1*m3);\n            else if (m2 &gt;= 0) printf(\"%lld\\n\", m1*m4);\n            else printf(\"%lld\\n\", m1*m4);\n        }\n        else{\n            if (m1 &lt;= 0) printf(\"%lld\\n\", m1*m3);\n            else if (m2 &gt;= 0) printf(\"%lld\\n\", m2*m4);\n            else printf(\"%lld\\n\", max(m3*m6, m4*m5));       \n        }\n    }\n    return 0;\n}\n</code></pre>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#record_1","title":"Record","text":"<p>\u200b\u8fd9\u9898\u200b\u672c\u8eab\u200b\u6ca1\u4ec0\u4e48\u200b\u96be\u5ea6\u200b\uff0c\u200b\u4e3b\u8981\u200b\u60f3\u200b\u8bf4\u200b\u8bf4\u200b\u62cd\u5b50\u200b\u7684\u200b\u4e8b\u200b\u2026\u2026\u200b\u5199\u200b\u4e86\u200b\u4e2a\u200b \\(py\\) \u200b\u6587\u4ef6\u200b\u5f53\u200b\u751f\u6210\u5668\u200b\uff0c\u200b\u7ed3\u679c\u200b\u8fd0\u884c\u200b\u65f6\u200b\u5199\u6210\u200b \\(python3 \\ xxx.py\\)\uff0c\u200b\u7535\u8111\u200b\u6070\u597d\u200b\u6ca1\u200b \\(python3\\)\uff0c\u200b\u518d\u200b\u52a0\u4e0a\u200b\u6211\u200b\u773c\u778e\u200b\u628a\u200b\u63d0\u793a\u200b\u770b\u6210\u200b \\(fc\\) \u200b\u7684\u200b\u63d0\u793a\u200b (\u200b\u4ec0\u4e48\u200b\u5b9e\u529b\u200b)\uff0c\u200b\u6123\u200b\u662f\u200b\u4e00\u76f4\u200b\u6ca1\u200b\u53d1\u73b0\u200b\u2026\u2026\\(1h\\) \u200b\u540e\u200b\u624d\u200b\u53d1\u73b0\u200b\u5e76\u200b\u6539\u6210\u200b\u4e86\u200b \\(python \\ xxx.py\\)\uff1b</p>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#t3---p8819","title":"T3 - P8819","text":"<p>P8819</p> <p>\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u80fd\u200b\u5b9e\u73b0\u200b\u53cd\u51fb\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u4ece\u200b \\(i\\) \u200b\u53ef\u4ee5\u200b\u8d70\u200b\u5230\u200b\u4e00\u4e2a\u200b\u73af\u200b\uff1b\u200b\u80fd\u200b\u5b9e\u73b0\u200b\u8fde\u7eed\u200b\u7a7f\u68ad\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u56fe\u4e2d\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7684\u200b\u51fa\u5ea6\u200b\u90fd\u200b\u662f\u200b \\(1\\)\uff1b\u200b\u4e8b\u5b9e\u4e0a\u200b\uff0c\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7684\u200b\u51fa\u5ea6\u200b\u90fd\u200b\u662f\u200b \\(1\\) \u200b\u5df2\u7ecf\u200b\u5305\u542b\u200b\u4ece\u200b\u4efb\u610f\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u90fd\u200b\u80fd\u200b\u8d70\u200b\u5230\u200b\u73af\u200b\u8fd9\u200b\u4e00\u200b\u6761\u4ef6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b \u200b\u53ea\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u51fa\u200b\u5ea6\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u64cd\u4f5c\u200b \\(1\\) \u200b\u4e0e\u200b\u64cd\u4f5c\u200b \\(3\\)\uff0c\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7ef4\u62a4\u200b\uff1b\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u64cd\u4f5c\u200b \\(2\\) \u200b\u4e0e\u200b\u64cd\u4f5c\u200b \\(4\\) \u200b\u4e0d\u592a\u200b\u597d\u529e\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u5220\u9664\u200b\u6216\u8005\u200b\u6062\u590d\u200b\u4e00\u4e2a\u70b9\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u662f\u200b\u8fd9\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u5165\u8fb9\u200b\uff1b\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u4e0e\u200b \\(i\\) \u200b\u8fde\u8fb9\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u65f6\u95f4\u200b\u5f00\u9500\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u63a5\u53d7\u200b\uff1b\u200b\u7531\u4e8e\u200b\u64cd\u4f5c\u200b \\(1\\) \u200b\u4e0e\u200b\u64cd\u4f5c\u200b \\(3\\) \u200b\u5bf9\u4e8e\u200b\u5165\u5ea6\u200b\u4e5f\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7ef4\u62a4\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8003\u8651\u200b \u200b\u6539\u4e3a\u200b\u7ef4\u62a4\u200b\u5165\u5ea6\u200b</p> <p>\u200b\u51fa\u5ea6\u200b\u4e0e\u200b\u5165\u5ea6\u200b\u6709\u200b\u4ec0\u4e48\u200b\u5173\u7cfb\u200b\uff1f\u200b\u6709\u200b\u4e00\u4e2a\u200b\u663e\u7136\u200b\u7684\u200b\u57fa\u672c\u200b\u5b9a\u7406\u200b\uff1a\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\u7b49\u4e8e\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u51fa\u5ea6\u200b\u4e4b\u200b\u548c\u200b\uff1b\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u5df2\u77e5\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u7ed3\u679c\u200b\u7684\u200b \u200b\u6b63\u786e\u6027\u200b\uff0c\u200b\u4f46\u662f\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5145\u5206\u6027\u200b\u65e0\u6cd5\u200b\u4fdd\u8bc1\u200b\uff1b\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b \\(1+1+1+1=4\\)\uff0c\u200b\u4f46\u662f\u200b\u53ea\u200b\u77e5\u9053\u200b\u548c\u200b\u662f\u200b \\(4\\)\uff0c\u200b\u65e0\u6cd5\u200b\u786e\u5b9a\u200b\u6bcf\u4e2a\u200b\u70b9\u200b\u7684\u200b\u51fa\u5ea6\u200b\u90fd\u200b\u662f\u200b \\(1\\)\uff1b\u200b\u8fd9\u91cc\u200b\u662f\u200b\u5173\u952e\u70b9\u200b\uff1a\u200b\u6211\u4eec\u200b \u200b\u8003\u8651\u200b\u54c8\u5e0c\u200b\u4e0e\u200b\u968f\u673a\u5316\u200b\u7684\u200b\u601d\u60f3\u200b</p> <p>\u200b\u539f\u6765\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u51fa\u5ea6\u200b\u90fd\u200b\u662f\u200b \\(1\\)\uff0c\u200b\u7b97\u51fa\u200b\u548c\u200b\u6765\u200b\u4e0d\u597d\u200b\u53cd\u63a8\u200b\uff1b\u200b\u6211\u4eec\u200b\u5c06\u200b \u200b\u6bcf\u4e2a\u200b\u70b9\u200b\u968f\u673a\u200b\u8d4b\u200b\u4e00\u4e2a\u200b\u503c\u200b\uff0c\u200b\u4ee3\u8868\u200b\u5176\u5165\u5ea6\u200b\uff1b\u200b\u8bb0\u5f55\u200b\u5176\u4e00\u200b\u5f00\u59cb\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u5982\u679c\u200b\u67d0\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\u5f53\u524d\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\u7b49\u4e8e\u200b\u5f00\u59cb\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b\u6b64\u65f6\u200b\u6ee1\u8db3\u8981\u6c42\u200b</p> <p>\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u5f00\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u5b9e\u65f6\u200b\u7ef4\u62a4\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u5165\u5ea6\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u6211\u4eec\u200b\u627f\u53d7\u200b\u4e0d\u4e86\u200b\u6bcf\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\u518d\u52a0\u200b\u5728\u200b\u4e00\u5757\u200b\u7edf\u8ba1\u200b\u7684\u200b\u65f6\u95f4\u200b\u5f00\u9500\u200b\u2026\u2026</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 5e5+5;\n\nint n, m, q, node1, node2, op;\nunsigned int s=0, rs=0;\nunsigned int w[MAXN], in[MAXN], r[MAXN];\n\nint main(){\n    srand(time(0));\n    scanf(\"%d%d\", &amp;n, &amp;m);\n    for (int i=1; i&lt;=n; i++){\n        w[i] = (unsigned int)rand();\n        s += w[i];\n    }\n    for (int i=1; i&lt;=m; i++){\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        r[node2] += w[node1];\n        in[node2] += w[node1];\n        rs += w[node1];\n    }\n    scanf(\"%d\", &amp;q);\n    for (int i=1; i&lt;=q; i++){\n        scanf(\"%d\", &amp;op);\n        if (op == 1){\n            scanf(\"%d%d\", &amp;node1, &amp;node2);\n            in[node2] -= w[node1];\n            rs -= w[node1];\n        }\n        else if (op == 2){\n            scanf(\"%d\", &amp;node1);\n            rs -= in[node1];\n            in[node1] = 0;\n        }\n        else if (op == 3){\n            scanf(\"%d%d\", &amp;node1, &amp;node2);\n            in[node2] += w[node1];\n            rs += w[node1];\n        }\n        else if (op == 4){\n            scanf(\"%d\", &amp;node1);\n            rs += r[node1]-in[node1];\n            in[node1] = r[node1];\n        }\n        if (rs == s){\n            printf(\"YES\\n\");\n        }\n        else{\n            printf(\"NO\\n\");\n        }\n    }\n    return 0;\n}\n</code></pre>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#record_2","title":"Record","text":"<p>\u200b\u592a\u83dc\u200b\u4e86\u200b\uff0c\u200b\u8003\u8bd5\u200b\u7684\u200b\u65f6\u5019\u200b\u76f4\u63a5\u200b\u7167\u7740\u200b\u6700\u200b\u66b4\u529b\u200b\u7684\u200b\u90e8\u5206\u200b\u6253\u200b\uff0c\u200b\u751a\u81f3\u200b\u6ca1\u6709\u200b\u8003\u8651\u200b\u8981\u6c42\u200b \\(1\\) \u200b\u5b9e\u9645\u4e0a\u200b\u6ca1\u6709\u200b\u610f\u4e49\u200b\uff1b\\(40pts \\rightarrow 25pts\\)\uff1b\u200b\u4e0d\u8fc7\u200b\u8fd9\u9898\u200b\u7684\u200b\u6b63\u89e3\u200b\u601d\u60f3\u200b\u786e\u5b9e\u200b\u7cbe\u5999\u200b\uff0c\u200b\u73b0\u5728\u200b\u6839\u672c\u200b\u6ca1\u6709\u200b\u8fd9\u4e2a\u200b\u5b9e\u529b\u200b\u2026\u2026</p>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/21/2024721-%E6%A8%A1%E6%8B%9F%E8%B5%9Bcsps2022%E8%AE%B0%E5%BD%95/#t4---p8820","title":"T4 - P8820","text":"<p>P8820</p> <p>\u200b\u4e0d\u4f1a\u200b\u634f\u200b\u3002\\(44pts\\) \u200b\u66b4\u529b\u200b\u8dd1\u200b\u8def\u200b\uff1b\u200b\u5176\u5b9e\u200b\u5982\u679c\u200b\u7eaf\u5199\u200b\u66b4\u529b\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6211\u200b\u8fd9\u79cd\u200b \\(dp\\) \u200b\u6781\u5ea6\u200b\u4e0d\u597d\u200b\u7684\u200b\u4eba\u200b\u6765\u8bf4\u200b\u6ca1\u6709\u200b\u5fc5\u8981\u200b\u53bb\u200b\u5199\u200b \\(dp\\)\uff0c\u200b\u76f4\u63a5\u200b\u66b4\u529b\u200b\u5efa\u56fe\u200b + \u200b\u5806\u200b\u4f18\u5316\u200b \\(dij\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u53ef\u80fd\u200b\u8fd8\u8981\u200b\u66f4\u4f18\u200b\u2026\u2026</p>","tags":["\u8d2a\u5fc3","ST\u8868","\u56fe\u8bba"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/","title":"2024.7.24 \u200b\u6a21\u62df\u200b\u8d5b\u200b\u8bb0\u5f55","text":"","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#t1---\u91c7\u679c\u5b50","title":"T1 - \u200b\u91c7\u200b\u679c\u5b50","text":"<p>\u200b\u91c7\u200b\u679c\u5b50\u200b</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#sol","title":"Sol","text":"<p>\u200b\u6ce8\u610f\u200b\u5230\u200b\u56fe\u200b\u662f\u200b\u5b8c\u5168\u200b\u56fe\u200b\uff0c\u200b\u4e14\u200b\u6211\u4eec\u200b\u53ea\u80fd\u200b\u4ece\u200b\u679c\u5b50\u200b\u6570\u4f4e\u200b\u5411\u200b\u679c\u5b50\u200b\u6570\u9ad8\u200b\u8d70\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5148\u200b\u8003\u8651\u200b\u5c06\u200b\u5176\u200b\u6309\u7167\u200b \\(a[i]\\) \u200b\u4ece\u5c0f\u5230\u5927\u200b\u6392\u5e8f\u200b\uff0c\u200b\u8fd9\u6837\u200b\u4e4b\u540e\u200b\u518d\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u786e\u4fdd\u200b\u65e0\u540e\u6548\u200b\u6027\u200b</p> <p>\u200b\u8003\u8651\u200b \\(dp\\)\uff1b\u200b\u9898\u76ee\u200b\u95ee\u200b\u4ec0\u4e48\u200b\u5c31\u200b\u8bbe\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u8d70\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u68f5\u200b\u6811\u200b \u200b\u8fd8\u200b\u5269\u200b \\(j\\) \u200b\u5c0f\u65f6\u200b\uff0c\u200b\u540c\u65f6\u200b \u200b\u6458\u8d70\u200b\u7b2c\u200b \\(i\\) \u200b\u68f5\u200b\u6811\u200b\u7684\u200b\u679c\u5b50\u200b \u200b\u80fd\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\uff1b\u200b\u5176\u5b9e\u200b\u8f6c\u79fb\u200b\u6bd4\u8f83\u200b\u7c7b\u4f3c\u200b \\(01\\) \u200b\u80cc\u5305\u200b\uff0c\u200b\u8003\u8651\u200b\u679a\u4e3e\u200b\u5f53\u524d\u200b\u7b2c\u200b \\(i\\) \u200b\u68f5\u200b\u6811\u200b\u4e0e\u200b\u5bb9\u91cf\u200b \\(j\\)\uff0c\u200b\u518d\u200b\u679a\u4e3e\u200b\u524d\u9762\u200b\u7684\u200b\u67d0\u200b\u4e00\u68f5\u6811\u200b \\(k\\)\uff0c\u200b\u8f6c\u79fb\u200b\u5373\u200b\u4e3a\u200b\u4ece\u200b \\(k\\) \u200b\u8d70\u200b\u5230\u200b \\(i\\)\uff1b\u200b\u56e0\u6b64\u200b\uff0c\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i][j]=dp[k][j-dis[k][i]-c[i]]+s[i]\\)\uff0c\u200b\u5176\u4e2d\u200b \\(c[i]\\) \u200b\u8868\u793a\u200b\u6458\u200b\u7b2c\u200b \\(i\\) \u200b\u68f5\u200b\u6811\u4e0a\u200b\u679c\u5b50\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\\(s[i]\\) \u200b\u8868\u793a\u200b\u6458\u200b\u7b2c\u200b \\(i\\) \u200b\u68f5\u200b\u6811\u4e0a\u200b\u679c\u5b50\u200b\u7684\u200b\u4ef7\u503c\u200b</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4efb\u4f55\u200b\u4e00\u68f5\u6811\u200b\u5f00\u59cb\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u65b9\u4fbf\u200b\u7684\u200b\u4e00\u79cd\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200b\u662f\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200b\u8d85\u7ea7\u200b\u539f\u70b9\u200b \\(0\\)\uff0c\u200b\u81ea\u8eab\u200b\u7684\u200b\u6240\u6709\u200b\u4fe1\u606f\u200b\u90fd\u200b\u662f\u200b \\(0\\)\uff0c\u200b\u518d\u200b\u5411\u200b\u6240\u6709\u200b\u6811\u200b\u90fd\u200b\u8fde\u200b\u4e00\u6761\u200b\u6743\u503c\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u8fb9\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u521d\u503c\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8d4b\u200b \\(0\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6d6a\u8d39\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u65f6\u95f4\u200b\u7684\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\u4e00\u5b9a\u200b\u6bd4\u200b\u4e0d\u200b\u6d6a\u8d39\u200b\u662f\u200b\u66f4\u52a3\u200b\u7684\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u5bf9\u200b\u7b54\u6848\u200b\u9020\u6210\u200b\u5f71\u54cd\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u7b54\u6848\u200b\uff0c\u200b\u6211\u4eec\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u72b6\u6001\u200b\uff0c\u200b\u53d6\u200b\u6700\u5927\u503c\u200b\u5373\u53ef\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^2m)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MAXN = 105, MAXM = 1005, INF = 1e9;\n\nint n, m;\nll ans;\nll d[MAXN][MAXN];\nll dp[MAXN][MAXM];\n\nstruct Tree{\n    ll a, s, c, id;\n}tree[MAXN];\n\nbool cmp(Tree t1, Tree t2){\n    return t1.a &lt; t2.a;\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;n, &amp;m);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%lld%lld%lld\", &amp;tree[i].a, &amp;tree[i].s, &amp;tree[i].c);\n        tree[i].id = i;\n    }\n    for (int i=1; i&lt;=n; i++){\n        d[0][i] = 0;\n        for (int j=1; j&lt;=n; j++){\n            scanf(\"%lld\", &amp;d[i][j]);\n        }       \n    }\n    tree[0].a = tree[0].s = tree[0].c = tree[0].id = 0;\n    sort(tree, tree+n+1, cmp);\n\n    for (int i=0; i&lt;=n; i++){\n        for (ll j=m; j&gt;=0; j--){\n            for (int k=0; k&lt;i; k++){\n                if (j &gt;= d[tree[k].id][tree[i].id]+tree[i].c &amp;&amp; tree[k].a&lt;tree[i].a){\n                    dp[i][j] = max(dp[i][j], dp[k][j-d[tree[k].id][tree[i].id]-tree[i].c]+tree[i].s);\n                }   \n            }\n        }\n    }\n    for (int i=1; i&lt;=n; i++){\n        for (int j=0; j&lt;=m; j++){\n            // cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j &lt;&lt; \" \" &lt;&lt; dp[i][j] &lt;&lt;endl;\n            ans = max(dp[i][j], ans);\n        }\n    }\n\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#record","title":"Record","text":"<p>\u200b\u522b\u200b\u88ab\u200b\u56fe\u8bba\u200b\u9650\u5236\u200b\u4e86\u200b\u601d\u8def\u200b\u554a\u200b\uff0c\u200b\u8fd9\u4e2a\u200b \\(dp\\) \u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u660e\u663e\u200b\u7684\u200b\uff1b\u200b\u73b0\u5728\u200b \\(dp\\) \u200b\u7684\u200b\u6c34\u5e73\u200b\u771f\u7684\u200b\u592a\u5dee\u200b\u4e86\u200b\uff0c\u200b\u5f97\u591a\u7ec3\u200b\u3002</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#t2---\u975e\u5e38\u8ba1\u5212","title":"T2 - \u200b\u975e\u5e38\u200b\u8ba1\u5212","text":"<p>\u200b\u975e\u5e38\u200b\u8ba1\u5212\u200b</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#sol_1","title":"Sol","text":"<p>\u200b\u73a9\u200b\u6587\u5b57\u6e38\u620f\u200b\u662f\u200b\u6bd4\u8f83\u200b\u96be\u8bc4\u200b\u7684\u200b\u2026\u2026</p> <p>\u200b\u6700\u200b\u77ed\u8def\u200b\u8ba1\u6570\u200b\u677f\u5b50\u200b\uff0c\u200b\u6ce8\u610f\u200b \u200b\u6709\u200b\u91cd\u8fb9\u200b\u5c31\u200b\u53d6\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u8fd9\u662f\u200b\u7531\u4e8e\u200b\u6240\u6709\u200b\u8fb9\u200b\u5b8c\u5168\u200b\u91cd\u5408\u200b\u53ea\u7b97\u200b\u4e00\u6b21\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6709\u200b\u591a\u6761\u200b\u91cd\u8fb9\u200b\u5bf9\u200b\u7ed3\u679c\u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b\uff1b\u200b\u56e0\u4e3a\u200b\u8981\u53d6\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u7528\u200b\u90bb\u63a5\u77e9\u9635\u200b\u4f1a\u200b\u6bd4\u8f83\u200b\u65b9\u4fbf\u200b\uff0c\\(O(n^2)\\) \u200b\u662f\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u7684\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^2)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MAXN = 2005, INF = 1e9;\n\nint N, M;\n\nstruct Edge{\n    int to;\n    int weig;\n};\n\nint G[MAXN][MAXN];\nint dis[MAXN], vis[MAXN];\nll cnt[MAXN];\n\nvoid dijkstra(int start){\n    memset(dis, 0x7f, sizeof(dis));\n    dis[start] = 0;\n    cnt[start] = 1;\n\n    for (int i=1; i&lt;=N; i++){\n        int recent = 0, recentmin = INF;\n        for (int j=1; j&lt;=N; j++){\n            if (vis[j] == false &amp;&amp; dis[j] &lt; recentmin){\n                recent = j;\n                recentmin = dis[j];\n            }   \n        }\n        vis[recent] = true;\n        for (int j=1; j&lt;=N; j++){\n            if (G[recent][j] != INF){\n                if (dis[j] &gt;= dis[recent]+G[recent][j]){\n                    if (dis[j] == dis[recent]+G[recent][j]){\n                        cnt[j] += cnt[recent];\n                    }\n                    else{\n                        dis[j] = dis[recent]+G[recent][j];\n                        cnt[j] = cnt[recent];\n                    }\n                }\n            }\n        }   \n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;M);\n\n    for (int i=1; i&lt;=N; i++){\n        for (int j=1; j&lt;=N; j++){\n            G[i][j] = INF;\n        }\n    }\n\n    for (int i=1; i&lt;=M; i++){\n        int node1, node2, weig;\n        scanf(\"%d%d%d\", &amp;node1, &amp;node2, &amp;weig);\n        G[node1][node2] = min(G[node1][node2], weig);\n    }\n\n    dijkstra(1);\n\n    if (dis[N] &gt; INF){\n        printf(\"No answer\");\n        return 0;\n    }\n    printf(\"%d %lld\", dis[N], cnt[N]);\n    return 0;\n}\n</code></pre>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#record_1","title":"Record","text":"<p>\\(what\\  can\\ I\\ say?\\) \u200b\u62bd\u8c61\u200b\u827a\u672f\u200b\u51fa\u9898\u200b\u4eba\u200b</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#t3---\u65b9\u7a0b\u7684\u89e3","title":"T3 - \u200b\u65b9\u7a0b\u200b\u7684\u200b\u89e3","text":"<p>P1771</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#sol_2","title":"Sol","text":"<p>\u200b\u9996\u5148\u200b\uff0c\\(g(x)\\) \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4e0a\u200b\u5feb\u901f\u200b\u5e42\u200b\u89e3\u51b3\u200b\uff0c\u200b\u5373\u200b\u4e3a\u6c42\u200b\u4e0d\u5b9a\u200b\u65b9\u7a0b\u200b \\(\\sum_{i=1}^k a_i= p\\) \u200b\u89e3\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\\(p\\) \u200b\u662f\u200b\u5b9a\u503c\u200b</p> <p>\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b \\(a_i (1 \\le i \\le k)\\) \u200b\u4e3a\u200b\u6b63\u6574\u6570\u200b\uff0c\u200b\u5373\u5c06\u200b \\(p\\) \u200b\u5212\u5206\u200b\u4e3a\u200b \\(k\\) \u200b\u4e2a\u200b\u6b63\u6574\u6570\u200b\u76f8\u52a0\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u662f\u200b\u7ecf\u5178\u200b\u63d2\u677f\u200b\u6cd5\u200b\uff1b\u200b\u5728\u200b \\(p-1\\) \u200b\u4e2a\u200b\u7a7a\u9699\u200b\u4e2d\u200b\u63d2\u200b \\(k-1\\) \u200b\u4e2a\u677f\u200b\uff0c\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(C_{p-1}^{k-1}\\)\uff0c\u200b\u522b\u5fd8\u4e86\u200b\u4e0a\u200b\u9ad8\u7cbe\u5ea6\u200b\uff0c\\(k\\) \u200b\u5f88\u5c0f\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4e00\u4e2a\u200b\u4e58\u200b\u5b8c\u200b\u518d\u200b\u4e00\u4e2a\u200b\u4e00\u4e2a\u200b\u9664\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MOD = 1000, MAXL = 5e3+5;\n\nint k, x, bas;\nint ans[MAXL];\n\nint QuickPow(int a, int b){\n    ll res = 1;\n    while (b){\n        if (b&amp;1) res = (res*a)%MOD;\n        a = (a*a)%MOD;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n\nvoid mul(int x){\n    int i;\n    for (i=1; i&lt;=5e3; i++){\n        ans[i] = ans[i]*x;\n    }\n    for (i=1; i&lt;=5e3; i++){\n        ans[i+1] += ans[i]/10;\n        ans[i] = ans[i]%10;\n    }\n}\n\nvoid div(int x){\n    int i, len, m;\n    for (len=5e3; ans[len]==0&amp;&amp;len&gt;=1; len--);  \n    for (i=len, m=0; i&gt;=1; i--){\n        int tmp = ans[i];\n        ans[i] = (m*10+tmp)/x;\n        m = (m*10+tmp)%x;\n    }\n}\n\nvoid prt(){\n    int i;\n    for (i=5e3; ans[i]==0&amp;&amp;i&gt;1; i--);\n    for (; i&gt;=1; i--){\n        printf(\"%d\", ans[i]);\n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;k, &amp;x);\n    bas = QuickPow(x%MOD, x)-1;\n\n    ans[1] = 1;\n    for (int i=0; i&lt;k-1; i++){\n        int recent = bas-i; \n        mul(recent);\n    }\n    // prt();\n    // cout &lt;&lt; endl;\n    for (int j=2; j&lt;=k-1; j++){\n        div(j);\n    }\n    prt();\n    return 0;\n}\n</code></pre>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#record_2","title":"Record","text":"<p>\u200b\u9ad8\u7cbe\u5ea6\u200b\u4e0d\u80fd\u200b\u5fd8\u200b\u554a\u200b\uff0c\u200b\u9ad8\u7cbe\u9664\u200b\u5355\u7cbe\u200b\u8fd8\u662f\u200b\u5f97\u4f1a\u200b\u7684\u200b\uff08</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#t4---\u67d3\u8272","title":"T4 - \u200b\u67d3\u8272","text":"<p>P3177</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#sol_3","title":"Sol","text":"<p>\u200b\u7b54\u6848\u200b\u5373\u6c42\u200b \\(\\sum_{color} \\sum_{1 \\le i &lt; j \\le n} \\sum_{e \\in \\delta(i, j)} w(e)\\)\uff0c\u200b\u5176\u4e2d\u200b \\(i\\) \u200b\u4e0e\u200b \\(j\\) \u200b\u90fd\u200b\u67d3\u200b\u4e86\u200b \\(color\\) \u200b\u8fd9\u4e00\u200b\u989c\u8272\u200b\uff0c\\(\\delta(i, j)\\) \u200b\u8868\u793a\u200b \\(i\\) \u200b\u4e0e\u200b \\(j\\) \u200b\u95f4\u200b\u7684\u200b\u7b80\u5355\u200b\u8def\u5f84\u200b\uff1b\u200b\u6211\u4eec\u200b\u5c1d\u8bd5\u200b\u6c42\u548c\u200b\u6362\u5e8f\u200b\uff0c\u200b\u5373\u6c42\u200b \\(\\sum_{e \\in tree} w(e) \\sum_{color} \\sum_{1 \\le i &lt; j \\le n}\\)\uff0c\u200b\u5176\u4e2d\u200b \\(\\delta(i, j)\\) \u200b\u5305\u542b\u200b \\((s, t)\\)\uff1b\u200b\u56e0\u6b64\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u7edf\u8ba1\u200b \u200b\u6811\u4e0a\u200b\u6709\u200b\u591a\u5c11\u200b\u540c\u8272\u70b9\u200b\u7ecf\u8fc7\u200b\u4e00\u6761\u200b\u8fb9\u200b</p> <p>\u200b\u8003\u8651\u200b\u8bb0\u5f55\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u7684\u200b\u5b50\u6811\u5185\u200b\u6709\u200b \\(j\\) \u200b\u4e2a\u200b\u70b9\u67d3\u200b\u6210\u200b\u9ed1\u8272\u200b\u7684\u200b\u6700\u5927\u200b\u8d21\u732e\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u4e0e\u5176\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b69\u5b50\u200b \\(child\\)\uff0c\u200b\u8bbe\u5728\u200b \\(child\\) \u200b\u4e2d\u9009\u200b \\(k\\) \u200b\u4e2a\u200b\u70b9\u67d3\u200b\u9ed1\u200b\uff0c\u200b\u5219\u200b\u8fb9\u200b \\((i, child)\\) \u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4e24\u200b\u90e8\u5206\u200b\u8d21\u732e\u200b\uff1b\u200b\u9ed1\u8272\u200b\u70b9\u200b\u7684\u200b\u8d21\u732e\u200b\u4e3a\u200b \\(k \\times (m-k) \\times w(e)\\)\uff0c\u200b\u767d\u8272\u200b\u70b9\u200b\u7684\u200b\u8d21\u732e\u200b\u4e3a\u200b \\((siz[child]-k) \\times (n-siz[child]-(m-k)) \\times w(e)\\) \u200b\u5176\u4e2d\u200b \\(siz\\) \u200b\u8868\u793a\u200b\u5b50\u6811\u200b\u5927\u5c0f\u200b\uff1b\u200b\u4e24\u200b\u90e8\u5206\u200b\u52a0\u200b\u8d77\u6765\u200b\u5373\u200b\u4e3a\u200b\u8be5\u200b\u8fb9\u200b\u4ea7\u751f\u200b\u7684\u200b\u8d21\u732e\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b \\(val\\)\uff1b</p> <p>\u200b\u8bbe\u5728\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u9009\u200b \\(j\\) \u200b\u4e2a\u200b\u67d3\u9ed1\u200b\uff0c\u200b\u5728\u200b\u513f\u5b50\u200b \\(child\\) \u200b\u4e2d\u9009\u200b \\(k\\) \u200b\u4e2a\u200b\u70b9\u67d3\u200b\u9ed1\u200b\uff0c\u200b\u5219\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i][j] = max(dp[i][j-k]+dp[child][k]+val)\\)\uff1b\u200b\u6ce8\u610f\u200b\u9700\u8981\u200b\u5012\u5e8f\u200b\u679a\u4e3e\u200b \\(j\\)\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u91cd\u590d\u200b\u8d21\u732e\u200b\uff0c\u200b\u4e0e\u200b \\(01\\) \u200b\u80cc\u5305\u200b\u6eda\u52a8\u200b\u6570\u7ec4\u200b\u7684\u200b\u539f\u7406\u200b\u7c7b\u4f3c\u200b</p> <p>\u200b\u6ce8\u610f\u200b \\(int \\times int\\) \u200b\u65f6\u7206\u200b \\(long long\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MAXN = 2005, MAXM = 2005;\n\nint n, m;\n\nstruct Edge{\n    int to;\n    int weig;\n};\n\nvector &lt;Edge&gt; G[MAXN];\nll dp[MAXN][MAXM];\nint siz[MAXN];\n\nvoid dfssiz(int node, int fa){\n    siz[node] = 1;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i].to == fa) continue;\n        dfssiz(G[node][i].to, node);\n        siz[node] += siz[G[node][i].to];        \n    }\n}\n\nvoid dfs(int node, int fa){\n    dp[node][0] = dp[node][1] = 0;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i].to == fa) continue;\n        dfs(G[node][i].to, node);\n        for (int j=min(siz[node], m); j&gt;=0; j--){\n            for (int k=0; k&lt;=min(siz[G[node][i].to], j); k++){\n                if (dp[node][j-k] == -1) continue;\n                ll cnt = ((siz[G[node][i].to]-k)*(n-siz[G[node][i].to]-(m-k)))*(ll)G[node][i].weig + k*(m-k)*(ll)G[node][i].weig;\n                dp[node][j] = max(dp[node][j], dp[node][j-k]+dp[G[node][i].to][k]+cnt);\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;n, &amp;m);\n\n    for (int i=1; i&lt;=n-1; i++){\n        int node1, node2, weig;\n        scanf(\"%d%d%d\", &amp;node1, &amp;node2, &amp;weig);\n        G[node1].push_back({node2, weig});\n        G[node2].push_back({node1, weig});\n    }\n\n    memset(dp, -1, sizeof(dp));\n\n    dfssiz(1, 1);\n    dfs(1, 1);\n\n    printf(\"%lld\", dp[1][m]);\n    return 0;\n}\n</code></pre>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/07/24/2024724-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/#record_3","title":"Record","text":"<p>\u200b\u8fd9\u200b \\(dp\\) \u200b\u5411\u6765\u200b\u662f\u200b\u4f1a\u200b\u4e0d\u4e86\u200b\u4e00\u70b9\u200b\u7684\u200b\uff1b\u200b\u8003\u573a\u200b\u4e0a\u200b\u6ce8\u610f\u200b\u8bfb\u9898\u200b\uff01\u200b\u5199\u94fe\u200b\u7684\u200b\u90e8\u5206\u200b\u5206\u200b\u7684\u200b\u65f6\u5019\u200b\u7cca\u200b\u7684\u200b \\(dp\\) \u200b\u53ea\u200b\u8003\u8651\u200b\u4e86\u200b\u4e00\u79cd\u200b\u989c\u8272\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u4ec0\u4e48\u200b\u5b9e\u529b\u200b\uff08</p>","tags":["\u80cc\u5305DP","\u56fe\u8bba","\u6570\u5b66","\u9ad8\u7cbe\u5ea6","\u6811\u5f62DP"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"DP\u200b\u57fa\u7840\u200b \u200b\u505a\u200b\u9898\u200b\u8bb0\u5f55","text":"","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-1-\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217","title":"BNDSOJ DP-1-1 \u200b\u6700\u957f\u200b\u4e0d\u200b\u4e0b\u964d\u200b\u5b50\u200b\u5e8f\u5217","text":"<p>BNDSOJ DP-1-1 \u200b\u6700\u957f\u200b\u4e0d\u200b\u4e0b\u964d\u200b\u5b50\u200b\u5e8f\u5217\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b \\(a_i\\)\uff0c\u200b\u8bbe\u200b \\(f[i]\\) \u200b\u8868\u793a\u200b\u4ee5\u200b \\(i\\) \u200b\u7ed3\u5c3e\u200b\u7684\u200b\u6700\u957f\u200b\u4e0d\u200b\u4e0b\u964d\u200b\u5b50\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5faa\u73af\u200b\u679a\u4e3e\u200b \\(j\\) \\((1 \\leq j \\leq i-1)\\)\uff0c\u200b\u82e5\u200b \\(a_j \\leq a_i\\)\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4ece\u200b \\(f[j]\\) \u200b\u8f6c\u79fb\u200b\u81f3\u200b \\(f[i]\\)\uff0c\u200b\u5177\u4f53\u6765\u8bf4\u200b \\(f[i] = f[j]+1\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^2)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 10005;\n\nint n, ans=0;\nint num[MAXN], f[MAXN];\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;num[i]);\n    }\n    for (int i=1; i&lt;=n; i++){\n        f[i] = 1;\n    }\n\n    for (int i=1; i&lt;=n; i++){\n        for (int j=1; j&lt;i; j++){\n            if (num[j] &lt;= num[i]){\n                f[i] = max(f[i], f[j]+1);\n            }\n        }\n    }\n\n    for (int i=1; i&lt;=n; i++){\n        ans = max(ans, f[i]);\n    }\n\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-2-\u53cb\u597d\u57ce\u5e02","title":"BNDSOJ DP-1-2 \u200b\u53cb\u597d\u57ce\u5e02","text":"<p>BNDSOJ DP-1-2 \u200b\u53cb\u597d\u57ce\u5e02\u200b</p> <p>\u200b\u4f7f\u7528\u200b\u7ed3\u6784\u200b\u4f53\u200b\u8bb0\u5f55\u200b\u5bf9\u5e94\u200b\u7684\u200b\u53cb\u597d\u57ce\u5e02\u200b\uff0c\u200b\u9996\u5148\u200b\u6309\u7167\u200b\u6cb3\u5cb8\u200b\u4e00\u8fb9\u200b\u57ce\u5e02\u200b\u7684\u200b\u6a2a\u5750\u6807\u200b \\(a_i\\) \u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b</p> <p>\u200b\u8bbe\u200b\u4e24\u5bf9\u200b\u53cb\u597d\u57ce\u5e02\u200b\u6a2a\u5750\u6807\u200b\u4e3a\u200b \\((a_1, b_1)\\) \u200b\u4e0e\u200b \\((a_2, b_2)\\)\uff0c\u200b\u82e5\u200b\u5e0c\u671b\u200b\u4f7f\u5f97\u200b\u4e24\u5bf9\u200b\u53cb\u597d\u57ce\u5e02\u200b\u4e0d\u200b \"\u200b\u76f8\u4ea4\u200b\"\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b (\\(a_1 \\leq a_2\\) \u200b\u4e14\u200b $ b_1 \\leq b_2\\() \u200b\u6216\u200b (\\)a_1 \\geq a_2$ \u200b\u4e14\u200b \\(b_1 \\geq b_2\\))</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5e0c\u671b\u200b\u6392\u5e8f\u200b\u540e\u200b\u6cb3\u5cb8\u200b\u53e6\u4e00\u8fb9\u200b\u57ce\u5e02\u200b\u7684\u200b\u6a2a\u5750\u6807\u200b \\(b_i\\) \u200b\u5355\u8c03\u200b\u4e0d\u964d\u200b\uff0c\u200b\u95ee\u9898\u200b\u5373\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5bf9\u200b\u5e8f\u5217\u200b \\(b_i\\) \u200b\u6c42\u200b\u6700\u957f\u200b\u4e0d\u200b\u4e0b\u964d\u200b\u5b50\u200b\u5e8f\u5217\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^2)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 5005;\n\nint N, ans=0;\nint f[MAXN];\n\nstruct City{\n    int x;\n    int y;\n}pos[MAXN];\n\nbool cmp(City a, City b){\n    return a.x &lt; b.x;\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d%d\", &amp;pos[i].x, &amp;pos[i].y);\n    }\n\n    sort(pos+1, pos+N+1, cmp);\n\n    for (int i=1; i&lt;=N; i++){\n        f[i] = 1;\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        for (int j=1; j&lt;i; j++){\n            if (pos[j].y &lt;= pos[i].y){\n                f[i] = max(f[i], f[j]+1);\n            }\n        }\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        ans = max(ans, f[i]);\n    }\n\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-4-\u8d1d\u831c\u7684\u6668\u7ec3\u8ba1\u5212","title":"BNDSOJ DP-1-4 \u200b\u8d1d\u831c\u200b\u7684\u200b\u6668\u7ec3\u200b\u8ba1\u5212","text":"<p>BNDSOJ DP-1-4 \u200b\u8d1d\u831c\u200b\u7684\u200b\u6668\u7ec3\u200b\u8ba1\u5212\u200b</p> <p>\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u7b2c\u200b \\(i\\) \u200b\u5206\u949f\u200b\u75b2\u52b3\u5ea6\u200b\u4e3a\u200b \\(j\\) \u200b\u80fd\u200b\u8dd1\u200b\u7684\u200b\u6700\u200b\u8fdc\u8ddd\u79bb\u200b\uff0c\u200b\u4f46\u662f\u200b\u6ce8\u610f\u200b\u5230\u200b\u8d1d\u831c\u200b\u4e00\u65e6\u200b\u5f00\u59cb\u200b\u4f11\u606f\u200b\u5c31\u200b\u5fc5\u987b\u200b\u4f11\u606f\u200b\u5230\u200b\u75b2\u52b3\u5ea6\u200b\u4e3a\u200b \\(0\\)\uff0c\u200b\u72b6\u6001\u200b\u4e0d\u597d\u200b\u8f6c\u79fb\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u4f11\u606f\u200b\u5230\u200b\u75b2\u52b3\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u6761\u4ef6\u200b\u5f88\u5f3a\u200b\uff0c\u200b\u8003\u8651\u200b\u7279\u5316\u200b\u72b6\u6001\u200b\uff0c\u200b\u4ee4\u200b \\(dp[i]\\) \u200b\u8868\u793a\u200b\u7b2c\u200b \\(i\\) \u200b\u5206\u949f\u200b\u4e14\u200b\u75b2\u52b3\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u65f6\u80fd\u200b\u8dd1\u200b\u7684\u200b\u6700\u200b\u8fdc\u8ddd\u79bb\u200b\uff0c\u200b\u663e\u7136\u200b\u7b54\u6848\u200b\u4e3a\u200b \\(dp[N]\\)</p> <p>\u200b\u8003\u8651\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u9996\u5148\u200b\u53ef\u4ee5\u200b\u7531\u200b\u4e0a\u200b\u4e00\u5206\u949f\u200b\u75b2\u52b3\u5ea6\u200b\u5c31\u200b\u4e3a\u200b \\(0\\) \u200b\u8f6c\u79fb\u200b\u5f97\u6765\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u4e0a\u200b\u4e00\u5206\u949f\u200b\u9009\u62e9\u200b\u4f11\u606f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u591a\u200b\u8dd1\u200b\u4efb\u4f55\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u6b64\u65f6\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i] = dp[i-1]\\)</p> <p>\u200b\u5176\u6b21\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8be5\u200b\u5206\u949f\u200b\u524d\u200b\u65f6\u95f4\u5dee\u200b\u5927\u4e8e\u200b \\(1\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u8f6c\u79fb\u200b\u8fc7\u6765\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u7531\u4e8e\u200b\u590d\u6742\u5ea6\u200b\u4ece\u200b \\(0\\) \u200b\u53d8\u6210\u200b \\(0\\)\uff0c\u200b\u4e00\u5b9a\u200b\u662f\u200b\u8dd1\u200b\u4e86\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\u53c8\u200b\u6301\u7eed\u200b\u4f11\u606f\u200b\u4e86\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\uff0c\u200b\u800c\u200b\u8fd9\u200b\u4e24\u6bb5\u200b\u65f6\u95f4\u200b\u663e\u7136\u200b\u76f8\u7b49\u200b\uff1b\u200b\u4e3a\u200b\u65b9\u4fbf\u200b\u679a\u4e3e\u200b\uff0c\u200b\u4e0d\u59a8\u200b\u8bbe\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\u4e3a\u200b \\(i\\)\uff0c\u200b\u8fd9\u200b\u6bb5\u65f6\u95f4\u200b\u4e3a\u200b \\(j\\  (j&lt;=min(i/2, M))\\)\uff0c\u200b\u7531\u4e8e\u200b\u8d1d\u831c\u200b\u5728\u200b\u7b2c\u200b \\(i-2 \\times j+1\\) \u200b\u5230\u200b\u7b2c\u200b \\(i-j\\) \u200b\u5206\u949f\u200b\u9009\u62e9\u200b\u4e86\u200b\u8dd1\u6b65\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i] = dp[i-2 \\times j]+ \\sum_{k=i-2 \\times j+1}^{i-j} D[k]\\)\uff0c\u200b\u663e\u7136\u200b\u53ef\u4ee5\u200b\u7528\u200b\u524d\u7f00\u200b\u548c\u200b\u7ef4\u62a4\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(NM)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e4+5;\n\nint N, M;\nint f[MAXN], D[MAXN], sum[MAXN];\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;M);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;D[i]);\n        sum[i] = sum[i-1]+D[i];\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        f[i] = max(f[i], f[i-1]);\n\n        for (int j=1; j&lt;=min(i/2, M); j++){\n            f[i] = max(f[i], f[i-2*j]+sum[i-j]-sum[i-2*j]);\n        }\n    }\n\n    printf(\"%d\", f[N]);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-5-zbrka","title":"BNDSOJ DP-1-5 ZBRKA","text":"<p>BNDSOJ DP-1-5 ZBRKA</p> <p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n-1\\) \u200b\u7684\u200b \\(1\\) \u200b\u5230\u200b \\(n-1\\) \u200b\u7684\u200b\u6392\u5217\u200b\uff0c\u200b\u8bbe\u5176\u200b\u9006\u5e8f\u200b\u5bf9\u6570\u200b\u4e3a\u200b \\(C\\)\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u5f80\u200b\u6392\u5217\u200b\u4e2d\u200b\u63d2\u5165\u200b\u6570\u200b \\(n\\) \u200b\u5f62\u6210\u200b\u65b0\u200b\u7684\u200b\u6392\u5217\u200b\uff0c\u200b\u53c8\u200b\u56e0\u4e3a\u200b \\(n\\) \u200b\u6bd4\u539f\u200b\u6392\u5217\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u90fd\u200b\u5927\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u65b0\u200b\u5f62\u6210\u200b \\(0\\) \u200b\u5230\u200b \\(n-1\\) \u200b\u4e2a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\uff0c\u200b\u5373\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u6570\u200b\u4e3a\u200b \\(C\\) \u200b\u5230\u200b \\(C+n-1\\) \u200b\u7684\u200b\u6392\u5217\u200b\u7684\u200b\u6570\u91cf\u200b\u8d21\u732e\u200b\u90fd\u200b\u4e3a\u200b \\(1\\)</p> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(i\\) \u200b\u7684\u200b\u4e14\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u6570\u91cf\u200b\u4e3a\u200b \\(j\\) \u200b\u4e2a\u200b\u7684\u200b\u6392\u5217\u200b\u4e2a\u6570\u200b\uff0c\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i][j] = \\sum_{k=j-(i-1)}^{j} dp[i-1][k]\\)\uff0c\u200b\u663e\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u524d\u7f00\u200b\u548c\u200b\u4f18\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u538b\u6389\u200b\u4e00\u7ef4\u200b\uff0c\u200b\u4f46\u200b\u6ce8\u610f\u200b\u6bcf\u6b21\u200b\u5728\u200b\u8f6c\u79fb\u200b\u4e4b\u524d\u200b\u9700\u8981\u200b\u5148\u200b\u5b9e\u65f6\u200b\u66f4\u65b0\u200b\u524d\u7f00\u200b\u548c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u540c\u65f6\u200b\u8d4b\u503c\u200b \\(dp[0] = sum[0] = 1\\)\uff0c\u200b\u56e0\u4e3a\u200b\u9006\u5e8f\u200b\u5bf9\u6570\u200b\u4e3a\u200b \\(0\\) \u200b\u65f6\u200b\u4e5f\u200b\u6709\u200b\u4e00\u79cd\u200b\u65b9\u6848\u200b\u6ee1\u8db3\u200b (\u200b\u5373\u200b \\(1\\ 2\\ 3\\ ...\\ n\\))</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(NC)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int MAXC = 1e5+5, MOD = 1e9+7;\n\nint N, C;\nint f[MAXC], sum[MAXC];\n\nsigned main(){\n    scanf(\"%lld%lld\", &amp;N, &amp;C);\n\n    for (int i=2; i&lt;=N; i++){\n        f[0] = sum[0] = 1;\n        for (int j=1; j&lt;=C; j++){\n            sum[j] = (sum[j-1]+f[j])%MOD;\n        }\n        for (int j=0; j&lt;=C; j++){\n            if (j &gt;= i){\n                f[j] = (sum[j] - sum[j-i])%MOD;\n            }\n            else{\n                f[j] = sum[j]%MOD;\n            }\n        }\n    }\n\n    if (f[C] &lt; 0){\n        printf(\"%lld\", MOD+f[C]);\n        return 0;   \n    }\n    printf(\"%lld\", f[C]);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-8-\u6f5c\u6c34\u5458","title":"BNDSOJ DP-1-8 \u200b\u6f5c\u6c34\u5458","text":"<p>BNDSOJ DP-1-8 \u200b\u6f5c\u6c34\u5458\u200b</p> <p>\u200b\u6ce8\u610f\u200b\u5230\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u6c14\u7f38\u200b\u4f1a\u200b\u589e\u52a0\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53ca\u200b\u6c27\u200b\u548c\u200b\u6c2e\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u4e8c\u7ef4\u200b\u8d39\u7528\u200b\u80cc\u5305\u200b\uff0c\u200b\u4ee4\u200b \\(dp[k][i][j]\\) \u200b\u8868\u793a\u200b\u524d\u200b \\(k\\) \u200b\u4e2a\u200b\u6c14\u7f38\u200b\u4e2d\u200b\u6c27\u6c14\u200b\u4e3a\u200b\u6570\u91cf\u200b \\(i\\) \u200b\u4e14\u200b\u6c2e\u6c14\u200b\u6570\u91cf\u200b\u4e3a\u200b \\(j\\) \u200b\u65f6\u200b\u603b\u5171\u200b\u7684\u200b\u6700\u5c0f\u200b\u91cd\u91cf\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u5e0c\u671b\u200b\u6c14\u7f38\u200b\u603b\u200b\u91cd\u200b\u6700\u5c0f\u200b\uff0c\u200b\u7ed9\u200b \\(dp\\) \u200b\u6570\u7ec4\u200b\u521d\u59cb\u200b\u8d4b\u200b\u6781\u5927\u503c\u200b\uff0c\u200b\u540c\u65f6\u200b\u6ce8\u610f\u200b\u521d\u59cb\u5316\u200b \\(dp[0][0] = 0\\)\uff0c\u200b\u4ee4\u200b\u6c27\u6c14\u200b\u6570\u91cf\u200b\u4e3a\u200b \\(a[i]\\)\uff0c\u200b\u6c2e\u6c14\u200b\u6570\u91cf\u200b\u4e3a\u200b \\(b[i]\\)\uff0c\u200b\u6c14\u7f38\u200b\u91cd\u91cf\u200b\u4e3a\u200b \\(v[i]\\)\uff0c\u200b\u5219\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[k][i][j] = min(dp[k-1][i][j], dp[k-1][i-a[k]][j-b[k]]+v[k])\\)\uff0c\u200b\u7b2c\u4e00\u200b\u7ef4\u200b\u53ef\u4ee5\u200b\u538b\u6389\u200b</p> <p>\u200b\u6ce8\u610f\u8f6c\u79fb\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6c27\u200b\u7684\u200b\u6570\u91cf\u200b\u4e0e\u200b\u6c2e\u200b\u7684\u200b\u6570\u91cf\u200b\u7684\u200b\u4e0a\u754c\u200b\u4e00\u5b9a\u200b\u662f\u200b \\(m\\) \u200b\u548c\u200b \\(n\\)\uff0c\u200b\u56e0\u6b64\u200b\u8bbe\u5b9a\u200b\u4e00\u4e2a\u200b\u504f\u79fb\u91cf\u200b \\(DIF = 80\\)\uff0c\u200b\u6c27\u200b\u548c\u200b\u6c2e\u200b\u7684\u200b\u4e0a\u754c\u200b\u5206\u522b\u200b\u4e3a\u200b \\(m+DIF\\) \u200b\u4e0e\u200b \\(n+DIF\\)</p> <p>\u200b\u6ce8\u610f\u200b\u679a\u4e3e\u200b\u7b54\u6848\u200b\u65f6\u8981\u200b\u679a\u4e3e\u200b\u5230\u200b\u6240\u88c5\u200b\u591a\u4e8e\u200b \\(m\\) \u200b\u4e0e\u200b \\(n\\) \u200b\u65f6\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u53d6\u200b\u6700\u5927\u503c\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(kmn)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXK = 1e4+5, MAXQ = 1005, DIF = 80;\n\nint m, n, ans=2147483647;\nint k;\nint a[MAXK], b[MAXK], c[MAXK];\nint dp[MAXQ][MAXQ];\n\nint main(){\n    memset(dp, 0x7f, sizeof(dp));\n    dp[0][0] = 0;\n    scanf(\"%d%d\", &amp;m, &amp;n);\n    scanf(\"%d\", &amp;k);\n\n    for (int i=1; i&lt;=k; i++){\n        scanf(\"%d%d%d\", &amp;a[i], &amp;b[i], &amp;c[i]);\n    }\n\n    for (int l=1; l&lt;=k; l++){\n        for (int i=m+DIF; i&gt;=a[l]; i--){\n            for (int j=n+DIF; j&gt;=b[l]; j--){\n                dp[i][j] = min(dp[i][j], dp[i-a[l]][j-b[l]]+c[l]);\n            }\n        }\n    }\n\n    for (int i=m; i&lt;=m+DIF; i++){\n        for (int j=n; j&lt;=n+DIF; j++){\n            ans = min(ans, dp[i][j]);\n        }\n    }\n\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-1-10-\u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848","title":"BNDSOJ DP-1-10 \u200b\u91d1\u660e\u200b\u7684\u200b\u9884\u7b97\u200b\u65b9\u6848","text":"<p>BNDSOJ DP-1-10 \u200b\u91d1\u660e\u200b\u7684\u200b\u9884\u7b97\u200b\u65b9\u6848\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u4e3b\u4ef6\u200b\u53ca\u5176\u200b\u7684\u200b\u914d\u4ef6\u200b\uff0c\u200b\u53ea\u6709\u200b \u200b\u4e70\u4e3b\u200b\u4ef6\u200b\u3001\u200b\u4e70\u4e3b\u200b\u4ef6\u200b\u548c\u200b \\(1\\) \u200b\u4e2a\u200b\u9644\u4ef6\u200b\u3001\u200b\u4e70\u4e3b\u200b\u4ef6\u200b\u548c\u200b \\(2\\) \u200b\u4e2a\u200b\u9644\u4ef6\u200b\u4e09\u79cd\u200b\u8d2d\u4e70\u200b\u65b9\u6848\u200b\uff0c\u200b\u4e14\u200b\u53ea\u80fd\u200b\u9009\u62e9\u200b\u4e00\u79cd\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u5206\u7ec4\u200b\u80cc\u5305\u200b</p> <p>\u200b\u6ce8\u610f\u200b\u4ef7\u503c\u200b\u4e3a\u200b \\(v[i] \\times w[i]\\) \u200b\u800c\u200b\u975e\u200b \\(v[i]\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(NM)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXT = 505, MAXN = 1e5+5;\n\nint N, M, T=0;\nint cnt[MAXT], belong[MAXT];\nint w[MAXT][MAXT], v[MAXT][MAXT];\nint f[MAXN];\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;M);\n\n    for (int i=1; i&lt;=M; i++){\n        int price, value, type;\n        scanf(\"%d%d%d\", &amp;price, &amp;value, &amp;type);\n        if (type == 0){\n            T++;\n            cnt[T]++;\n            belong[i] = T;\n            w[T][cnt[T]] = price;\n            v[T][cnt[T]] = price*value;\n        }\n        else{\n            cnt[belong[type]]++;\n            w[belong[type]][cnt[belong[type]]] = w[belong[type]][cnt[belong[type]]-1]+price;\n            v[belong[type]][cnt[belong[type]]] = v[belong[type]][cnt[belong[type]]-1]+price*value;\n        }   \n    }\n\n    /*\n    for (int i=1; i&lt;=T; i++){\n        cout &lt;&lt; \"object \" &lt;&lt; i &lt;&lt; endl;\n        cout &lt;&lt; \"main weight: \" &lt;&lt; w[i][1] &lt;&lt; \" value: \" &lt;&lt; v[i][1] &lt;&lt; endl;\n        cout &lt;&lt; \"side1 weight: \" &lt;&lt; w[i][2] &lt;&lt; \" value: \" &lt;&lt; v[i][2] &lt;&lt; endl;\n        cout &lt;&lt; \"side2 weight: \" &lt;&lt; w[i][3] &lt;&lt; \" value: \" &lt;&lt; v[i][3] &lt;&lt; endl;\n    }\n    */\n\n    for (int k=1; k&lt;=T; k++){\n        for (int i=N; i&gt;=0; i--){\n            for (int j=1; j&lt;=cnt[k]; j++){\n                if (i &gt;= w[k][j]){\n                    f[i] = max(f[i], f[i-w[k][j]]+v[k][j]);\n                }\n            }\n        }\n    }\n\n    printf(\"%d\", f[N]);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-2-2-\u6a71\u7a97\u5e03\u7f6e","title":"BNDSOJ DP-2-2 \u200b\u6a71\u7a97\u200b\u5e03\u7f6e","text":"<p>BNDSOJ DP-2-2 \u200b\u6a71\u7a97\u200b\u5e03\u7f6e\u200b</p> <p>\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u524d\u200b \\(i\\) \u200b\u6735\u82b1\u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u200b \\(i\\) \u200b\u6735\u82b1\u200b\u653e\u5728\u200b\u7b2c\u200b \\(j\\) \u200b\u4e2a\u200b\u82b1\u74f6\u200b\u65f6\u200b\u7f8e\u5b66\u200b\u503c\u200b\u7684\u200b\u6700\u5927\u503c\u200b</p> <p>\u200b\u8003\u8651\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u56fa\u5b9a\u200b\u4e86\u200b \\(i\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u96be\u200b\u60f3\u5230\u200b\u8fdb\u4e00\u6b65\u200b\u56fa\u5b9a\u200b \\(i-1\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8fdb\u884c\u200b\u8f6c\u79fb\u200b\uff1b\u200b\u7531\u4e8e\u200b\u7b2c\u200b \\(i-1\\) \u200b\u6735\u82b1\u200b\u81f3\u5c11\u200b\u653e\u5728\u200b\u7b2c\u200b \\(i-1\\) \u200b\u4e2a\u200b\u82b1\u74f6\u200b\u4e2d\u200b\uff0c\u200b\u81f3\u591a\u200b\u653e\u5728\u200b\u7b2c\u200b \\(j-1\\) \u200b\u4e2a\u200b\u82b1\u74f6\u200b\u4e2d\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i][j] = \\sum_{k=i-1}^{j-1} max(dp[i-1][k]+beauty[i][j])\\) (\\(beauty[i][j]\\) \u200b\u8868\u793a\u200b\u7b2c\u200b \\(i\\) \u200b\u6735\u82b1\u200b\u5728\u200b\u7b2c\u200b \\(j\\) \u200b\u4e2a\u200b\u82b1\u74f6\u200b\u4e2d\u200b\u7684\u200b\u7f8e\u5b66\u200b\u503c\u200b)</p> <p>\u200b\u7531\u4e8e\u200b\u8fd8\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u65b9\u6848\u200b\uff0c\u200b\u8003\u8651\u200b\u7528\u200b \\(from[i][j]\\) \u200b\u4fdd\u5b58\u200b\u4e00\u4e2a\u200b \\(pair&lt;int, int&gt;\\)\uff0c\u200b\u8868\u793a\u200b\u5176\u200b\u7531\u200b\u54ea\u4e2a\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u8fc7\u6765\u200b\uff0c\u200b\u9012\u5f52\u200b\u8f93\u51fa\u200b\u5373\u53ef\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(FV^2)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXF = 505, MAXV = 505;\n\nint F, V, ans=-2147483647, final=-1;\nint beauty[MAXF][MAXV];\nint dp[MAXF][MAXV];\npair &lt;int, int&gt; from[MAXF][MAXV];\n\nvoid getans(int step, int pos){\n    if (step == 1){\n        printf(\"%d \", pos);\n        return;\n    }\n    // cout &lt;&lt; \"debug: \" &lt;&lt; pos &lt;&lt; \" \" &lt;&lt; from[pos].second &lt;&lt; endl;\n    getans(from[step][pos].first, from[step][pos].second); \n    printf(\"%d \", pos);\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;F, &amp;V);\n    memset(dp, -0x3f, sizeof(dp));\n    dp[0][0] = 0;\n\n    for (int i=1; i&lt;=F; i++){\n        for (int j=1; j&lt;=V; j++){\n            scanf(\"%d\", &amp;beauty[i][j]);\n        }\n    }\n\n    for (int i=1; i&lt;=F; i++){\n        for (int j=i; j&lt;=V-(F-i); j++){\n            for (int k=i-1; k&lt;=j-1; k++){\n                if (dp[i-1][k]+beauty[i][j] &gt; dp[i][j]){\n                    dp[i][j] = dp[i-1][k]+beauty[i][j]; \n                    from[i][j] = {i-1, k};\n                }\n            }\n        }\n    }\n\n    for (int i=F; i&lt;=V; i++){\n        if (dp[F][i] &gt; ans){\n            ans = max(ans, dp[F][i]);\n            final = i;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    getans(F, final);\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-2-3-\u82b1\u5320","title":"BNDSOJ DP-2-3 \u200b\u82b1\u5320","text":"<p>BNDSOJ DP-2-3 \u200b\u82b1\u5320\u200b</p> <p>\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\u7684\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4ea4\u66ff\u200b\u589e\u51cf\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b\uff0c\u200b\u7531\u4e8e\u200b \\(O(n^2)\\) \u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4f1a\u200b\u8d85\u65f6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8003\u8651\u200b\u53ea\u200b\u4ece\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u4e0a\u200b\u4e00\u4f4d\u200b\u8f6c\u79fb\u200b\u72b6\u6001\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53d1\u73b0\u200b\u5b9e\u9645\u4e0a\u200b\u53ea\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u5e8f\u5217\u200b\u53d8\u5316\u200b\u7684\u200b\u8d8b\u52bf\u200b\uff0c\u200b\u5373\u200b\u5982\u679c\u200b\u8d8b\u52bf\u200b\u53d8\u5316\u200b\u5219\u200b\u8d21\u732e\u200b \\(+1\\)\uff0c\u200b\u82e5\u200b\u4e0d\u200b\u53d8\u5316\u200b\u5219\u200b\u8d21\u732e\u200b\u4e5f\u200b\u4e0d\u53d8\u200b</p> <p>\u200b\u56e0\u6b64\u200b\u8bbe\u200b \\(dp[i][0/1]\\) \u200b\u8868\u793a\u200b\u5728\u200b\u539f\u200b\u5e8f\u5217\u200b\u7b2c\u200b \\(i\\) \u200b\u4f4d\u200b\u53d8\u5316\u8d8b\u52bf\u200b\u4e3a\u200b \\(0/1\\) (\\(0\\) \u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u53d8\u5316\u8d8b\u52bf\u200b\u4e3a\u200b\u4e0a\u5347\u200b\uff0c\\(1\\) \u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u53d8\u5316\u8d8b\u52bf\u200b\u4e3a\u200b\u4e0b\u964d\u200b) \u200b\u7684\u200b\u7559\u4e0b\u200b\u7684\u200b\u82b1\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff1b\u200b\u8bbe\u200b \\(a_i\\) \u200b\u4e3a\u539f\u200b\u5e8f\u5217\u200b\u7684\u200b\u7b2c\u200b \\(i\\) \u200b\u9879\u200b\uff0c\u200b\u5206\u200b\u60c5\u51b5\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u5f53\u200b \\(a_i &gt; a_{i-1}\\) \u200b\u65f6\u200b\uff0c\\(dp[i][0] = max(dp[i-1][0], dp[i-1][1]+1)\\) \u200b\u4e14\u200b \\(dp[i][1] = dp[i-1][1]\\)\uff0c\u200b\u5f53\u200b \\(a_i &lt; a_{i-1}\\) \u200b\u65f6\u200b\uff0c\\(dp[i][1] = max(dp[i-1][1], dp[i-1][0]+1)\\) \u200b\u4e14\u200b \\(dp[i][0] = dp[i-1][0]\\)\uff0c\u200b\u5f53\u200b \\(a_i = a_{i-1}\\) \u200b\u65f6\u200b\uff0c\\(dp[i][0] = dp[i-1][0]\\) \u200b\u4e14\u200b \\(dp[i][1] = dp[i-1][1]\\)</p> <p>\u200b\u8fb9\u754c\u6761\u4ef6\u200b\u663e\u7136\u200b\u4e3a\u200b \\(dp[1][0] = dp[1][1] = 1\\)\uff0c\u200b\u8f93\u51fa\u200b\u65f6\u200b\u76f4\u63a5\u200b\u8f93\u51fa\u200b \\(max(dp[n][0], dp[n][1])\\) \u200b\u5373\u53ef\u200b\uff0c\\(n\\) \u200b\u4e3a\u539f\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\uff0c\u200b\u672c\u8d28\u200b\u4e0a\u200b\u5b9e\u9645\u200b\u662f\u200b\u9012\u63a8\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint n, ans=0;\nint num[MAXN];\nint dp[MAXN][2];\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for(int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;num[i]);\n    }\n\n    dp[1][0] = dp[1][1] = 1;\n\n    for (int i=2; i&lt;=n; i++){\n        if (num[i] &gt; num[i-1]){\n            dp[i][0] = max(dp[i-1][0], dp[i-1][1]+1);\n            dp[i][1] = dp[i-1][1];\n        }\n        else if (num[i] &lt; num[i-1]){\n            dp[i][1] = max(dp[i-1][1], dp[i-1][0]+1);\n            dp[i][0] = dp[i-1][0];\n        }\n        else{\n            dp[i][0] = dp[i-1][0];\n            dp[i][1] = dp[i-1][1];\n        }\n    }\n\n    printf(\"%d\", max(dp[n][0], dp[n][1]));\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-2-4-\u7f16\u8f91\u8ddd\u79bb","title":"BNDSOJ DP-2-4 \u200b\u7f16\u8f91\u200b\u8ddd\u79bb","text":"<p>\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u4e3a\u200b\u5c06\u200b \\(A\\) \u200b\u4e32\u524d\u200b \\(i\\) \u200b\u4f4d\u200b\u53d8\u4e3a\u200b \\(B\\) \u200b\u4e32\u524d\u200b \\(j\\) \u200b\u4f4d\u6240\u200b\u9700\u200b\u7684\u200b\u6700\u5c0f\u200b\u4ee3\u4ef7\u200b\uff0c\u200b\u8003\u8651\u200b\u7531\u200b \\(i-1\\) \u200b\u4e0e\u200b \\(j-1\\) \u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b\uff0c\u200b\u7531\u4e8e\u200b\u652f\u6301\u200b\u4fee\u6539\u200b\u3001\u200b\u6dfb\u52a0\u200b\u548c\u200b\u5220\u9664\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u6709\u200b\u5982\u4e0b\u200b\u51e0\u79cd\u200b\u65b9\u5f0f\u200b</p> <ol> <li>\u200b\u5c06\u200b \\(A\\) \u200b\u4e32\u524d\u200b \\(i-1\\) \u200b\u4e2a\u200b\u53d8\u4e3a\u200b \\(B\\) \u200b\u4e32\u524d\u200b \\(j-1\\) \u200b\u4e2a\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b \\(A_i\\) \u200b\u4fee\u6539\u200b\u4e3a\u200b \\(B_j\\) \u200b\u5373\u53ef\u200b\uff0c\u200b\u5206\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u679c\u200b \\(A_i = B_j\\) \u200b\u5219\u200b \\(dp[i][j] = dp[i-1][j-1]+1\\)\uff0c\u200b\u5426\u5219\u200b \\(dp[i][j] = dp[i-1][j-1]+1\\)</li> <li>\u200b\u5c06\u200b \\(A\\) \u200b\u4e32\u524d\u200b \\(i-1\\) \u200b\u4e2a\u200b\u53d8\u4e3a\u200b \\(B\\) \u200b\u4e32\u524d\u200b \\(j\\) \u200b\u4e2a\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b \\(A_i\\) \u200b\u5220\u9664\u200b\u5373\u53ef\u200b\uff0c\\(dp[i][j] = dp[i-1][j]+1\\)</li> <li>\u200b\u5c06\u200b \\(A\\) \u200b\u4e32\u524d\u200b \\(i\\) \u200b\u4e2a\u200b\u53d8\u4e3a\u200b \\(B\\) \u200b\u4e32\u524d\u200b \\(j-1\\) \u200b\u4e2a\u200b\uff0c\u200b\u518d\u200b\u5728\u200b \\(A\\) \u200b\u4e2d\u200b\u63d2\u5165\u200b \\(B_j\\) \u200b\u5373\u53ef\u200b\uff0c\\(dp[i][j] = dp[i][j-1]+1\\)</li> </ol> <p>\u200b\u8bbe\u200b \\(A\\) \u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\)\uff0c\\(B\\) \u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(m\\)\uff0c\u200b\u5219\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\u4e3a\u200b \\(dp[0][i] = i(1&lt;=i&lt;=m)\\)\uff0c\u200b\u5373\u5c06\u200b\u7a7a\u4e32\u200b\u53d8\u4e3a\u200b \\(B\\) \u200b\u7684\u200b\u524d\u200b \\(i\\) \u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u9700\u8981\u200b\u63d2\u5165\u200b \\(i\\) \u200b\u6b21\u200b\uff1b\\(dp[i][0] = i(1&lt;=i&lt;=n)\\)\uff0c\u200b\u5373\u5c06\u200b \\(A\\) \u200b\u7684\u200b\u524d\u200b \\(i\\) \u200b\u4e2a\u5b57\u7b26\u200b\u53d8\u4e3a\u200b\u7a7a\u4e32\u200b\uff0c\u200b\u9700\u8981\u200b\u5220\u9664\u200b \\(i\\) \u200b\u6b21\u200b\uff1b\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(dp[n][m]\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(nm)\\)\uff0c\\(n\\) \u200b\u4e0e\u200b \\(m\\) \u200b\u4e3a\u200b\u4e32\u957f\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 5005;\nstring a, b;\n\nint dp[MAXN][MAXN];\n\nint main(){\n    cin &gt;&gt; a &gt;&gt; b;\n\n    for (int i=0; i&lt;a.size(); i++){\n        dp[i+1][0] = i+1;\n    }\n    for (int i=0; i&lt;b.size(); i++){\n        dp[0][i+1] = i+1;\n    }\n\n    for (int i=0; i&lt;a.size(); i++){\n        for (int j=0; j&lt;b.size(); j++){\n            if (a[i] == b[j]){\n                dp[i+1][j+1] = min(dp[i][j], min(dp[i][j+1]+1, dp[i+1][j]+1));\n            }\n            else{\n                dp[i+1][j+1] = min(dp[i][j]+1, min(dp[i][j+1]+1, dp[i+1][j]+1));    \n            }\n        }\n    }\n\n    cout &lt;&lt; dp[a.size()][b.size()];\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-2-5-\u4e4c\u9f9f\u68cb","title":"BNDSOJ DP-2-5 \u200b\u4e4c\u9f9f\u200b\u68cb","text":"<p>BNDSOJ DP-2-5 \u200b\u4e4c\u9f9f\u200b\u68cb\u200b</p> <p>\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i][a][b][c][d]\\) \u200b\u8868\u793a\u200b\u8d70\u5230\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u200b\u683c\u5b50\u200b\u7528\u200b\u4e86\u200b \\(a\\) \u200b\u5f20\u200b \\(1\\) \u200b\u5361\u7247\u200b\uff0c\\(b\\) \u200b\u5f20\u200b \\(2\\) \u200b\u5361\u7247\u200b\uff0c\\(c\\) \u200b\u5f20\u200b \\(3\\) \u200b\u5361\u7247\u200b\uff0c\\(d\\) \u200b\u5f20\u200b \\(4\\) \u200b\u5361\u7247\u200b\uff0c\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b \\(dp\\) \u200b\u4f1a\u200b\u8d85\u65f6\u200b\uff1b\u200b\u6211\u4eec\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u5173\u952e\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5404\u7528\u200b\u4e86\u200b\u51e0\u5f20\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5361\u7247\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u53ef\u4ee5\u200b\u7b97\u200b\u51fa\u200b\u5f53\u524d\u200b\u5230\u200b\u7684\u200b\u683c\u5b50\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7b2c\u4e00\u200b\u7ef4\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u6ca1\u6709\u200b\u7528\u200b\u7684\u200b</p> <p>\u200b\u8bbe\u200b \\(dp[a][b][c][d]\\) \u200b\u4e3a\u200b (\u200b\u8d70\u200b\u5230\u200b\u5f53\u524d\u200b\u683c\u5b50\u200b) \u200b\u56db\u79cd\u200b\u5361\u200b\u5206\u522b\u200b\u7528\u200b\u4e86\u200b\u591a\u5c11\u200b\u5f20\u65f6\u200b\u80fd\u200b\u83b7\u5f97\u200b\u4ef7\u503c\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u663e\u7136\u200b\u5f53\u524d\u200b\u683c\u5b50\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b \\(chart = a \\times 1 + b \\times 2 + c \\times 3 + d \\times 4\\)\uff0c\u200b\u56e0\u4e3a\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5728\u200b\u8ddd\u79bb\u200b\u5f53\u524d\u200b\u683c\u5b50\u200b\u524d\u200b \\(1/2/3/4\\) \u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u683c\u5b50\u200b\u4f7f\u7528\u200b \u200b\u4e00\u4e2a\u200b \\(a/b/c/d\\) \u200b\u7c7b\u578b\u200b\u7684\u200b\u5361\u7247\u200b\u4ece\u800c\u200b\u524d\u8fdb\u200b\u5230\u200b\u5f53\u524d\u200b\u683c\u5b50\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[a][b][c][d] = max(dp[a-1][b][c][d], dp[a][b-1][c][d], dp[a][b][c-1][d], dp[a][b][c][d-1])+val[chart]\\)\uff0c\u200b\u5176\u4e2d\u200b \\(val[i]\\) \u200b\u4e3a\u200b\u5728\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u200b\u683c\u5b50\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u4ef7\u503c\u200b\uff1b\u200b\u6ce8\u610f\u200b \\(a/b/c/d = 0\\) \u200b\u65f6\u200b\u4e0d\u80fd\u200b\u518d\u200b\u7531\u200b \\(a-1/b-1/c-1/d-1\\) \u200b\u8f6c\u79fb\u200b\uff0c\u200b\u9700\u8981\u200b\u7279\u6b8a\u200b\u8003\u8651\u200b</p> <p>\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\u4e3a\u200b \\(dp[0][0][0][0] = val[1]\\)\uff0c\u200b\u56e0\u4e3a\u200b\u9898\u76ee\u200b\u4e2d\u8bf4\u200b\u4e86\u200b\u81ea\u52a8\u200b\u83b7\u5f97\u200b\u8d77\u70b9\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4ef7\u503c\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(A \\times B \\times C \\times D)\\)\uff0c\\(A/B/C/D\\) \u200b\u4e3a\u200b\u56db\u79cd\u200b\u5361\u7247\u200b\u7684\u200b\u4e2a\u6570\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 405;\n\nint N, M;\nint num[MAXN], cnt[5];\nint dp[45][45][45][45];\n\nint main(){ \n    scanf(\"%d%d\", &amp;N, &amp;M);\n\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;num[i]);   \n    }\n    for (int i=1; i&lt;=M; i++){\n        int val;\n        scanf(\"%d\", &amp;val);\n        cnt[val]++;\n    }\n\n    dp[0][0][0][0] = num[1];\n\n    for (int i=0; i&lt;=cnt[1]; i++){\n        for (int j=0; j&lt;=cnt[2]; j++){\n            for (int k=0; k&lt;=cnt[3]; k++){\n                for (int l=0; l&lt;=cnt[4]; l++){\n                    int chart = i*1+j*2+k*3+l*4+1;\n                    if (i!=0){\n                        dp[i][j][k][l] = max(dp[i][j][k][l], dp[i-1][j][k][l]+num[chart]);\n                    }\n                    if (j!=0){\n                        dp[i][j][k][l] = max(dp[i][j][k][l], dp[i][j-1][k][l]+num[chart]);\n                    }\n                    if (k!=0){\n                        dp[i][j][k][l] = max(dp[i][j][k][l], dp[i][j][k-1][l]+num[chart]);\n                    }\n                    if (l!=0){\n                        dp[i][j][k][l] = max(dp[i][j][k][l], dp[i][j][k][l-1]+num[chart]);\n                    }\n                }\n            }\n        }\n    }\n\n    printf(\"%d\", dp[cnt[1]][cnt[2]][cnt[3]][cnt[4]]);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/05/06/dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-2-6-\u4f20\u7eb8\u6761","title":"BNDSOJ DP-2-6 \u200b\u4f20\u200b\u7eb8\u6761","text":"<p>BNDSOJ DP-2-6 \u200b\u4f20\u200b\u7eb8\u6761\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u6709\u200b\u4e24\u8def\u200b\u4f20\u200b\u7eb8\u6761\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u76f8\u4ea4\u200b\u7684\u200b\u9650\u5236\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8dd1\u200b\u4e24\u6b21\u200b\u6700\u5927\u503c\u200b \\(dp\\) \u200b\u4e0d\u80fd\u200b\u4fdd\u8bc1\u200b\u6b63\u786e\u6027\u200b\uff1b</p> <p>\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i_1][j_1][i_2][j_2]\\) \u200b\u4e3a\u200b\u7b2c\u4e00\u8def\u200b\u7eb8\u6761\u200b\u4f20\u5230\u200b \\((i_1, j_1)\\) \u200b\u4e14\u200b\u7b2c\u4e8c\u8def\u200b\u7eb8\u6761\u200b\u4f20\u5230\u200b \\((i_2, j_2)\\) \u200b\u65f6\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff1b\u200b\u5173\u952e\u5728\u4e8e\u200b\u4f7f\u5f97\u200b\u4e24\u6761\u8def\u7ebf\u200b\u4e0d\u4f1a\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u5230\u200b\u4e24\u6761\u8def\u7ebf\u200b\u5fc5\u7136\u200b\u4e00\u6761\u200b\u5728\u200b \"\u200b\u53f3\u200b\u4e0a\u200b\"\uff0c\u200b\u4e00\u6761\u200b\u5728\u200b \"\u200b\u5de6\u200b\u4e0b\u200b\"\uff0c\u200b\u94a6\u5b9a\u200b \\((i_1, j_1)\\) \u200b\u6240\u5728\u200b\u8def\u7ebf\u200b\u5728\u200b \"\u200b\u53f3\u200b\u4e0a\u200b\"\uff0c\u200b\u56e0\u6b64\u200b\u679a\u4e3e\u200b \\(i_1(1&lt;=i_1&lt;=n)\\)\uff0c \\(j_1(1&lt;=j_1&lt;=m)\\)\uff0c\\(i_2(i_1&lt;i_2&lt;=n)\\)\uff0c\\(j_2(1&lt;=j_2&lt;j_1)\\)\uff0c\u200b\u8fd9\u6837\u200b\u4fdd\u8bc1\u200b \\((i_2, j_2)\\) \u200b\u6240\u5728\u200b\u7ebf\u8def\u200b\u4e0e\u200b \\((i_1, j_1)\\) \u200b\u7ebf\u8def\u200b\u603b\u200b\u4e0d\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u8f6c\u79fb\u200b\u65f6\u200b\u76f4\u63a5\u200b\u7531\u200b\u4e0a\u4e0b\u5de6\u53f3\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u8f6c\u79fb\u200b\u5373\u53ef\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\\(dp[i_1][j_1][i_2][j_2] = max(dp[i_1-1][j_1][i_2-1][j_2], dp[i_1][j_1-1][i_2-1][j_2], dp[i_1-1][j_1][i_2][j_2-1], dp[i_1][j_1-1][i_2][j_2-1])+val[i_1][j_1]+val[i_2][j_2]\\)\uff0c\u200b\u5176\u4e2d\u200b \\(val[i][j]\\) \u200b\u8868\u793a\u200b\u5728\u200b \\((i, j)\\) \u200b\u4f4d\u7f6e\u200b\u7684\u200b\u540c\u5b66\u200b\u7684\u200b\u597d\u5fc3\u200b\u7a0b\u5ea6\u200b</p> <p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u53e6\u8bbe\u200b\u8fb9\u754c\u6761\u4ef6\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6ca1\u6709\u200b\u5f00\u59cb\u200b\u4f20\u65f6\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u5c31\u662f\u200b \\(0\\)\uff1b\u200b\u6ce8\u610f\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b\u4e3a\u200b \\(dp[n-1][m][n][m-1]\\)\uff0c\u200b\u56e0\u4e3a\u200b\u663e\u7136\u200b \"\u200b\u53f3\u200b\u4e0a\u200b\" \u200b\u7ebf\u200b\u7684\u200b\u7ec8\u70b9\u200b\u4e3a\u200b \\((n-1, m)\\) \u200b\u5373\u200b\u53f3\u4e0b\u89d2\u200b\u4e0a\u65b9\u200b\uff0c\"\u200b\u5de6\u200b\u4e0a\u200b\" \u200b\u7ebf\u200b\u7684\u200b\u7ec8\u70b9\u200b\u4e3a\u200b \\((n, m-1)\\) \u200b\u5373\u200b\u53f3\u4e0b\u89d2\u200b\u5de6\u65b9\u200b</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(N^2M^2)\\)</p> <p>\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b \\(n\\) \u200b\u4e0e\u200b \\(m\\) \u200b\u548c\u200b\u601d\u8def\u200b\u4e2d\u662f\u200b\u53cd\u8fc7\u6765\u200b\u7684\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXM = 55, MAXN = 55;\n\nint m, n;\nint mp[MAXM][MAXN];\nint f[MAXM][MAXN][MAXM][MAXN];\n\nint main(){\n    scanf(\"%d%d\", &amp;m, &amp;n);\n\n    for (int i=1; i&lt;=m; i++){\n        for (int j=1; j&lt;=n; j++){\n            scanf(\"%d\", &amp;mp[i][j]);\n        }\n    }\n\n    for (int i=1; i&lt;=m; i++){\n        for (int j=1; j&lt;=n; j++){\n            for (int k=i+1; k&lt;=m; k++){\n                for (int l=1; l&lt;j; l++){\n                    f[i][j][k][l] = max(\n                        max(f[i][j-1][k][l-1], f[i][j-1][k-1][l]), \n                        max(f[i-1][j][k][l-1], f[i-1][j][k-1][l])\n                    );\n                    f[i][j][k][l] += (mp[i][j]+mp[k][l]);\n                }\n            }\n        }\n    }\n\n    printf(\"%d\", f[m-1][n][m][n-1]);\n    return 0;\n}\n</code></pre>","tags":["DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u533a\u95f4\u200bDP\u200b\u57fa\u7840\u200b \u200b\u505a\u200b\u9898\u200b\u8bb0\u5f55","text":"","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-3-2-\u80fd\u91cf\u9879\u94fe","title":"BNDSOJ DP-3-2 \u200b\u80fd\u91cf\u200b\u9879\u94fe","text":"<p>BNDSOJ DP-3-2 \u200b\u80fd\u91cf\u200b\u9879\u94fe\u200b</p> <p>\u200b\u53d1\u73b0\u200b\u7ed9\u5b9a\u200b\u73e0\u5b50\u200b\u5e8f\u5217\u200b\u4e3a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u4e00\u4e2a\u200b\u73af\u200b\uff0c\u200b\u90a3\u4e48\u200b\u663e\u7136\u200b\u9700\u8981\u200b\u7834\u73af\u6210\u200b\u94fe\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u5c06\u200b\u6574\u4e2a\u200b\u5e8f\u5217\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\u63a5\u5230\u200b\u539f\u200b\u5e8f\u5217\u200b\u672b\u5c3e\u200b\uff0c\u200b\u533a\u95f4\u200b DP \u200b\u5df2\u7ecf\u200b\u4fdd\u8bc1\u200b\u4e86\u200b\u7edf\u8ba1\u200b\u7684\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u4e0d\u4f1a\u200b\u8d85\u8fc7\u200b \\(n\\)\uff0c\u200b\u7edf\u8ba1\u200b\u7b54\u6848\u200b\u65f6\u200b\u679a\u4e3e\u200b\u8d77\u70b9\u200b\u53d6\u200b\u6700\u5927\u503c\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4e0d\u59a8\u200b\u4f9d\u636e\u200b\u9898\u610f\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5c06\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u95f4\u200b\u7684\u200b\u73e0\u5b50\u200b\u5408\u5e76\u200b\u6240\u200b\u80fd\u200b\u5f97\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u80fd\u91cf\u200b\uff1b\u200b\u8bbe\u200b\u7b2c\u200b \\(i\\) \u200b\u9897\u200b\u73e0\u5b50\u200b\u4e0a\u200b\u7684\u200b\u503c\u200b\u4e3a\u200b \\(v[i]\\)\uff0c\u200b\u8003\u8651\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u5219\u200b\u679a\u4e3e\u200b \\(k(i&lt;k&lt;j)\\) \u200b\u4f5c\u4e3a\u200b \"\u200b\u5206\u5272\u200b\u70b9\u200b\"\uff0c\\(dp[i][j] = max(dp[i][k]+dp[k][j]+v[i] \\times v[k] \\times v[j])\\)\uff0c\u200b\u5373\u5148\u200b\u5206\u522b\u200b\u7edf\u8ba1\u200b\u5c06\u200b \\([i, k]\\) \u200b\u4e0e\u200b \\([k, j]\\) \u200b\u5408\u5e76\u200b\u80fd\u200b\u83b7\u5f97\u200b\u7684\u200b\u4ef7\u503c\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u6700\u7ec8\u200b\u52a0\u4e0a\u200b\u672c\u6b21\u200b\u5408\u5e76\u200b\u83b7\u5f97\u200b\u7684\u200b\u4ef7\u503c\u200b\u5373\u200b \\(v[i] \\times v[k] \\times v[j]\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^3)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 205;\n\nint n, ans=0;\nint num[MAXN];\nint dp[MAXN][MAXN];\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;num[i]);\n        num[n+i] = num[i];\n    }\n\n    for (int l=1; l&lt;=n; l++){\n        for (int i=1; i&lt;=2*n-l; i++){\n            int lhs=i, rhs=i+l;\n            for (int k=lhs+1; k&lt;rhs; k++){\n                dp[lhs][rhs] = max(dp[lhs][rhs], dp[lhs][k]+dp[k][rhs]+num[lhs]*num[k]*num[rhs]);\n            }\n        }\n    }\n\n    for (int i=1; i&lt;=n; i++){\n        ans = max(ans, dp[i][i+n]);\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-3-3-\u4e58\u6cd5\u6e38\u620f","title":"BNDSOJ DP-3-3 \u200b\u4e58\u6cd5\u200b\u6e38\u620f","text":"<p>BNDSOJ DP-3-3 \u200b\u4e58\u6cd5\u200b\u6e38\u620f\u200b</p> <p>\u200b\u53d1\u73b0\u200b\u9898\u76ee\u200b\u4e2d\u200b\u8981\u6c42\u200b\u7684\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5408\u5e76\u200b\u724c\u200b\u800c\u662f\u200b\u62ff\u8d70\u200b\u724c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6ee1\u8db3\u200b\u533a\u95f4\u200b DP \u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5c06\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u5185\u200b\u7684\u200b\u6570\u200b\u5408\u5e76\u200b\u80fd\u200b\u5f97\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\uff0c\u200b\u8bbe\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u6570\u200b\u4e3a\u200b \\(v[i]\\)\uff1b\u200b\u8003\u8651\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u679a\u4e3e\u200b\u8f6c\u79fb\u200b\u70b9\u200b \\(k(i&lt;k&lt;j)\\)\uff0c\u200b\u5219\u200b \\(dp[i][j] = max(dp[i][k]+dp[k][j]+v[i] \\times v[k] \\times v[j])\\)\uff1b</p> <p>\u200b\u521d\u59cb\u72b6\u6001\u200b\u4e3a\u200b \\(dp[i][i]=0(1 \\le i \\le n)\\) \u200b\u4e0e\u200b \\(dp[i][i+1]=0(1 \\le i &lt; n)\\)\uff0c\u200b\u56e0\u4e3a\u200b\u65e0\u6cd5\u200b\u5408\u5e76\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b \\(3\\) \u200b\u7684\u200b\u533a\u95f4\u200b\uff1b\u200b\u9898\u76ee\u200b\u4e2d\u200b\u8981\u6c42\u200b\u4e0d\u80fd\u200b\u9009\u53d6\u200b\u7b2c\u200b \\(1\\) \u200b\u4e2a\u200b\u4e0e\u200b\u7b2c\u200b \\(n\\) \u200b\u4e2a\u6570\u200b\uff0c\u200b\u4f46\u200b\u533a\u95f4\u200b DP \u200b\u7684\u200b\u8f6c\u79fb\u200b\u70b9\u200b\u4e00\u5b9a\u200b\u6ee1\u8db3\u200b\u5728\u200b \\((1, n)\\) \u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u8d8a\u51fa\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u9700\u8981\u200b\u7279\u6b8a\u200b\u8003\u8651\u200b</p> <p>\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(dp[1][n]\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^3)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 205;\n\nint n;\nint num[MAXN];\nint dp[MAXN][MAXN];\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    memset(dp, 0x3f, sizeof(dp));\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;num[i]);\n        dp[i][i] = 0;\n    }\n    for (int i=1; i&lt;n; i++){\n        dp[i][i+1] = 0;\n    }\n\n    for (int l=1; l&lt;=n; l++){\n        for (int i=1; i&lt;=n-l+1; i++){\n            int lhs=i, rhs=i+l-1;\n            for (int k=lhs+1; k&lt;rhs; k++){\n                dp[lhs][rhs] = min(dp[lhs][rhs], dp[lhs][k]+dp[k][rhs]+num[lhs]*num[k]*num[rhs]);\n            }\n        }\n    }\n\n    printf(\"%d\", dp[1][n]);\n    return 0;\n}\n</code></pre>","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-3-4-\u77f3\u5b50\u5408\u5e76","title":"BNDSOJ DP-3-4 \u200b\u77f3\u5b50\u200b\u5408\u5e76","text":"<p>BNDSOJ DP-3-4 \u200b\u77f3\u5b50\u200b\u5408\u5e76\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u6700\u5927\u503c\u200b\u4e0e\u200b\u6700\u5c0f\u503c\u200b\u672c\u8d28\u200b\u76f8\u540c\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u53ea\u200b\u8003\u8651\u200b\u6700\u5927\u503c\u200b</p> <p>\u200b\u9996\u5148\u200b\u6ce8\u610f\u200b\u5230\u200b\u77f3\u5b50\u200b\u6392\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u73af\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd8\u662f\u200b\u8003\u8651\u200b\u7834\u73af\u6210\u200b\u94fe\u200b\uff0c\u200b\u5c06\u200b\u539f\u200b\u5e8f\u5217\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\u63a5\u5728\u200b\u539f\u200b\u5e8f\u5217\u200b\u7684\u200b\u540e\u9762\u200b\uff1b\u200b\u8bbe\u200b\u7b2c\u200b \\(i\\) \u200b\u5806\u200b\u77f3\u5b50\u200b\u4ef7\u503c\u200b\u4e3a\u200b \\(v[i]\\)\uff0c\u200b\u5408\u5e76\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u7684\u200b\u77f3\u5b50\u200b\u7684\u200b\u4ef7\u503c\u200b\u4e3a\u200b \\(val(i, j)\\)\uff0c\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5c06\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u4e2d\u200b\u7684\u200b\u77f3\u5b50\u200b\u5408\u5e76\u200b\u80fd\u200b\u83b7\u53d6\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\uff0c\u200b\u4ecd\u7136\u200b\u679a\u4e3e\u200b \\(k(i \\le k&lt;j)\\) \u200b\u4f5c\u4e3a\u200b\u8f6c\u79fb\u200b\u70b9\u200b\uff0c\\(dp[i][j] = max(dp[i][k]+dp[k+1][j]+val(i, j))\\)\uff1b\u200b\u7531\u4e8e\u200b\u4e00\u6b21\u200b\u5408\u5e76\u200b\u83b7\u5f97\u200b\u7684\u200b\u662f\u200b\u4e24\u5806\u200b\u77f3\u5b50\u200b\u7684\u200b\u4ef7\u503c\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u5408\u5e76\u200b\u4e00\u6b21\u200b\u533a\u95f4\u200b\u5c31\u200b\u83b7\u5f97\u200b\u4e00\u6b21\u200b\u533a\u95f4\u200b\u5185\u200b\u6240\u6709\u200b\u77f3\u5b50\u200b\u7684\u200b\u4ef7\u503c\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u56e0\u6b64\u200b \\(val(i, j) = \\sum_{k=i}^{j} v[k]\\)\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u524d\u7f00\u200b\u548c\u200b\u7ef4\u62a4\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u521d\u59cb\u72b6\u6001\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e00\u6b21\u200b\u5408\u5e76\u200b\u6700\u5c11\u200b\u5408\u5e76\u200b\u76f8\u90bb\u200b\u7684\u200b\u4e24\u5806\u200b\u77f3\u5b50\u200b\uff0c\u200b\u56e0\u6b64\u200b \\(dp[i][i]=0 (1 \\le i \\le n)\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^3)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 405;\n\nint n, ans=0, ans2=2147483647;\nint num[MAXN], sum[MAXN];\nint dp[MAXN][MAXN], dp2[MAXN][MAXN];\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    memset(dp2, 0x3f, sizeof(dp2));\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;num[i]);\n        num[n+i] = num[i];\n    }\n    for (int i=1; i&lt;=2*n; i++){\n        sum[i] = sum[i-1]+num[i];\n        dp2[i][i] = 0;\n    }\n\n    for (int l=2; l&lt;=n; l++){\n        for (int i=1; i&lt;=2*n-l-1; i++){\n            int lhs=i, rhs=i+l-1;\n            for (int k=lhs; k&lt;rhs; k++){\n                dp[lhs][rhs] = max(dp[lhs][rhs], dp[lhs][k]+dp[k+1][rhs]+sum[rhs]-sum[lhs-1]);\n                dp2[lhs][rhs] = min(dp2[lhs][rhs], dp2[lhs][k]+dp2[k+1][rhs]+sum[rhs]-sum[lhs-1]);  \n            }\n        }   \n    }\n\n    for (int i=1; i&lt;=n-1; i++){\n        ans = max(ans, dp[i][i+n-1]);\n        ans2 = min(ans2, dp2[i][i+n-1]);\n    }\n    printf(\"%d\\n%d\", ans2, ans);\n    return 0;\n}\n</code></pre>","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-3-5-\u62ec\u53f7\u914d\u5bf9","title":"BNDSOJ DP-3-5 \u200b\u62ec\u53f7\u200b\u914d\u5bf9","text":"<p>BNDSOJ DP-3-5 \u200b\u62ec\u53f7\u200b\u914d\u5bf9\u200b</p> <p>\u200b\u4ee4\u200b\u7b2c\u200b \\(i\\) \u200b\u4e2a\u5b57\u7b26\u200b\u4e3a\u200b \\(s[i]\\)\uff0c\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5c06\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u53d8\u4e3a\u200b \\(GBE\\) \u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b\uff0c\u200b\u4ecd\u7136\u200b\u8003\u8651\u200b\u679a\u4e3e\u200b \\(k(i \\le k&lt;j)\\)\uff0c\u200b\u7531\u4e8e\u200b\u533a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u540c\u4e00\u200b\u4f4d\u7f6e\u200b\u53ea\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u4e00\u6b21\u200b\uff0c\u200b\u56e0\u6b64\u200b \\(dp[i][j]=min(dp[i][k]+dp[k+1][j])\\)\uff1b\u200b\u6ce8\u610f\u200b\u7b2c\u4e8c\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u5de6\u200b\u7aef\u70b9\u200b\u4e3a\u200b \\(k+1\\)\uff0c\u200b\u679a\u4e3e\u200b \\(k\\) \u200b\u7684\u200b\u8303\u56f4\u200b\u5305\u542b\u200b \\(i\\)\uff1b</p> <p>\u200b\u4f46\u200b\u5982\u679c\u200b\u8fd9\u4e48\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5ffd\u7565\u200b\u4e86\u200b \"\u200b\u5982\u679c\u200b \\(A\\) \u200b\u662f\u200b \\(GBE\\)\uff0c\u200b\u90a3\u4e48\u200b \\([A]\\) \u200b\u4e0e\u200b \\((A)\\) \u200b\u4e5f\u200b\u662f\u200b \\(GBE\\)\" \u200b\u7684\u200b\u6761\u4ef6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u4e3e\u51fa\u200b\u53cd\u4f8b\u200b\uff0c\u200b\u6bd4\u5982\u200b\u8f93\u5165\u200b <code>[(]</code>\uff0c\u200b\u4f1a\u200b\u8f93\u51fa\u200b <code>3</code>\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5e94\u8be5\u200b\u8f93\u51fa\u200b <code>1</code>\uff1b\u200b\u90a3\u4e48\u200b\u5982\u4f55\u200b\u52a0\u4e0a\u200b\u8fd9\u4e00\u200b\u6761\u4ef6\u200b\uff1f\u200b\u5f53\u200b\u6211\u4eec\u200b\u5408\u5e76\u200b\u533a\u95f4\u200b \\([i, j]\\) \u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b \\(s[i]\\) \u200b\u4e0e\u200b \\(s[j]\\) \u200b\u6784\u6210\u200b\u4e86\u200b <code>[]</code> \u200b\u6216\u8005\u200b <code>()</code>\uff0c\u200b\u5c31\u200b\u53ea\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u5408\u5e76\u200b \\([i+1, j-1]\\)\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u8f6c\u79fb\u200b\u540e\u200b\u5224\u65ad\u200b \\(s[i]\\) \u200b\u4e0e\u200b \\(s[j]\\) \u200b\u662f\u5426\u200b\u6784\u6210\u200b <code>[]</code> \u200b\u4e0e\u200b <code>()</code>\uff0c\u200b\u5982\u679c\u200b\u6784\u6210\u200b\u5c31\u200b\u52a0\u4e0a\u200b $dp[i][j] = min(dp[i][j], dp[i+1][j-1]) $ \u200b\u5373\u53ef\u200b</p> <p>\u200b\u521d\u59cb\u6761\u4ef6\u200b\u4e3a\u200b \\(dp[i][i] = 1 (1 \\le i \\le n)\\)\uff0c\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(dp[i][n]\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^3)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 505, MAXINT = 2e9;\n\nstring s;\nint dp[MAXN][MAXN];\n\nint main(){\n    cin &gt;&gt; s;\n\n    for (int i=0; i&lt;s.size(); i++){\n        dp[i+1][i+1] = 1;\n    }\n\n    for (int l=2; l&lt;=s.size(); l++){\n        for (int i=1; i&lt;=s.size()-l+1; i++){\n            int lhs=i, rhs=i+l-1;\n            dp[lhs][rhs] = MAXINT;\n            for (int k=lhs; k&lt;rhs; k++){\n                dp[lhs][rhs] = min(dp[lhs][rhs], dp[lhs][k]+dp[k+1][rhs]);\n            }\n\n            if ((s[lhs-1] == '(' &amp;&amp; s[rhs-1] == ')') || (s[lhs-1] == '[' &amp;&amp; s[rhs-1] == ']')){\n                dp[lhs][rhs] = min(dp[lhs][rhs], dp[lhs+1][rhs-1]);\n            }\n        }   \n    }\n\n    printf(\"%d\", dp[1][s.size()]);\n    return 0;\n}\n</code></pre>","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/06/17/%E5%8C%BA%E9%97%B4dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-4-2-\u51f8\u591a\u8fb9\u5f62\u5212\u5206","title":"BNDSOJ DP-4-2 \u200b\u51f8\u591a\u8fb9\u5f62\u200b\u5212\u5206","text":"<p>BNDSOJ DP-4-2 \u200b\u51f8\u591a\u8fb9\u5f62\u200b\u5212\u5206\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5c06\u200b\u4ee5\u200b \\(i\\) \u200b\u4e3a\u200b\u5f00\u5934\u200b\uff0c\\(j\\) \u200b\u4e3a\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u591a\u8fb9\u5f62\u200b\u5206\u5272\u200b\u540e\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\uff1b\u200b\u6ce8\u610f\u200b\u5230\u200b\u6bcf\u4e2a\u200b\u8fb9\u200b\u90fd\u200b\u80af\u5b9a\u200b\u4f1a\u7528\u200b\u4e14\u200b\u4ec5\u200b\u7528\u200b\u4e00\u6b21\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u679a\u4e3e\u200b\u5206\u5272\u200b\u70b9\u200b \\(k (i&lt;k&lt;j)\\)\uff0c\u200b\u4f7f\u5f97\u200b \\(i, j, k\\) \u200b\u6784\u6210\u200b\u4e00\u4e2a\u200b\u4e09\u89d2\u5f62\u200b\uff0c\u200b\u518d\u200b\u5957\u8def\u200b\u5730\u200b\u7edf\u8ba1\u200b \\(dp[i][k]\\) \u200b\u4e0e\u200b \\(dp[k][j]\\) \u200b\u5373\u53ef\u200b\uff1b\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[i][j] = min(dp[i][j], dp[i][k]+dp[k][j]+num[i] \\times num[k] \\times num[j])\\)</p> <p>\u200b\u503c\u57df\u200b\u8f83\u5927\u200b\uff0c\\(long long\\) \u200b\u5b58\u200b\u4e0d\u4e0b\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u5f00\u200b \\(int128\\)</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \\(O(n^3)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 55;\nconst __int128 INF = 1e35;\n\n__int128 read128(){\n    __int128 x=0;bool f=1;char ch=getchar();\n    while (ch&lt;'0'||ch&gt;'9'){if(ch=='-') f=!f;ch=getchar();}\n    while (ch&gt;='0'&amp;&amp;ch&lt;='9'){x=(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48);ch=getchar();}\n    x=(f?x:-x);return x;\n}\ninline void put128(__int128 x){\n    if (x&lt;0) putchar('-'), x=-x;\n    if (x&gt;9) put128(x/10);\n    putchar(x%10+'0'); return;\n}\n\nint N;\n__int128 num[MAXN];\n__int128 dp[MAXN][MAXN];\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        num[i]=read128();\n    }\n\n    for (int len=3; len&lt;=N; len++){\n        for (int i=1; i&lt;=N-len+1; i++){\n            int lhs=i, rhs=i+len-1;\n            dp[lhs][rhs] = INF;\n            for (int k=lhs+1; k&lt;rhs; k++){\n                dp[lhs][rhs] = min(dp[lhs][rhs], dp[lhs][k]+dp[k][rhs]+num[lhs]*num[k]*num[rhs]);\n            }\n        }\n    }\n\n    put128(dp[1][N]);\n    return 0;\n}\n</code></pre>","tags":["\u533a\u95f4DP\u57fa\u7840"]},{"location":"blog/2024/08/10/%E5%AD%97%E5%85%B8%E6%A0%91-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u5b57\u5178\u200b\u6811\u200b \u200b\u505a\u200b\u9898\u200b\u8bb0\u5f55","text":"","tags":["\u5b57\u7b26\u4e32","\u5b57\u5178\u6811"]},{"location":"blog/2024/08/10/%E5%AD%97%E5%85%B8%E6%A0%91-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p4551","title":"P4551","text":"<p>P4551</p> <p>\u200b\u94a6\u5b9a\u200b\u6839\u4e3a\u200b \\(root\\)\uff0c\u200b\u6211\u4eec\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u4ece\u200b \\(root\\) \u200b\u5f00\u59cb\u200b \\(dfs\\) \u200b\u5904\u7406\u200b\u51fa\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u5230\u200b\u5176\u200b\u7684\u200b\u8ddd\u79bb\u200b \\(dis[i]\\)\uff1b\u200b\u7531\u4e8e\u200b\u4e24\u200b\u8282\u70b9\u200b\u7684\u200b \\(LCA\\) \u200b\u90e8\u5206\u200b\u5bf9\u200b\u6700\u7ec8\u200b\u7684\u200b\u5f02\u6216\u200b\u7b54\u6848\u200b\u4e0d\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\uff0c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u663e\u7136\u200b\u7684\u200b\u60f3\u6cd5\u200b\u662f\u200b\u679a\u4e3e\u200b\u6bcf\u200b\u5bf9\u200b\u8282\u70b9\u200b\u53d6\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u4f46\u200b \\(O(n^2)\\) \u200b\u65e0\u6cd5\u200b\u63a5\u53d7\u200b\uff0c\u200b\u9700\u8981\u200b\u6548\u7387\u200b\u66f4\u4f18\u200b\u7684\u200b\u7b97\u6cd5\u200b</p> <p>\u200b\u5df2\u77e5\u200b\u8282\u70b9\u200b \\(i\\)\uff0c\u200b\u4e0d\u7528\u200b\u679a\u4e3e\u200b\uff0c\u200b\u5982\u4f55\u200b\u7b97\u200b\u51fa\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b\u5230\u200b \\(i\\) \u200b\u7684\u200b\u5f02\u6216\u200b\u8def\u5f84\u200b\u957f\u5ea6\u200b\u6700\u5927\u503c\u200b\uff1f\u200b\u53ef\u4ee5\u200b\u6309\u4f4d\u200b\u8003\u8651\u200b \u200b\u8d2a\u5fc3\u200b\uff1b\u200b\u4ece\u200b\u9ad8\u5230\u200b\u4f4e\u200b\u679a\u4e3e\u200b\u6bcf\u200b\u4e00\u4f4d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u65b0\u200b\u8282\u70b9\u200b\u7684\u200b\u5f53\u524d\u200b\u4f4d\u200b\u4e0e\u200b \\(dis[i]\\) \u200b\u7684\u200b\u5f53\u524d\u200b\u4f4d\u200b\u5c3d\u91cf\u200b\u4e0d\u540c\u200b\uff1b\u200b\u4f46\u662f\u200b\u53ef\u80fd\u200b\u65e0\u6cd5\u200b\u4fdd\u8bc1\u200b\u65b0\u200b\u8282\u70b9\u200b\u7684\u200b\u5f53\u524d\u200b\u4f4d\u200b\u603b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5373\u200b\u9700\u8981\u200b \u200b\u9a8c\u8bc1\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e00\u4f4d\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b \\(01trie\\) \u200b\u7ef4\u62a4\u200b</p> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6bcf\u200b\u4e00\u4e2a\u200b \\(dis[i]\\) \u200b\u63d2\u5165\u200b\u5b57\u5178\u200b\u6811\u200b\uff0c\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u8ddd\u79bb\u200b \\(dis[i]\\)\uff0c\u200b\u7ef4\u62a4\u200b\u5f53\u524d\u200b\u5b57\u5178\u200b\u6811\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b \\(node\\)\uff0c\u200b\u4f7f\u5f97\u200b \\(node\\) \u200b\u80fd\u5f80\u200b\u4e0e\u200b\u5f53\u524d\u200b\u4f4d\u200b\u4e0d\u540c\u200b\u7684\u200b\u8282\u70b9\u200b\u8d70\u200b\u5c31\u200b\u5f80\u200b\u4e0d\u540c\u200b\u7684\u200b\u8282\u70b9\u200b\u8d70\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MAXN = 1e5+5, MAXL = 4e6+5;\n\nint n, cnt;\nll ans;\nll dis[MAXN];\n\nstruct Edge{\n    int to;\n    ll weig;\n};\nvector &lt;Edge&gt; G[MAXN];\n\nstruct Node{\n    int nex[2];\n    bool exist;\n}trie[MAXL];\n\nvoid insert(ll x){\n    int node = 0;\n    for (int i=31; i&gt;=0; i--){\n        int c = ((x&gt;&gt;i)&amp;1);\n        if (!trie[node].nex[c]) cnt++, trie[node].nex[c]=cnt;\n        node = trie[node].nex[c];\n    }\n    trie[node].exist = true;\n}\n\nvoid getans(ll x){\n    int node = 0;\n    ll res = 0;\n    for (int i=31; i&gt;=0; i--){\n        int c = ((x&gt;&gt;i)&amp;1);\n        if (trie[node].nex[(c^1)]) node=trie[node].nex[(c^1)], res = (res|(1&lt;&lt;i));\n        else node = trie[node].nex[c];\n    }\n    ans = max(ans, res);\n}\n\nvoid dfs(int node, int fa, ll rdis){\n    dis[node] = rdis;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i].to == fa) continue;\n        dfs(G[node][i].to, node, (rdis^G[node][i].weig));\n    }   \n}\n\nvoid show(int node, string s){\n    if (trie[node].exist) cout &lt;&lt; s &lt;&lt; endl;\n    if (trie[node].nex[0]) show(trie[node].nex[0], s+\"0\");\n    if (trie[node].nex[1]) show(trie[node].nex[1], s+\"1\");\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    for (int i=1; i&lt;=n-1; i++){\n        int node1, node2;\n        ll weig;\n        scanf(\"%d%d%lld\", &amp;node1, &amp;node2, &amp;weig);\n        G[node1].push_back({node2, weig});\n        G[node2].push_back({node1, weig});\n    }\n\n    dfs(1, 1, 0);\n\n    for (int i=1; i&lt;=n; i++){\n        insert(dis[i]);\n    }\n    // show(0, \"\");\n    for (int i=1; i&lt;=n; i++){\n        getans(dis[i]);\n    }\n\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u5b57\u5178\u6811"]},{"location":"blog/2024/08/10/%E5%AD%97%E5%85%B8%E6%A0%91-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p3294","title":"P3294","text":"<p>P3294</p> <p>\u200b\u5148\u200b\u603b\u7ed3\u200b\u9898\u610f\u200b\uff0c\u200b\u8bbe\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b \\(x\\)\uff0c\u200b\u603b\u5171\u200b\u6709\u200b \\(n\\) \u200b\u4e2a\u200b\u5355\u8bcd\u200b 1. \u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u5355\u8bcd\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u540e\u7f00\u200b\uff0c\u200b\u5176\u200b\u4f4d\u7f6e\u200b\u5728\u200b \\(x\\) \u200b\u540e\u200b\uff0c\u200b\u82b1\u8d39\u200b\u52a0\u200b \\(n^2\\) 2. \u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u5355\u8bcd\u200b\u6ca1\u6709\u200b\u540e\u7f00\u200b\uff0c\u200b\u82b1\u8d39\u200b\u52a0\u200b \\(x\\) 3. \u200b\u5982\u679c\u200b\u5f53\u524d\u200b\u5355\u8bcd\u200b\u6240\u6709\u200b\u540e\u7f00\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u90fd\u200b\u5728\u200b \\(x\\) \u200b\u524d\u200b\uff0c\u200b\u8bbe\u200b\u8fd9\u4e9b\u200b\u4f4d\u7f6e\u200b\u4e2d\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4e3a\u200b \\(y\\)\uff0c\u200b\u82b1\u8d39\u200b\u52a0\u200b \\(x-y\\)</p> <p>\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\uff0c\u200b\u7b2c\u200b \\(1\\) \u200b\u4e2a\u200b\u60c5\u51b5\u200b\u7684\u200b\u82b1\u8d39\u200b\u5f00\u9500\u200b\u5b9e\u5728\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u8fdc\u8fdc\u200b\u9ad8\u200b\u8fc7\u540e\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8981\u200b\u907f\u514d\u200b\uff0c\u200b\u5373\u200b \u200b\u4f7f\u5f97\u200b\u5355\u8bcd\u200b\u7684\u200b\u6240\u6709\u200b\u540e\u7f00\u200b\u90fd\u200b\u5728\u200b\u586b\u200b\u5728\u200b\u5176\u200b\u524d\u9762\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u53e6\u5916\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5b9e\u8d28\u200b\u4e0a\u200b\u60c5\u51b5\u200b \\(2\\) \u200b\u662f\u200b\u60c5\u51b5\u200b \\(3\\) \u200b\u5728\u200b \\(y=0\\) \u200b\u65f6\u200b\u7684\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ea\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u60c5\u51b5\u200b \\(3\\) \u200b\u5373\u53ef\u200b</p> <p>\u200b\u663e\u7136\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u5355\u8bcd\u200b\u95f4\u200b\u7684\u200b\u540e\u7f00\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5f88\u200b\u81ea\u7136\u200b\u7684\u200b\u60f3\u6cd5\u200b\u5c31\u662f\u200b \u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u5355\u8bcd\u200b\u53cd\u8f6c\u200b\u63d2\u5165\u200b\u5b57\u5178\u200b\u6811\u200b\uff1b\u200b\u5b57\u5178\u200b\u6811\u200b\u4e2d\u975e\u200b\u5b9e\u9645\u200b\u5b58\u5728\u200b\u7684\u200b\u8282\u70b9\u200b\u6ca1\u6709\u200b\u7528\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u8fdb\u4e00\u6b65\u200b\u5efa\u51fa\u200b\u5176\u200b \u200b\u91cd\u6784\u200b\u6811\u200b\uff0c\u200b\u5b9e\u8d28\u200b\u4e0a\u200b\u5373\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u6700\u957f\u200b\u540e\u7f00\u200b\u5411\u200b\u8be5\u200b\u8282\u70b9\u200b\u8fde\u8fb9\u200b\u5f62\u6210\u200b\u7684\u200b\u6811\u200b\uff1b\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u5728\u200b\u5176\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b</p> <p>\u200b\u5176\u5b9e\u200b\u611f\u6027\u200b\u7406\u89e3\u200b\u4e0a\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u5c06\u200b\u6811\u4e0a\u200b\u7684\u200b\u6bcf\u6761\u200b\u94fe\u200b\u8fde\u5728\u4e00\u8d77\u200b\u7684\u200b\u8fd9\u79cd\u200b\u6392\u6cd5\u200b\u770b\u8d77\u6765\u200b\u6bd4\u8f83\u200b\u4f18\u79c0\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u518d\u200b\u628a\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u5176\u4ed6\u200b\u94fe\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\u63d2\u8fdb\u53bb\u200b\u4f1a\u200b\u589e\u52a0\u200b\u94fe\u540e\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7684\u200b\u82b1\u8d39\u200b\uff1b\u200b\u8fd9\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b \\(dfs\\) \u200b\u5e8f\u200b\uff1b</p> <p>\u200b\u5c1d\u8bd5\u200b\u8bc1\u660e\u200b\u8fd9\u4e00\u200b\u7ed3\u8bba\u200b\uff1b\u200b\u53d1\u73b0\u200b\u6240\u6709\u200b\u7684\u200b\u82b1\u8d39\u200b\u4e2d\u200b\u90fd\u200b\u542b\u200b \\(x\\)\uff0c\u200b\u56e0\u6b64\u200b\u53ea\u200b\u9700\u200b\u8003\u8651\u200b \\(-y\\)\uff0c\u200b\u5373\u200b\u6211\u4eec\u200b\u60f3\u200b\u8ba9\u200b \\(\\sum-y\\) \u200b\u6700\u5c0f\u200b\uff0c\u200b\u5373\u200b \\(\\sum y\\) \u200b\u6700\u5927\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u4f4d\u7f6e\u200b \\(x\\)\uff0c\u200b\u5176\u200b\u76f8\u5e94\u200b\u7684\u200b \\(y\\) \u200b\u663e\u7136\u200b\u6ee1\u8db3\u200b \\(y \\le x\\)\uff0c\u200b\u6211\u4eec\u200b\u60f3\u200b\u8ba9\u200b \\(y\\) \u200b\u5c3d\u91cf\u200b\u5927\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6700\u597d\u200b\u5c31\u200b\u4e0e\u200b \\(x\\) *\u200b\u76f8\u90bb\u200b* (\u200b\u6216\u8005\u200b\u5c31\u662f\u200b \\(x\\))\uff1b\u200b\u5982\u4f55\u200b\u8ba9\u200b\u5176\u200b\u76f8\u90bb\u200b\uff1f\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u628a\u200b\u94fe\u200b\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\u8fde\u5728\u4e00\u8d77\u200b\uff0c\u200b\u4e2d\u95f4\u200b\u6ca1\u6709\u200b\u5176\u4ed6\u200b\u94fe\u200b\u7684\u200b\u8282\u70b9\u200b\uff1b\u200b\u5373\u5f97\u8bc1\u200b</p> <p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u628a\u200b\u6bcf\u6761\u200b\u94fe\u200b\u770b\u505a\u200b\u4e00\u4e2a\u200b\u6574\u4f53\u200b\uff1b\u200b\u8fd8\u200b\u6ca1\u5b8c\u200b\uff0c\u200b\u94fe\u200b\u7684\u200b\u957f\u5ea6\u200b\u663e\u7136\u200b\u4e5f\u200b\u4f1a\u200b\u5bf9\u200b\u7b54\u6848\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u6bcf\u4e2a\u200b\u5b50\u6811\u200b\u7684\u200b\u6839\u200b\u8282\u70b9\u200b \\(j\\)\uff0c\u200b\u5176\u200b\u4ef7\u503c\u200b\u5f00\u9500\u200b\u5c31\u662f\u200b\u5728\u200b \\(j\\) \u200b\u524d\u200b \\(i\\) \u200b\u6240\u6709\u200b\u513f\u5b50\u200b\u7684\u200b\u5b50\u6811\u200b\u5927\u5c0f\u200b\u548c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u80af\u5b9a\u200b \u200b\u4ece\u5c0f\u5230\u5927\u200b\u6392\u5e8f\u200b \u200b\u6700\u4f18\u200b\uff1b\u200b\u5176\u5b9e\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7406\u89e3\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u76f8\u5f53\u4e8e\u200b\u6392\u961f\u200b\u6253\u200b\u6c34\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u4eba\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u7684\u200b\u548c\u200b\uff0c\u200b\u80af\u5b9a\u200b\u8ba9\u200b\u6253\u6c34\u200b\u65f6\u95f4\u200b\u5c11\u200b\u7684\u200b\u4eba\u200b\u7ad9\u200b\u5728\u200b\u524d\u9762\u200b\u66f4\u4f18\u200b</p> <p>\u200b\u5b9e\u73b0\u200b\u4e0a\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u91cd\u6784\u200b\u6811\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u5e76\u200b\u67e5\u96c6\u200b\u8bb0\u5f55\u200b\u8282\u70b9\u200b \\(x\\) \u200b\u7684\u200b \\(fa[x]\\) \u200b\u8868\u793a\u200b\u5728\u200b \\(x\\) \u200b\u4e0a\u65b9\u200b\u5b58\u5728\u200b\u4e14\u200b\u6700\u8fd1\u200b\u7684\u200b\u8282\u70b9\u200b (\u200b\u5982\u679c\u200b\u4e0a\u65b9\u200b\u6ca1\u6709\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b \\(x\\) \u200b\u81ea\u8eab\u200b)\uff0c\u200b\u7ef4\u62a4\u200b\u5e76\u200b\u67e5\u96c6\u200b\uff0c\u200b\u5728\u200b\u641c\u5230\u200b\u5b58\u5728\u200b\u7684\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u65f6\u4f7f\u200b \\(last[i]\\) \u200b\u4e0e\u200b \\(i\\) \u200b\u8fde\u8fb9\u200b\u5373\u53ef\u200b</p> <p>\u200b\u522b\u5fd8\u4e86\u200b\u6392\u5e8f\u200b\uff0c\u200b\u7edf\u8ba1\u200b\u7b54\u6848\u200b\u65f6\u200b\u76f4\u63a5\u200b\u6309\u7167\u200b \\(dfs\\) \u200b\u5e8f\u200b\u5373\u53ef\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int MAXL = 5e5+5, MAXN = 1e5+5;\n\nint n, cnt, recnt;\nint fa[MAXL];\nll ans;\nstring s;\n\nstruct Node{\n    int child[26];\n    bool exist;\n    Node(){memset(child, 0, sizeof(child)); exist=false;}\n}trie[MAXL];\n\nstruct ReNode{\n    vector &lt;int&gt; child;\n    int siz;\n    ReNode(){child.clear(); siz=0;}\n}retrie[MAXL];\n\nvoid insert(string s){\n    int node = 1;\n    for (int i=s.size()-1; i&gt;=0; i--){\n        int u = s[i]-'a';\n        if (!trie[node].child[u]) cnt++, trie[node].child[u] = cnt;\n        node = trie[node].child[u];\n    }\n    if (!trie[node].exist) trie[node].exist = true;\n    return;\n}\n\nvoid dfs(int node){\n    if (trie[node].exist == true &amp;&amp; node&gt;1){\n        retrie[fa[node]].child.push_back(node);\n        fa[node] = node;\n    }\n    for (int i=0; i&lt;26; i++){\n        if (trie[node].child[i]){\n            fa[trie[node].child[i]] = fa[node]; \n            dfs(trie[node].child[i]);   \n        }\n    }\n}\n\nvoid dfssiz(int node){\n    retrie[node].siz = 1;\n    for (int i=0; i&lt;retrie[node].child.size(); i++){\n        dfssiz(retrie[node].child[i]);\n        retrie[node].siz += retrie[retrie[node].child[i]].siz;\n    }\n}\n\nbool cmp(int a, int b){\n    return retrie[a].siz &lt; retrie[b].siz;\n}\n\nvoid dfssort(int node){\n    sort(retrie[node].child.begin(), retrie[node].child.end(), cmp);\n    for (int i=0; i&lt;retrie[node].child.size(); i++){\n        dfssort(retrie[node].child[i]); \n    }    \n}\n\nvoid get(int node){\n    int tmp = recnt;\n    recnt++;\n    for (int i=0; i&lt;retrie[node].child.size(); i++){\n        ans += recnt-tmp;\n        get(retrie[node].child[i]);\n    }   \n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cnt = 1;\n    cin &gt;&gt; n;\n    for (int i=1; i&lt;=n; i++){\n        cin &gt;&gt; s;\n        insert(s);\n    }\n    trie[1].exist = true;\n    fa[1] = 1;\n    dfs(1);\n    dfssiz(1);\n    dfssort(1);\n    get(1);\n\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u5b57\u5178\u6811"]},{"location":"blog/2024/08/10/%E5%AD%97%E5%85%B8%E6%A0%91-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2292","title":"P2292","text":"<p>P2292</p> <p>\u200b\u5b57\u5178\u200b\u6811\u200b\u4ec0\u4e48\u200b\u4e1c\u897f\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4e0a\u200b\u81ea\u52a8\u673a\u200b</p> <p>\u200b\u6709\u200b\u4e00\u4e2a\u200b\u663e\u7136\u200b\u7684\u200b \\(dp\\)\uff0c\u200b\u8bb0\u200b \\(dp[i]\\) \u200b\u8868\u793a\u200b\u6587\u672c\u200b\u4e32\u524d\u200b \\(i\\) \u200b\u4f4d\u200b\u662f\u5426\u200b\u80fd\u200b\u88ab\u200b\u7406\u89e3\u200b (\u200b\u53ef\u884c\u6027\u200b \\(dp\\))\uff0c\u200b\u8f6c\u79fb\u200b\u5373\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b \\(i\\)\uff0c\u200b\u679a\u4e3e\u200b \\(j(1 \\le j \\le i)\\)\uff0c\u200b\u82e5\u200b \\(s[j]s[j+1]...s[i]\\) \u200b\u662f\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5355\u8bcd\u200b\u4e14\u200b \\(dp[j-1]\\) \u200b\u4e3a\u200b\u771f\u200b\uff0c\\(dp[i]\\) \u200b\u5373\u200b\u4e3a\u200b\u771f\u200b</p> <p>\u200b\u521d\u503c\u200b\u5373\u200b\u4e3a\u200b \\(dp[0] = true\\)</p> <p>\u200b\u5bf9\u4e8e\u200b\u6587\u672c\u200b\u4e32\u200b\u7684\u200b\u524d\u7f00\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u51fa\u5176\u200b\u6240\u6709\u200b\u5728\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u540e\u7f00\u200b\u8fdb\u884c\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u8fd9\u200b\u5f88\u200b\u663e\u7136\u200b\u5c31\u662f\u200b \\(AC\\) \u200b\u81ea\u52a8\u673a\u200b\uff0c\u200b\u4e00\u76f4\u200b\u8df3\u200b \\(fail\\) \u200b\u5373\u53ef\u200b\uff1b\u200b\u76f4\u63a5\u200b\u505a\u4f1a\u200b\u8d85\u65f6\u200b\uff0c\u200b\u8003\u8651\u200b\u8fdb\u884c\u200b\u7384\u5b66\u200b\u4f18\u5316\u200b</p> <p>\u200b\u8bb0\u5f55\u200b\u5b57\u5178\u200b\u4e2d\u200b\u5355\u8bcd\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b \\(maxl\\)\uff0c\u200b\u5bf9\u4e8e\u200b\u6587\u672c\u200b\u4e32\u200b\u5f53\u524d\u200b\u4f4d\u200b \\(i\\)\uff0c\u200b\u7ef4\u62a4\u200b \\(i\\) \u200b\u4e4b\u524d\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7406\u89e3\u200b\u7684\u200b\u6700\u5927\u200b\u4f4d\u7f6e\u200b \\(maxpl\\)\uff0c\u200b\u663e\u7136\u200b\u5f53\u200b \\(maxl+maxpl &lt; i\\) \u200b\u65f6\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5047\u200b\uff1b\u200b\u53e6\u5916\u200b\uff0c\u200b\u5f53\u200b \\(dp[i]\\) \u200b\u5df2\u7ecf\u200b\u4e3a\u200b\u771f\u65f6\u200b\u5c31\u200b\u6ca1\u200b\u5fc5\u8981\u200b\u7ee7\u7eed\u200b\u8df3\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u5373\u53ef\u200b\uff1b\u200b\u8fd9\u6837\u200b\u5c31\u200b\u6c34\u8fc7\u200b\u4e86\u200b\u6b64\u9898\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXL = 2e6+5, MAXT = 2e4+5;\n\nint n, m, cnt, maxl, maxpl;\nbool dp[MAXL];\nstring s;\n\nstruct Node{\n    int child[26];\n    int fail;\n    int len;\n    int exist;\n\n    Node(){memset(child, 0, sizeof(child)); fail = len = exist = 0;}\n}trie[MAXT];\n\nvoid insert(string s){\n    int node = 1;\n    for (int i=0; i&lt;s.size(); i++){\n        int u = s[i]-'a';\n        if (!trie[node].child[u]) cnt++, trie[node].child[u] = cnt;\n        node = trie[node].child[u];\n        trie[node].len = i+1;\n    }\n    if (!trie[node].exist) trie[node].exist=1;\n    maxl = max(maxl, trie[node].len);\n    return;\n}\n\nqueue &lt;int&gt; q;\n\nvoid build(){\n    for (int i=0; i&lt;26; i++) trie[0].child[i] = 1;\n    trie[1].fail = 0;\n    q.push(1);\n\n    while (!q.empty()){\n        int node = q.front();\n        q.pop();\n        int fail = trie[node].fail;\n\n        for (int i=0; i&lt;26; i++){\n            int v = trie[node].child[i];\n            if (v){\n                trie[v].fail = trie[fail].child[i];\n                q.push(v);\n            }\n            else{\n                trie[node].child[i] = trie[fail].child[i];\n            }\n        }   \n    }\n}\n\nvoid query(string s){\n    int node = 1;\n    for (int i=0; i&lt;s.size(); i++){\n        int u = s[i]-'a';\n        node = trie[node].child[u];\n        for (int j=node; j&gt;1; j=trie[j].fail){\n            if (trie[j].exist == 1){\n                dp[i+1] = (dp[i+1] | dp[i+1-trie[j].len]);\n                if (dp[i+1] == true){maxpl = max(maxpl, i+1); break;}\n                if (maxpl+maxl &lt; i+1) break;                \n            }\n        }\n    }       \n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cnt = 1;\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i=1; i&lt;=n; i++){\n        cin &gt;&gt; s;\n        insert(s);\n    }\n    build();\n    for (int i=1; i&lt;=m; i++){\n        memset(dp, false, sizeof(dp));\n        dp[0] = true;\n        maxpl = 0;\n        cin &gt;&gt; s;\n        query(s);\n        cout &lt;&lt; maxpl &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u5b57\u5178\u6811"]},{"location":"blog/2024/08/10/%E5%AD%97%E5%85%B8%E6%A0%91-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2922","title":"P2922","text":"<p>P2922</p> <p>\u200b\u6211\u4eec\u200b\u5728\u200b\u5b57\u5178\u200b\u6811\u4e2d\u200b\u63d2\u5165\u200b\u6bcf\u4e2a\u200b \\(b_i\\)\uff1b\u200b\u8bbe\u200b\u5f53\u524d\u200b\u5904\u7406\u200b\u7684\u200b\u6587\u672c\u200b\u4e3a\u200b \\(c\\)\uff0c\u200b\u7ef4\u62a4\u200b\u5b57\u5178\u200b\u6811\u4e0a\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b \\(node\\) \u200b\u88ab\u200b\u5305\u542b\u200b\u7684\u200b\u6b21\u6570\u200b \\(cnt1\\) (\u200b\u6ce8\u610f\u200b\u5f53\u200b\u5355\u8bcd\u200b\u5728\u200b\u8be5\u200b\u8282\u70b9\u200b\u7ed3\u675f\u200b\u65f6\u200b\u4e5f\u200b\u7edf\u8ba1\u200b) \u200b\u4e0e\u200b\u5728\u200b \\(node\\) \u200b\u4e0a\u200b \u200b\u7ed3\u675f\u200b\u7684\u200b\u5355\u8bcd\u200b\u6570\u200b \\(cnt2\\)</p> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u8bbe\u200b \\(c\\) \u200b\u5728\u200b\u5b57\u5178\u200b\u6811\u4e0a\u200b\u7684\u200b\u7ec8\u6b62\u200b\u8282\u70b9\u200b\u4e3a\u200b \\(node\\)\uff0c\u200b\u5bf9\u4e8e\u200b \\(c\\) \u200b\u5305\u542b\u200b \\(b_i\\) \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u7edf\u8ba1\u200b\u4ece\u200b\u6839\u5230\u200b \\(node\\) \u200b\u4e0a\u200b\u7684\u200b \\(\\sum cnt2\\)\uff1b\u200b\u5bf9\u4e8e\u200b \\(b_i\\) \u200b\u5305\u542b\u200b \\(c\\) \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u7edf\u8ba1\u200b \\(node\\) \u200b\u4e0a\u200b\u7684\u200b \\(cnt1\\)\uff1b\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u5728\u200b\u5355\u8bcd\u200b\u7684\u200b\u7ec8\u6b62\u200b\u8282\u70b9\u200b\u540c\u65f6\u200b\u589e\u52a0\u200b\u4e86\u200b \\(cnt1\\) \u200b\u4e0e\u200b \\(cnt2\\) \u200b\u7684\u200b\u8d21\u732e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u4f1a\u200b \u200b\u591a\u7b97\u200b\u4e00\u904d\u200b \\(node\\) \u200b\u4e0a\u200b\u7684\u200b \\(cnt2\\)</p> <p>\u200b\u6700\u7ec8\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(\\sum cnt2+cnt1_{node}-cnt2_{node}\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXL = 5e5+5;\n\nint N, M, num, nc, cnt, res;\nstring tmp;\n\nstruct Node{\n    int nex[2];\n    bool exist;\n    int cnt1, cnt2;\n    Node(){nex[0]=nex[1]=0;exist=false;cnt1=cnt2=0;}\n}trie[MAXL];\n\nvoid insert(string s){\n    int node = 0;\n    for (int i=0; i&lt;s.size(); i++){\n        int c = s[i]-'0';\n        if (!trie[node].nex[c]) cnt++,trie[node].nex[c]=cnt;\n        node = trie[node].nex[c];\n        trie[node].cnt1++;\n    }\n    trie[node].cnt2++;\n}\n\nint query(string s){\n    int node = 0, res = 0;\n    for (int i=0; i&lt;s.size(); i++){\n        int c = s[i]-'0';\n        if (!trie[node].nex[c]) return res;\n        node = trie[node].nex[c];\n        res += trie[node].cnt2;\n    }\n    res += (trie[node].cnt1-trie[node].cnt2);\n    return res;\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;M);\n    for (int i=1; i&lt;=N; i++){\n        scanf(\"%d\", &amp;num);\n        tmp = \"\";\n        for (int j=1; j&lt;=num; j++){\n            scanf(\"%d\", &amp;nc);\n            tmp += (nc+'0');\n        }\n        insert(tmp);\n    }\n    for (int i=1; i&lt;=M; i++){\n        scanf(\"%d\", &amp;num);\n        tmp = \"\";\n        for (int j=1; j&lt;=num; j++){\n            scanf(\"%d\", &amp;nc);\n            tmp += (nc+'0');\n        }\n        printf(\"%d\\n\", query(tmp));\n    }\n    return 0;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u5b57\u5178\u6811"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u6811\u5f62\u200bDP\u200b\u57fa\u7840\u200b \u200b\u505a\u200b\u9898\u200b\u8bb0\u5f55","text":"","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2015","title":"P2015","text":"<p>P2015</p> <p>\u200b\u5178\u578b\u200b\u7684\u200b\u6811\u4e0a\u200b\u80cc\u5305\u200b\u6a21\u578b\u200b\u3002\u200b\u6211\u4eec\u200b\u8bbe\u200b \\(dp[i][j]\\) \u200b\u8868\u793a\u200b\u5728\u200b\u4ee5\u200b \\(i\\) \u200b\u4e3a\u6839\u200b\u7684\u200b\u5b50\u6811\u4e2d\u200b\u4fdd\u7559\u200b \\(j\\) \u200b\u6761\u8fb9\u200b\u7684\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\uff1b\u200b\u6309\u7167\u200b\u6811\u5f62\u200b \\(DP\\) \u200b\u7684\u200b\u4e00\u822c\u200b\u5957\u8def\u200b\uff0c\u200b\u5728\u200b\u8282\u70b9\u200b \\(node\\) \u200b\u5904\u200b\uff0c\u200b\u9996\u5148\u200b\u9012\u5f52\u200b\u641c\u7d22\u200b\u513f\u5b50\u200b\u7684\u200b\u5b50\u6811\u200b\uff0c\u200b\u518d\u200b\u8fdb\u884c\u200b\u8f6c\u79fb\u200b\uff1b</p> <p>\u200b\u8f6c\u79fb\u200b\u65f6\u200b\uff0c\u200b\u8bbe\u200b \\(j\\) \u200b\u4e3a\u200b\u5f53\u524d\u200b\u4ee5\u200b \\(node\\) \u200b\u4e3a\u6839\u200b\u7684\u200b\u5b50\u6811\u200b\u9009\u62e9\u200b\u7684\u200b\u8fb9\u6570\u200b\uff0c\\(k\\) \u200b\u4e3a\u200b\u4ee5\u200b \\(child\\) \u200b\u4e3a\u6839\u200b\u7684\u200b\u5b50\u6811\u200b\u9009\u62e9\u200b\u7684\u200b\u8fb9\u6570\u200b\uff0c\u200b\u8fde\u63a5\u200b\u8282\u70b9\u200b \\((i, j)\\) \u200b\u7684\u200b\u8fb9\u200b\u7684\u200b\u6743\u503c\u200b\u4e3a\u200b \\(val[i][j]\\)\uff0c\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[node][j] = \\sum_{child \\in son(node)}max(dp[node][j-k-1]+dp[child][k]+val[node][child])\\)\uff0c\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\u56e0\u4e3a\u200b \u200b\u8fd8\u6709\u200b \\((node, child)\\) \u200b\u7684\u200b\u4e00\u6761\u200b\u8fb9\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e2d\u200b\u7b2c\u4e8c\u200b\u7ef4\u200b \\(j-k-1\\) \u200b\u4e0e\u200b \\(k\\) \u200b\u7684\u200b\u548c\u200b\u662f\u200b \\(j-1\\) \u200b\u800c\u200b\u975e\u200b \\(j\\)</p> <p>\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u8bb0\u5f55\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u5b50\u6811\u200b\u4e2d\u8fb9\u200b\u7684\u200b\u4e2a\u6570\u200b \\(siz[i]\\)\uff0c\u200b\u65b9\u4fbf\u200b\u5224\u65ad\u200b\u8fb9\u754c\u200b\uff1b\\(siz[i]\\) \u200b\u7684\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(siz[node] = \\sum_{child \\in son(node)}siz[child]+1\\)\uff0c\u200b\u540c\u6837\u200b\u522b\u5fd8\u4e86\u200b\u8003\u8651\u200b \\((node, child)\\) \u200b\u7684\u200b\u4e00\u6761\u200b\u8fb9\u200b</p> <p>\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(dp[1][Q]\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 105, MAXQ = 105;\n\nstruct Edge{\n    int to;\n    int weig;\n};\n\nint N, Q;\nvector &lt;Edge&gt; G[MAXN];\nint dp[MAXN][MAXQ], siz[MAXN];\n\nvoid dfs(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i].to == fa) continue;\n        dfs(G[node][i].to, node);\n        siz[node] += siz[G[node][i].to]+1;\n        for (int j=min(siz[node], Q); j&gt;=1; j--){\n            for (int k=0; k&lt;=min(siz[G[node][i].to], j-1); k++){\n                dp[node][j] = max(dp[node][j], dp[node][j-k-1]+dp[G[node][i].to][k]+G[node][i].weig);\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;Q);\n\n    for (int i=1; i&lt;=N-1; i++){\n        int node1, node2, weig;\n        scanf(\"%d%d%d\", &amp;node1, &amp;node2, &amp;weig);\n        G[node1].push_back({node2, weig});\n        G[node2].push_back({node1, weig});\n    }\n\n    dfs(1, 1);\n    printf(\"%d\", dp[1][Q]);\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2014","title":"P2014","text":"<p>P2014</p> <p>\u200b\u4ecd\u7136\u200b\u662f\u200b\u6811\u4e0a\u200b\u80cc\u5305\u200b\u95ee\u9898\u200b\u3002\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e0e\u200b \\(P2015\\) \u200b\u662f\u200b\u7c7b\u4f3c\u200b\u7684\u200b\uff1b\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\u51e0\u4e2a\u200b\u7ec6\u8282\u200b\u7565\u6709\u4e0d\u540c\u200b\uff1b\u200b\u6211\u4eec\u200b\u5c06\u200b\u6bcf\u95e8\u200b\u8bfe\u200b\u7684\u200b\u5148\u200b\u4fee\u8bfe\u200b\u5411\u200b\u8be5\u200b\u8bfe\u8fde\u8fb9\u200b\uff0c\u200b\u6700\u7ec8\u200b\u4f1a\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u68ee\u6797\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u4f9d\u6b21\u200b \\(dp\\) \u200b\u6bcf\u68f5\u200b\u6811\u200b\u5e76\u200b\u7edf\u8ba1\u200b\u4e0d\u592a\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8003\u8651\u200b \u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b \\(0\\) \u200b\u53f7\u70b9\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u6240\u6709\u200b\u6ca1\u6709\u200b\u5148\u200b\u4fee\u8bfe\u200b\u7684\u200b\u8bfe\u7a0b\u200b\u7684\u200b\u5148\u200b\u4fee\u8bfe\u200b\uff0c\u200b\u8bbe\u5176\u200b\u4ef7\u503c\u200b\u4e3a\u200b \\(0\\)\uff0c\u200b\u518d\u200b\u8fdb\u884c\u200b\u6811\u5f62\u200b \\(DP\\) \u200b\u5373\u53ef\u200b\uff1b\u200b\u522b\u5fd8\u4e86\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u589e\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u70b9\u200b\uff0c\u200b\u5bf9\u200b\u679a\u4e3e\u200b\u7684\u200b\u4e0a\u754c\u200b\u4e0e\u200b\u6700\u7ec8\u200b\u7684\u200b\u7b54\u6848\u200b\u9009\u62e9\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 105;\n\nint N, M;\nvector &lt;int&gt; G[MAXN];\nint dp[MAXN][MAXN], siz[MAXN], in[MAXN], w[MAXN];\n\nvoid dfs(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        dfs(G[node][i], node);\n        siz[node] += siz[G[node][i]]+1;\n        for (int j=min(M+1, siz[node]); j&gt;=1; j--){\n            for (int k=1; k&lt;=min(siz[G[node][i]], j-1); k++){\n                dp[node][j] = max(dp[node][j], dp[node][j-k]+dp[G[node][i]][k]);\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\", &amp;N, &amp;M);\n\n    w[0] = 0;\n    for (int i=1; i&lt;=N; i++){\n        int node, weig;\n        scanf(\"%d%d\", &amp;node, &amp;weig);\n        G[node].push_back(i);\n        in[i]++;\n        w[i] = weig;\n    }\n\n    for (int i=1; i&lt;=N; i++){\n        if (in[i] == 1) siz[i]++;\n        dp[i][1] = w[i];\n    }\n\n    dfs(0, 0);\n    printf(\"%d\", dp[0][M+1]);\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-5-3-\u7956\u5b59\u8be2\u95ee","title":"BNDSOJ DP-5-3 \u200b\u7956\u5b59\u200b\u8be2\u95ee","text":"<p>DP-5-3 \u200b\u7956\u5b59\u200b\u8be2\u95ee\u200b</p> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b \\(LCA\\) \u200b\u5361\u8fc7\u200b\uff0c\u200b\u5982\u679c\u200b \\(x\\) \u200b\u662f\u200b \\(y\\) \u200b\u7684\u200b\u7956\u5148\u200b\u90a3\u4e48\u200b \\(lca(x, y) = x\\)\uff0c\u200b\u5982\u679c\u200b \\(y\\) \u200b\u662f\u200b \\(x\\) \u200b\u7684\u200b\u7956\u5148\u200b\u90a3\u4e48\u200b \\(lca(x, y) = y\\)\uff0c\u200b\u5982\u679c\u200b\u90fd\u200b\u4e0d\u662f\u200b\u90a3\u4e48\u200b \\(lca(x, y)\\) \u200b\u65e2\u200b\u4e0d\u662f\u200b \\(x\\) \u200b\u4e5f\u200b\u4e0d\u662f\u200b \\(y\\)\uff1b</p> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u8fd9\u9053\u9898\u200b\u4e2d\u200b\u53ea\u200b\u9700\u8981\u200b\u5224\u65ad\u200b \\(x\\) \u200b\u4e0e\u200b \\(y\\) \u200b\u662f\u5426\u200b\u5728\u200b\u540c\u4e00\u200b\u5b50\u6811\u4e2d\u200b\uff0c\u200b\u6ca1\u6709\u200b\u5fc5\u8981\u200b\u4f7f\u7528\u200b \\(LCA\\)\uff1b\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u4e0e\u200b \\(Tarjan\\) \u200b\u7c7b\u4f3c\u200b\u7684\u200b\u601d\u60f3\u200b\uff0c\u200b\u5728\u200b\u5bf9\u200b\u6811\u200b\u8fdb\u884c\u200b \\(dfs\\) \u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f00\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b \\(in[i], out[i]\\)\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u7b2c\u4e00\u6b21\u200b\u88ab\u200b\u904d\u5386\u200b\uff0c\\(i\\) \u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u9000\u51fa\u200b\u904d\u5386\u200b\uff1b</p> <p>\u200b\u5bf9\u4e8e\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u4e0e\u200b \\(j\\)\uff0c\u200b\u5982\u679c\u200b \\(i\\) \u200b\u662f\u200b \\(j\\) \u200b\u7684\u200b\u7956\u5148\u200b\uff0c\u200b\u90a3\u4e48\u200b \u200b\u4e00\u5b9a\u200b\u6709\u200b \\(in[i] &lt; in[j]\\  \\&amp;\\&amp;\\  out[i] \\ge out[j]\\)\uff0c\u200b\u8bc1\u660e\u200b\u662f\u200b\u663e\u7136\u200b\u7684\u200b\uff1b\u200b\u5982\u679c\u200b\u4e24\u200b\u8282\u70b9\u200b\u4e0d\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5b50\u6811\u4e2d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4e24\u200b\u8282\u70b9\u200b\u7684\u200b \\(in, out\\) \u200b\u533a\u95f4\u200b\u4e0d\u200b\u4ea4\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e5+5;\n\nint n, m, s, diff=0;\nint in[MAXN], out[MAXN];\nvector &lt;int&gt; G[MAXN];\n\nvoid dfs(int node, int fa){\n    diff++;\n    in[node] = diff;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        dfs(G[node][i], node);\n    }\n    out[node] = diff;\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n; i++){\n        int node1, node2;\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        if (node2 == -1){\n            s = node1; \n            continue;\n        }\n        G[node1].push_back(node2);\n        G[node2].push_back(node1);\n    }\n\n    dfs(s, s);\n\n    scanf(\"%d\", &amp;m);\n\n    for (int i=1; i&lt;=m; i++){\n        int node1, node2;\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        if (in[node1] &lt; in[node2] &amp;&amp; out[node1] &gt;= out[node2]) printf(\"1\\n\");\n        else if (in[node1] &gt; in[node2] &amp;&amp; out[node1] &lt;= out[node2]) printf(\"2\\n\");\n        else printf(\"0\\n\");\n    }\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-5-5-\u5bb9\u6613\u9898","title":"BNDSOJ DP-5-5 \u200b\u5bb9\u6613\u200b\u9898","text":"<p>DP-5-5 \u200b\u5bb9\u6613\u200b\u9898\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u4ece\u200b\u4e00\u4e2a\u70b9\u200b\u5f00\u59cb\u200b \\(dfs\\)\uff0c\u200b\u8fbe\u5230\u200b\u7684\u200b\u6700\u8fdc\u200b\u70b9\u200b\u5fc5\u5b9a\u200b\u662f\u200b\u76f4\u5f84\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7aef\u70b9\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5148\u6c42\u200b\u51fa\u200b\u76f4\u5f84\u200b \\(\\delta(s, t)\\)\uff0c\u200b\u518d\u200b\u5206\u522b\u200b\u4ee5\u200b \\(s\\) \u200b\u4e0e\u200b \\(t\\) \u200b\u4e3a\u6839\u200b\u8fdb\u884c\u200b\u4e24\u6b21\u200b \\(dfs\\) \u200b\u6c42\u200b\u51fa\u200b\u5176\u4ed6\u200b\u70b9\u5230\u200b\u8fd9\u4e24\u70b9\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5373\u53ef\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u70b9\u200b \\(node\\)\uff0c\u200b\u7b54\u6848\u200b\u5373\u200b\u4e3a\u200b \\(max\\{\\delta(node, s), \\delta(node, t)\\}\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 10005;\n\nint N, c, node1, node2;\nint d[MAXN], d1[MAXN], d2[MAXN];\nvector &lt;int&gt; G[MAXN];\n\nvoid dfs(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        d[G[node][i]] = d[node]+1;\n        if (d[G[node][i]] &gt; d[c]) c = G[node][i];\n        dfs(G[node][i], node);\n    }   \n}\n\nvoid get1(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        d1[G[node][i]] = d1[node]+1;\n        get1(G[node][i], node);\n    }\n}\nvoid get2(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        d2[G[node][i]] = d2[node]+1;\n        get2(G[node][i], node);\n    }\n}\n\nint main(){\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N-1; i++){\n        int node1, node2;\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        G[node1].push_back(node2);\n        G[node2].push_back(node1);\n    }\n\n    dfs(1, 1);\n    d[c] = 0;\n    node1 = c;\n    dfs(c, c);\n    node2 = c;\n\n    get1(node1, node1);\n    get2(node2, node2);\n\n    for (int i=1; i&lt;=N; i++){\n        printf(\"%d\\n\", max(d1[i], d2[i]));\n    }\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2016","title":"P2016","text":"<p>P2016</p> <p>\u200b\u9898\u610f\u200b\u5373\u200b\u4e3a\u6c42\u200b\u7ed9\u5b9a\u200b\u6811\u200b\u7684\u200b\u6700\u5c0f\u200b\u70b9\u200b\u8986\u76d6\u200b\uff1b\u200b\u6211\u4eec\u200b\u6ce8\u610f\u200b\u5230\u200b\uff0c\u200b\u4e00\u6761\u200b\u8fb9\u200b\u7684\u200b\u4e24\u4e2a\u200b\u7aef\u70b9\u200b\u81f3\u5c11\u200b\u8981\u9009\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8bbe\u200b \\(dp[i][0/1]\\) \u200b\u8868\u793a\u200b\u5728\u200b\u70b9\u200b \\(i\\) \u200b\u5904\u200b\u8bbe\u7f6e\u200b / \u200b\u4e0d\u200b\u8bbe\u7f6e\u200b\u58eb\u5175\u200b\u6240\u82b1\u200b\u7684\u200b\u6700\u5c0f\u200b\u4ee3\u4ef7\u200b\uff1b</p> <p>\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[i][1] = \\sum_{v \\in son(i)}min(dp[v][0], dp[v][1])\\)\uff0c\\(dp[i][0] = \\sum_{v \\in son(i)}dp[v][1]\\)\uff0c\u200b\u5728\u200b \\(dfs\\) \u200b\u8f6c\u79fb\u200b\u524d\u200b\u522b\u5fd8\u4e86\u200b\u8bbe\u200b\u521d\u503c\u200b \\(dp[i][1] = 1\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2e3+5, INF = 2e9;\n\nint n, id, k, node;\nvector &lt;int&gt; G[MAXN];\nint dp[MAXN][2];\n\nvoid dfs(int node, int fa){\n    dp[node][1] = 1;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        dfs(G[node][i], node);\n        dp[node][1] += min(dp[G[node][i]][0], dp[G[node][i]][1]);\n        dp[node][0] += dp[G[node][i]][1];\n    }\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d%d\", &amp;id, &amp;k);\n        for (int i=1; i&lt;=k; i++){\n            scanf(\"%d\", &amp;node);\n            G[id].push_back(node);\n            G[node].push_back(id);\n        }\n    }\n\n    dfs(0, 0);\n    printf(\"%d\", min(dp[0][0], dp[0][1]));\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#p2458","title":"P2458","text":"<p>P2458</p> <p>\u200b\u4e0e\u200b\u4e0a\u200b\u4e00\u9053\u200b\u9898\u200b\u7565\u6709\u4e0d\u540c\u200b\uff0c\u200b\u4e0a\u200b\u4e00\u9053\u200b\u9898\u200b\u5e0c\u671b\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u7684\u200b\u8fb9\u200b\uff0c\u200b\u8fd9\u9053\u9898\u200b\u5e0c\u671b\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u7684\u200b\u70b9\u200b\uff1b\u200b\u7531\u4e8e\u200b\u4e00\u4e2a\u70b9\u200b\u88ab\u200b\u8986\u76d6\u200b\u53ef\u80fd\u200b\u901a\u8fc7\u200b\u4e09\u79cd\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dp[i][0/1/2]\\)\uff0c\u200b\u8868\u793a\u200b\u5728\u200b\u8be5\u200b\u70b9\u200b\u5904\u200b\u8bbe\u7f6e\u200b\u4fdd\u5b89\u200b / \u200b\u5728\u200b\u8be5\u200b\u70b9\u200b\u7684\u200b \u200b\u7236\u4eb2\u200b \u200b\u5904\u200b\u8bbe\u7f6e\u200b\u4fdd\u5b89\u200b / \u200b\u5728\u200b\u8be5\u200b\u70b9\u200b\u7684\u200b \u200b\u513f\u5b50\u200b \u200b\u5904\u200b\u8bbe\u7f6e\u200b\u4fdd\u5b89\u200b\u7684\u200b\u6700\u5c0f\u200b\u4ee3\u4ef7\u200b</p> <p>\u200b\u6211\u4eec\u200b\u4e00\u4e2a\u200b\u4e00\u4e2a\u200b\u6765\u770b\u200b\uff0c\u200b\u5bf9\u4e8e\u200b \\(dp[i][0]\\)\uff0c\u200b\u7531\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u8986\u76d6\u200b\uff0c\u200b\u513f\u5b50\u200b\u8282\u70b9\u200b \u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u4efb\u610f\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b \\(dp[i][0] = \\sum_{v \\in son(i)}min(dp[v][0], dp[v][1], dp[v][2])\\)</p> <p>\u200b\u5bf9\u4e8e\u200b \\(dp[i][1]\\)\uff0c\u200b\u8bbe\u200b\u6b64\u65f6\u200b \\(i\\) \u200b\u7684\u200b\u5b69\u5b50\u200b\u4e3a\u200b \\(v\\)\uff0c\u200b\u7531\u4e8e\u200b \\(i\\) \u200b\u73b0\u5728\u200b\u5e76\u200b\u6ca1\u6709\u200b\u8bbe\u7f6e\u200b\u4fdd\u5b89\u200b\uff0c\u200b\u56e0\u6b64\u200b \u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b \\(dp[v][1]\\) \u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b\uff1b\u200b\u56e0\u6b64\u200b\u628a\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u6316\u6389\u200b\uff0c\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[i][1] = \\sum_{v \\in son(i)}min(dp[i][0], dp[i][2])\\)</p> <p>\u200b\u5bf9\u4e8e\u200b \\(dp[i][2]\\)\uff0c\u200b\u540c\u7406\u200b\u6b64\u65f6\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b \\(dp[v][1]\\) \u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u5373\u200b\u4e3a\u200b \\(dp[i][2] = \\sum_{v \\in son(i)}min(dp[i][0], dp[i][2])\\) \u2026\u2026\u200b\u4e86\u200b\u5417\u200b\uff1f\u200b\u4e8b\u60c5\u200b\u6ca1\u6709\u200b\u8fd9\u4e48\u200b\u7b80\u5355\u200b\uff1b\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5982\u679c\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u7684\u200b \u200b\u6240\u6709\u200b\u513f\u5b50\u200b \\(v\\) \u200b\u90fd\u200b\u9009\u62e9\u200b\u901a\u8fc7\u200b \\(v\\) \u200b\u7684\u200b\u513f\u5b50\u200b\u6765\u200b\u8986\u76d6\u200b (\u200b\u5373\u200b\u901a\u8fc7\u200b \\(dp[v][2]\\) \u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b)\uff0c\u200b\u90a3\u4e48\u200b\u5b9e\u9645\u4e0a\u200b\u6240\u6709\u200b\u7684\u200b\u513f\u5b50\u200b \\(v\\) \u200b\u4e0a\u200b\u90fd\u200b\u6ca1\u6709\u200b\u4fdd\u5b89\u200b\uff0c\u200b\u8fd9\u200b\u4e0e\u200b\u72b6\u6001\u200b\u8bbe\u8ba1\u200b\u4e0d\u7b26\u200b\uff1b\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u80fd\u200b\u8003\u8651\u200b\u9009\u53d6\u200b\u4e00\u4e2a\u200b\u513f\u5b50\u200b \\(v\\)\uff0c\u200b\u5c06\u200b\u7531\u200b \\(dp[v][2]\\) \u200b\u8f6c\u79fb\u200b\u6362\u6210\u200b\u7531\u200b \\(dp[v][0]\\) \u200b\u8f6c\u79fb\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u4e5f\u200b\u8981\u200b\u5728\u200b\u8f6c\u79fb\u200b\u65f6\u200b \u200b\u8bb0\u5f55\u200b\u6bcf\u4e2a\u200b\u513f\u5b50\u200b \\(dp[v][0]-dp[v][2]\\) \u200b\u7684\u200b\u6700\u5c0f\u503c\u200b \\(extra\\)\uff0c\u200b\u6700\u7ec8\u200b\u7279\u5224\u200b\u5982\u679c\u200b\u5168\u90fd\u200b\u9009\u62e9\u200b\u7531\u200b \\(dp[v][2]\\) \u200b\u8f6c\u79fb\u200b\u800c\u200b\u6765\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u7ed3\u679c\u200b\u52a0\u4e0a\u200b \\(extra\\)</p> <p>\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u522b\u5fd8\u4e86\u200b\u5c06\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b \\(dp[i][2]\\) \u200b\u8bbe\u200b\u4e3a\u200b \\(+\\infty\\)\uff0c\u200b\u540c\u65f6\u200b\u5c06\u200b\u6bcf\u4e2a\u200b \\(dp[i][0]\\) \u200b\u8d4b\u200b\u521d\u503c\u200b \\(v[i]\\)</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2005, INF = 1e9;\n\nint n, start, id, k, m, child, cover;\nint r[MAXN];\nbool nroot[MAXN], leaf[MAXN];\n\nvector&lt;int&gt;G[MAXN];\nlong long dp[MAXN][3];\n\nvoid dfs(int node){\n    dp[node][0] = r[node];\n    bool flag = true;\n    long long cover = 1ll*INF;\n\n    for (int i=0; i&lt;G[node].size(); i++){\n        dfs(G[node][i]);\n\n        dp[node][0] += min(dp[G[node][i]][0], min(dp[G[node][i]][1], dp[G[node][i]][2]));\n        dp[node][1] += min(dp[G[node][i]][0], dp[G[node][i]][2]);\n\n        if (dp[G[node][i]][0] &lt; dp[G[node][i]][2]){\n            flag = false;\n            dp[node][2] += dp[G[node][i]][0];\n        }\n        else{\n            cover = min(1ll*cover, dp[G[node][i]][0]-dp[G[node][i]][2]);\n            dp[node][2] += dp[G[node][i]][2];\n        }\n    }\n\n    if (flag == true){\n        dp[node][2] += cover;\n    }\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n; i++){\n        scanf(\"%d%d%d\", &amp;id, &amp;k, &amp;m);\n        r[id] = k;\n        if (m == 0) leaf[id] = true;\n        for (int i=1; i&lt;=m; i++){\n            scanf(\"%d\", &amp;child);\n            nroot[child] = true;\n            G[id].push_back(child);\n        }\n    }\n\n    for (int i=1; i&lt;=n; i++){\n        if (leaf[i] == true){\n            dp[i][2] = INF; \n        }\n        if (nroot[i] == false){\n            start = i;\n        }\n    }\n\n    dfs(start);\n    printf(\"%lld\", min(dp[start][0], dp[start][2]));\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"blog/2024/07/20/%E6%A0%91%E5%BD%A2dp%E5%9F%BA%E7%A1%80-%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#bndsoj-dp-5-8-\u65c5\u6e38\u89c4\u5212","title":"BNDSOJ DP-5-8 \u200b\u65c5\u6e38\u200b\u89c4\u5212","text":"<p>DP-5-8 \u200b\u65c5\u6e38\u200b\u89c4\u5212\u200b</p> <p>\u200b\u9898\u610f\u200b\u4e3a\u200b\u8ba9\u200b\u6211\u4eec\u200b\u6c42\u200b\u51fa\u200b\u6240\u6709\u200b\u5728\u200b\u76f4\u5f84\u200b\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b (\u200b\u76f4\u5f84\u200b\u53ef\u80fd\u200b\u6709\u200b\u5f88\u591a\u200b\u6761\u200b)\uff1b\u200b\u663e\u7136\u200b\u53ea\u200b\u6309\u200b\u5e38\u89c4\u200b\u64cd\u4f5c\u200b\u8fdb\u884c\u200b\u4e8c\u6b21\u200b \\(dfs\\) \u200b\u65e0\u6cd5\u200b\u89e3\u51b3\u95ee\u9898\u200b (\u200b\u56e0\u4e3a\u200b\u53ea\u80fd\u200b\u6c42\u200b\u51fa\u200b\u4e00\u6761\u200b\u76f4\u5f84\u200b\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b)\uff0c\u200b\u4f46\u200b\u53c8\u200b\u56e0\u4e3a\u200b\u66b4\u529b\u200b\u9009\u53d6\u200b\u6bcf\u4e2a\u200b\u70b9\u200b\u5206\u522b\u200b\u8fdb\u884c\u200b \\(dfs\\) \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n^2)\\)\uff0c\u200b\u4f1a\u200b\u8d85\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u4efb\u9009\u200b\u6811\u4e0a\u200b\u4e00\u200b\u8282\u70b9\u200b \\(s\\) \u200b\u8fdb\u884c\u200b \\(dfs\\)\uff0c\u200b\u5230\u8fbe\u200b\u7684\u200b\u8282\u70b9\u200b\u80af\u5b9a\u200b\u662f\u200b\u76f4\u5f84\u200b\u7684\u200b\u7aef\u70b9\u200b\uff0c\u200b\u8fd9\u200b\u5f88\u200b\u663e\u7136\u200b\uff0c\u200b\u53cd\u8bc1\u200b\u5373\u53ef\u200b\uff1b\u200b\u6211\u4eec\u200b\u5728\u200b \\(dfs\\) \u200b\u4e2d\u200b\u7ef4\u62a4\u200b\u4ee5\u200b \\(s\\) \u200b\u4e3a\u200b\u6839\u65f6\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7684\u200b\u6df1\u5ea6\u200b \\(d[i]\\) \u200b\u4e0e\u200b\u6700\u7ec8\u200b\u76f4\u5f84\u200b\u7684\u200b\u957f\u5ea6\u200b \\(maxd\\)\uff0c\u200b\u641c\u7d22\u200b\u5b8c\u6210\u200b\u540e\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b \\(i\\)\uff0c\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b \\(d[i] = maxd\\) \u200b\u7684\u200b\u8282\u70b9\u200b \\(i\\)\uff1b\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4efb\u610f\u200b\u9009\u53d6\u200b\u76f4\u5f84\u200b\uff0c\u200b\u6613\u77e5\u200b\u6240\u6709\u200b\u7684\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u90fd\u200b\u4e3a\u200b\u67d0\u200b\u4e00\u6761\u200b\u76f4\u5f84\u200b\u7684\u200b\u7aef\u70b9\u200b\uff0c\u200b\u540c\u65f6\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u76f4\u5f84\u200b\u90fd\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7aef\u70b9\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u8282\u70b9\u200b\u4e2d\u200b</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u5982\u679c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u7aef\u70b9\u200b\u90fd\u200b\u518d\u200b\u8fdb\u884c\u200b\u4e00\u6b21\u200b \\(dfs\\)\uff0c\u200b\u4ecd\u7136\u200b\u4f1a\u200b\u8d85\u65f6\u200b\uff1b\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u53ea\u200b\u9009\u53d6\u200b\u4e00\u4e2a\u200b\u7aef\u70b9\u200b \\(node\\) \u200b\u518d\u200b\u8fdb\u884c\u200b \\(dfs\\)\uff0c\u200b\u6309\u7167\u200b\u540c\u6837\u200b\u7684\u200b\u65b9\u6cd5\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u79bb\u200b \\(node\\) \u200b\u6700\u8fdc\u200b\u7684\u200b\u8282\u70b9\u200b \\(k\\)\uff1b\u200b\u540c\u7406\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u8282\u70b9\u200b \\(k\\) \u200b\u4e5f\u200b\u90fd\u200b\u4e3a\u200b\u67d0\u200b\u4e00\u6761\u200b\u76f4\u5f84\u200b\u7684\u200b\u7aef\u70b9\u200b\uff1b\u200b\u53c8\u200b\u56e0\u4e3a\u200b \u200b\u6240\u6709\u200b\u76f4\u5f84\u200b\u4e2d\u70b9\u200b\u90fd\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u5219\u200b \u200b\u6240\u6709\u200b\u7684\u200b\u8282\u70b9\u200b \\(k\\) \u200b\u548c\u200b\u6240\u6709\u200b\u7684\u200b\u8282\u70b9\u200b \\(i\\) \u200b\u5df2\u7ecf\u200b\u8986\u76d6\u200b\u4e86\u200b\u6240\u6709\u200b\u7684\u200b\u76f4\u5f84\u200b\u7684\u200b\u7aef\u70b9\u200b\uff1b</p> <p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u5f97\u5230\u200b\u4e86\u200b\u6240\u6709\u200b\u7684\u200b\u76f4\u5f84\u200b\u7684\u200b\u7aef\u70b9\u200b\uff0c\u200b\u4f46\u200b\u9898\u76ee\u200b\u8ba9\u200b\u6211\u4eec\u200b\u6c42\u200b\u6240\u6709\u200b\u76f4\u5f84\u200b\u4e0a\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f\u200b\u6211\u4eec\u200b \u200b\u5728\u200b\u7b2c\u4e8c\u6b21\u200b \\(dfs\\) \u200b\u4e2d\u200b \u200b\u8003\u8651\u200b\u8bb0\u5f55\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u7236\u4eb2\u200b\uff0c\u200b\u4f9d\u6b21\u200b\u5f80\u4e0a\u200b\u8df3\u200b\u5373\u53ef\u200b\uff1b\u200b\u90a3\u200b\u4e3a\u4ec0\u4e48\u200b\u53ef\u4ee5\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u76f4\u5f84\u200b\u4e0a\u200b\u7684\u200b\u70b9\u200b\uff1f\u200b\u6211\u4eec\u200b\u8bbe\u200b\u4e00\u6761\u200b\u76f4\u5f84\u200b\u4e3a\u200b \\(\\delta(s, t)\\)\uff0c\u200b\u53e6\u200b\u4e00\u6761\u200b\u4e3a\u200b \\(\\delta(p, q)\\)\uff0c\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c06\u200b\u8282\u70b9\u200b \\(s\\) \u200b\u4f5c\u4e3a\u200b\u6839\u8dd1\u200b \\(dfs\\)\uff0c\u200b\u7531\u200b\u4e0a\u200b\uff0c\u200b\u6613\u77e5\u200b \\(\\delta(s, t)\\) \u200b\u4e0e\u200b \\(\\delta(p, q)\\) \u200b\u6709\u200b\u4ea4\u70b9\u200b\uff0c\u200b\u8bbe\u200b\u4e3a\u200b \\(mid\\)\uff0c\u200b\u5728\u200b \\(\\delta(p, s)\\) \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\uff0c\u200b\u90fd\u200b\u80fd\u591f\u200b\u5728\u200b \\(p \\rightarrow mid \\rightarrow s\\) \u200b\u8fd9\u4e48\u200b\u8df3\u65f6\u200b\u88ab\u200b\u8986\u76d6\u200b\uff0c\u200b\u540c\u7406\u200b\u5728\u200b \\(\\delta(q, s)\\) \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u90fd\u200b\u80fd\u591f\u200b\u5728\u200b \\(q \\rightarrow mid \\rightarrow s\\) \u200b\u8fd9\u4e48\u200b\u8df3\u65f6\u200b\u88ab\u200b\u8986\u76d6\u200b\uff1b\u200b\u56e0\u6b64\u200b\u8bc1\u6bd5\u200b</p> <p>\u200b\u4ee3\u7801\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 2e5+5;\n\nint n, maxd, nod;\nint d[MAXN], jump[MAXN];\nvector &lt;int&gt; G[MAXN];\nset &lt;int&gt; res, ans;\n\nvoid dfs(int node, int fa){\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        d[G[node][i]] = d[node]+1;\n        if (d[G[node][i]] &gt; maxd) maxd = d[G[node][i]];\n        dfs(G[node][i], node);\n    }\n}\nvoid dfs2(int node, int fa){\n    jump[node] = fa;\n    for (int i=0; i&lt;G[node].size(); i++){\n        if (G[node][i] == fa) continue;\n        d[G[node][i]] = d[node]+1;\n        if (d[G[node][i]] &gt; maxd) maxd = d[G[node][i]];\n        dfs2(G[node][i], node);\n    }\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n\n    for (int i=1; i&lt;=n-1; i++){\n        int node1, node2;\n        scanf(\"%d%d\", &amp;node1, &amp;node2);\n        G[node1].push_back(node2);\n        G[node2].push_back(node1);\n    }\n\n    dfs(0, -1);\n    for (int i=1; i&lt;=n; i++){\n        if (d[i] == maxd){\n            nod = i;\n            res.insert(i);\n        }\n    }\n    maxd = 0, d[nod] = 0;\n    dfs2(nod, -1);\n    for (int i=1; i&lt;=n; i++){\n        if (d[i] == maxd){\n            res.insert(i);\n        }\n    }\n    for (auto i=res.begin(); i!=res.end(); i++){\n        int recent = (*i);\n        while (recent != -1){\n            ans.insert(recent);\n            recent = jump[recent];\n        }\n    }\n    for (auto i=ans.begin(); i!=ans.end(); i++){\n        printf(\"%d\\n\", (*i));\n    }\n    return 0;\n}\n</code></pre>","tags":["\u6811\u5f62DP\u57fa\u7840"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/","title":"TopoSort","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#1-\u62d3\u6251\u6392\u5e8f","title":"1. \u200b\u62d3\u6251\u200b\u6392\u5e8f","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#11-\u9762\u5411\u95ee\u9898","title":"1.1 \u200b\u9762\u5411\u200b\u95ee\u9898","text":"<p>\u200b\u5728\u200b\u4e00\u4e2a\u200b \\(DAG\\) (\u200b\u6709\u200b\u5411\u200b\u65e0\u200b\u73af\u56fe\u200b) \u200b\u4e2d\u200b\u5bf9\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u4ee5\u200b\u7ebf\u6027\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5bf9\u4e8e\u200b\u7531\u200b\u4efb\u610f\u200b\u4e00\u6761\u200b\u6709\u200b\u5411\u200b\u8fb9\u200b \\((u, v)\\) \u200b\u76f8\u8fde\u200b\u7684\u200b\u8282\u70b9\u200b \\(u\\), \\(v\\)\uff0c\u200b\u90fd\u200b\u6709\u200b \\(u\\) \u200b\u5728\u200b \\(v\\) \u200b\u7684\u200b\u524d\u9762\u200b</p> <p>\u200b\u5b8f\u89c2\u200b\u610f\u4e49\u200b\u4e0a\u200b\uff0c\u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b\u53ef\u4ee5\u200b\u4f7f\u5f97\u200b\u6392\u200b\u5728\u200b\u524d\u9762\u200b\u7684\u200b\u8282\u70b9\u200b\u4e0d\u200b\u4f9d\u8d56\u4e8e\u200b\u6392\u200b\u5728\u200b\u540e\u9762\u200b\u7684\u200b\u8282\u70b9\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#12-\u6784\u9020\u62d3\u6251\u5e8f\u5217\u6b65\u9aa4","title":"1.2 \u200b\u6784\u9020\u200b\u62d3\u6251\u200b\u5e8f\u5217\u200b\u6b65\u9aa4","text":"<ol> <li>\u200b\u4ece\u56fe\u200b\u4e2d\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u5165\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u8282\u70b9\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u8be5\u200b\u9876\u70b9\u200b\uff0c\u200b\u4ece\u56fe\u200b\u4e2d\u200b\u5220\u53bb\u200b\u6b64\u200b\u8282\u70b9\u200b\u4ee5\u53ca\u200b\u6b64\u200b\u8282\u70b9\u200b\u6240\u6709\u200b\u7684\u200b\u51fa\u8fb9\u200b</li> </ol> <p>\u200b\u91cd\u590d\u200b\u4e0a\u9762\u200b\u4e24\u6b65\u200b\uff0c\u200b\u76f4\u5230\u200b\u6240\u6709\u200b\u5b9a\u70b9\u200b\u90fd\u200b\u88ab\u200b\u8f93\u51fa\u200b\uff0c\u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b\u5b8c\u6210\u200b\uff0c\u200b\u6216\u8005\u200b\u56fe\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5165\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u8282\u70b9\u200b (\u200b\u6b64\u65f6\u200b\u8bf4\u660e\u200b\u56fe\u662f\u200b\u6709\u200b\u73af\u56fe\u200b)</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#13-\u4f8b\u9898","title":"1.3 \u200b\u4f8b\u9898","text":"<p>\u200b\u4f8b\u9898\u200b\uff1aB3644 [\u200b\u6a21\u677f\u200b] \u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u56fe\u200b \\(G = (V, E)\\)\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(E+V)\\)</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 505;\n\nint N;\nint in[MAXN];\nvector &lt;int&gt; G[MAXN];\n\nvoid TopoSort(){\n    vector &lt;int&gt; L;\n    queue &lt;int&gt; S;\n\n    for (int i=1; i&lt;=N; i++){\n        if (in[i] == 0){\n            S.push(i);\n        }\n    }\n\n    while (!S.empty()){\n        int recent = S.front();\n        S.pop();\n        L.push_back(recent);\n\n        for (int i=0; i&lt;G[recent].size(); i++){\n            in[G[recent][i]]--;\n            if (in[G[recent][i]] == 0){\n                S.push(G[recent][i]);\n            }\n        }\n    }\n\n    for (int i=0; i&lt;L.size(); i++){\n        printf(\"%d \", L[i]);\n    }\n}\n\nint main() {\n    scanf(\"%d\", &amp;N);\n\n    for (int i=1; i&lt;=N; i++){\n        while (true){\n            int recent;\n            scanf(\"%d\", &amp;recent);\n            if (recent == 0){\n                break;\n            }\n            else{\n                G[i].push_back(recent);\n                in[recent]++;\n            }\n        }\n    }\n\n    TopoSort();\n    return 0;\n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#2-aoe-\u7f51\u4e0e\u5173\u952e\u8def\u5f84","title":"2. AOE \u200b\u7f51\u200b\u4e0e\u200b\u5173\u952e\u200b\u8def\u5f84","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#21-\u5b9a\u4e49","title":"2.1 \u200b\u5b9a\u4e49","text":"<p>\\(AOE\\) \u200b\u7f51\u662f\u200b\u4e00\u4e2a\u200b\u5e26\u6743\u200b\u6709\u200b\u5411\u200b\u65e0\u200b\u73af\u56fe\u200b\uff0c\u200b\u5176\u4e2d\u200b\uff0c\u200b\u9876\u70b9\u200b\u8868\u793a\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u8fb9\u200b\u8868\u793a\u200b\u4e8b\u4ef6\u200b\u6301\u7eed\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\\(AOE\\) \u200b\u7f51\u200b\u5e94\u8be5\u200b\u662f\u200b\u65e0\u73af\u200b\u7684\u200b\uff0c\u200b\u4e14\u200b\u5b58\u5728\u200b\u552f\u4e00\u200b\u5165\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u8d77\u59cb\u200b\u8282\u70b9\u200b (\u200b\u6e90\u70b9\u200b)\uff0c\u200b\u4ee5\u53ca\u200b\u552f\u4e00\u200b\u51fa\u5ea6\u200b\u4e3a\u200b \\(0\\) \u200b\u7684\u200b\u5b8c\u6210\u200b\u9876\u70b9\u200b (\u200b\u6c47\u70b9\u200b)</p> <p>\\(AOE\\) \u200b\u7f51\u4e2d\u200b\u7684\u200b\u6709\u4e9b\u200b\u6d3b\u52a8\u200b\u662f\u200b\u53ef\u4ee5\u200b\u5e76\u884c\u200b\u8fdb\u884c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b8c\u6210\u200b\u6574\u4e2a\u200b\u5de5\u7a0b\u200b\u7684\u200b\u6700\u200b\u77ed\u65f6\u95f4\u200b\u662f\u4ece\u200b\u6e90\u70b9\u200b\u5230\u200b\u6c47\u70b9\u200b\u7684\u200b\u6700\u957f\u200b\u6d3b\u52a8\u200b\u8def\u5f84\u200b\u957f\u5ea6\u200b\uff1b\u200b\u6700\u957f\u200b\u7684\u200b\u6d3b\u52a8\u200b\u8def\u5f84\u200b\u4e5f\u200b\u662f\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\uff0c\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u5de5\u7a0b\u200b\u5b8c\u6210\u200b\u7684\u200b\u603b\u200b\u65f6\u95f4\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#22-\u6982\u5ff5","title":"2.2 \u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u6d3b\u52a8\u200b\uff1a\\(AOE\\) \u200b\u7f51\u4e2d\u200b\uff0c\u200b\u8fb9\u200b\u8868\u793a\u200b\u6d3b\u52a8\u200b\uff0c\u200b\u8fb9\u200b\u7684\u200b\u6743\u503c\u200b\u8868\u793a\u200b\u6d3b\u52a8\u200b\u6301\u7eed\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u6d3b\u52a8\u200b\u5728\u200b\u4e8b\u4ef6\u200b\u88ab\u200b\u89e6\u53d1\u200b\u540e\u200b\u5f00\u59cb\u200b</li> <li>\u200b\u4e8b\u4ef6\u200b\uff1a\\(AOE\\) \u200b\u7f51\u4e2d\u200b\uff0c\u200b\u8282\u70b9\u200b\u8868\u793a\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u4e8b\u4ef6\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89e6\u53d1\u200b</li> <li>\u200b\u8fb9\u200b (\u200b\u6d3b\u52a8\u200b) \\(a_{j}\\) \u200b\u7684\u200b\u6700\u65e9\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\uff1a\u200b\u6e90\u70b9\u200b\u5230\u200b\u8be5\u200b\u8fb9\u200b\u8d77\u70b9\u200b\u7684\u200b\u6700\u957f\u200b\u8def\u5f84\u200b\u957f\u5ea6\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b \\(e(j)\\)</li> <li>\u200b\u8fb9\u200b (\u200b\u6d3b\u52a8\u200b) \\(a_{j}\\) \u200b\u7684\u200b\u6700\u8fdf\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\uff1a\u200b\u5728\u200b\u4e0d\u63a8\u8fdf\u200b\u6574\u4e2a\u200b\u5de5\u671f\u200b\u7684\u200b\u524d\u63d0\u200b\u4e0b\u200b\uff0c\u200b\u5de5\u7a0b\u200b\u8fbe\u5230\u200b\u8fb9\u200b\u8d77\u70b9\u200b\u6240\u200b\u8868\u793a\u200b\u7684\u200b\u72b6\u6001\u200b\u6700\u665a\u200b\u80fd\u200b\u5bb9\u5fcd\u200b\u7684\u200b\u65f6\u95f4\u200b</li> <li>\u200b\u8282\u70b9\u200b (\u200b\u4e8b\u4ef6\u200b) \\(v_{j}\\) \u200b\u7684\u200b\u6700\u65e9\u200b\u53d1\u751f\u200b\u65f6\u95f4\u200b\uff1a\u200b\u6e90\u70b9\u200b\u5230\u200b\u8be5\u200b\u8282\u70b9\u200b\u7684\u200b\u6700\u957f\u200b\u8def\u5f84\u200b\u957f\u5ea6\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b \\(ve(j)\\)\uff0c\u200b\u663e\u7136\u200b \\(ve(j)=e(j)\\)</li> <li>\u200b\u8282\u70b9\u200b (\u200b\u4e8b\u4ef6\u200b) \\(v_{j}\\) \u200b\u7684\u200b\u6700\u8fdf\u200b\u53d1\u751f\u200b\u65f6\u95f4\u200b\uff1a\u200b\u5728\u200b\u4e0d\u63a8\u8fdf\u200b\u6574\u4e2a\u200b\u5de5\u671f\u200b\u7684\u200b\u524d\u63d0\u200b\u4e0b\u200b\uff0c\u200b\u5de5\u7a0b\u200b\u8fbe\u5230\u200b\u8282\u70b9\u200b\u6240\u200b\u8868\u793a\u200b\u7684\u200b\u72b6\u6001\u200b\u6700\u665a\u200b\u80fd\u200b\u5bb9\u5fcd\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b \\(vl(j)\\)</li> <li>\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\uff1a\\(AOE\\) \u200b\u7f51\u4e2d\u200b\u6e90\u70b9\u200b\u5230\u200b\u6c47\u70b9\u200b\u7684\u200b\u6700\u957f\u200b\u8def\u5f84\u200b\u7684\u200b\u957f\u5ea6\u200b</li> <li>\u200b\u5173\u952e\u200b\u6d3b\u52a8\u200b\uff1a\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\u4e0a\u200b\u7684\u200b\u6d3b\u52a8\u200b\uff0c\u200b\u6700\u65e9\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u548c\u200b\u6700\u8fdf\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u76f8\u7b49\u200b</li> </ul>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#23-\u6700\u65e9\u548c\u6700\u8fdf\u5f00\u59cb\u65f6\u95f4\u7684\u9012\u63a8\u5173\u7cfb","title":"2.3 \u200b\u6700\u65e9\u200b\u548c\u200b\u6700\u8fdf\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u7684\u200b\u9012\u63a8\u200b\u5173\u7cfb","text":"<p>\\(ve(j) = max(ve(k) + dut(&lt;k, j&gt;))\\)</p> <p>\u200b\u6309\u200b\u62d3\u6251\u200b\u987a\u5e8f\u200b\u4ece\u524d\u200b\u5f80\u540e\u200b\u9012\u63a8\u200b\uff0c\u200b\u8282\u70b9\u200b\u7684\u200b\u6700\u65e9\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u4e3a\u200b\u7ed3\u675f\u200b\u4e86\u200b\u8be5\u200b\u9876\u70b9\u200b\u6240\u6709\u200b\u4f9d\u8d56\u200b\u7684\u200b\u6d3b\u52a8\u200b\u7684\u200b\u65f6\u95f4\u200b (\u200b\u6d3b\u52a8\u200b\u53ef\u4ee5\u200b\u5e76\u884c\u200b)\uff0c\u200b\u800c\u200b\u4f9d\u8d56\u200b\u7684\u200b\u6d3b\u52a8\u200b\u53ef\u80fd\u200b\u4e0d\u6b62\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u56e0\u6b64\u200b \\(ve(k) + dut(&lt;k, j&gt;) \u2264 ve(j)\\)\uff0c\u200b\u56e0\u6b64\u200b\u8054\u7acb\u200b\u53d6\u5176\u200b\u6700\u5927\u503c\u200b</p> <p>\\(vl(j) = min(vl(k) - dut(&lt;j, k&gt;))\\)</p> <p>\u200b\u6309\u200b\u62d3\u6251\u200b\u987a\u5e8f\u200b\u4ece\u540e\u200b\u5f80\u524d\u200b\u9012\u63a8\u200b\uff0c\u200b\u7531\u4e8e\u200b\u540e\u7ee7\u200b\u7ed3\u70b9\u200b\u7684\u200b\u6700\u8fdf\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u5fc5\u7136\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u6700\u8fdf\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u52a0\u4e0a\u200b\u8be5\u8fb9\u200b\u7684\u200b\u6743\u503c\u200b\uff0c\u200b\u56e0\u6b64\u200b \\(vl(k) - dut(&lt;j, k&gt;) \u2265 vl(j)\\)\uff0c\u200b\u56e0\u6b64\u200b\u8054\u7acb\u200b\u53d6\u5176\u200b\u6700\u5c0f\u503c\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#24-\u5173\u952e\u8def\u5f84\u7b97\u6cd5","title":"2.4 \u200b\u5173\u952e\u200b\u8def\u5f84\u200b\u7b97\u6cd5","text":"<ol> <li>\u200b\u8f93\u5165\u200b\u56fe\u200b\uff0c\u200b\u5efa\u7acb\u200b \\(AOE\\) \u200b\u7f51\u200b</li> <li>\u200b\u4ece\u200b\u6e90\u70b9\u200b \\(v_{0}\\) \u200b\u51fa\u53d1\u200b\uff0c\u200b\u4ee4\u200b \\(ve[0]=0\\)\uff0c\u200b\u6309\u7167\u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b\u6c42\u200b\u5176\u4f59\u200b\u5404\u4e2a\u200b\u9876\u70b9\u200b\u7684\u200b\u6700\u65e9\u200b\u53d1\u751f\u200b\u65f6\u95f4\u200b \\(ve[i]\\)</li> <li>\u200b\u4ece\u200b\u6c47\u70b9\u200b \\(v_{n}\\) \u200b\u51fa\u53d1\u200b\uff0c\u200b\u4ee4\u200b \\(vl[n-1]=ve[n-1]\\)\uff0c\u200b\u6309\u7167\u200b\u9006\u200b\u62d3\u6251\u200b\u987a\u5e8f\u200b\u6c42\u200b\u5176\u4f59\u200b\u5404\u200b\u9876\u70b9\u200b\u7684\u200b\u6700\u8fdf\u200b\u53d1\u751f\u200b\u65f6\u95f4\u200b \\(vl[i]\\)</li> <li>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u70b9\u200b \\(k\\)\uff0c\u200b\u82e5\u200b \\(vl[k]=ve[k]\\) \u200b\u5219\u200b\u8be5\u200b\u8282\u70b9\u200b\u5728\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\u4e0a\u200b</li> </ol>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%9B%BE%E8%AE%BA/TopoSort/#25-\u4f8b\u9898","title":"2.5 \u200b\u4f8b\u9898","text":"<p>\u200b\u4f8b\u9898\u200b\uff1aBNDSOJ - \u200b\u62d3\u6251\u200b\u6392\u5e8f\u200b - 1.\u200b\u5173\u952e\u200b\u8def\u5f84\u200b</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n, weig;\nint in[105], in_[105], ve[105], vl[105];\n\nstruct Edge{\n    int to;\n    int weig;\n};\n\nvector &lt;Edge&gt; G[105];\nvector &lt;Edge&gt; G_[105];\n\nvoid TopoSort(){\n    vector &lt;int&gt; L;\n    queue &lt;int&gt; S;\n\n    for (int i=1; i&lt;=n; i++){\n        if (in[i] == 0){\n            S.push(i);\n        }   \n    }\n\n    while (!S.empty()){\n        int recent = S.front();\n        S.pop();\n        L.push_back(recent);\n\n        for (int i=0; i&lt;G[recent].size(); i++){\n            in[G[recent][i].to]--;\n            ve[G[recent][i].to] = max(ve[G[recent][i].to], ve[recent]+G[recent][i].weig);\n            if (in[G[recent][i].to] == 0){\n                S.push(G[recent][i].to);\n            }\n        }\n    }\n\n    /*\n    printf(\"ve\\n\");\n    for (int i=0; i&lt;L.size(); i++){\n        printf(\"%d %d\\n\", L[i], ve[L[i]]);  \n    }\n    */\n}\n\nvoid TopoSort_(){\n    vector &lt;int&gt; L;\n    queue &lt;int&gt; S;\n\n    for (int i=1; i&lt;=n; i++){\n        if (in_[i] == 0){\n            S.push(i);\n        }   \n    }\n\n    while (!S.empty()){\n        int recent = S.front();\n        S.pop();\n        L.push_back(recent);\n\n        for (int i=0; i&lt;G_[recent].size(); i++){\n            in_[G_[recent][i].to]--;\n            vl[G_[recent][i].to] = min(vl[G_[recent][i].to], vl[recent]-G_[recent][i].weig);\n            if (in_[G_[recent][i].to] == 0){\n                S.push(G_[recent][i].to);\n            }\n        }\n    }\n\n    /*\n    printf(\"vl\\n\");\n    for (int i=0; i&lt;L.size(); i++){\n        printf(\"%d %d\\n\", L[i], vl[L[i]]);  \n    }\n    */\n}\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    for (int i=1; i&lt;=n; i++){\n        for (int j=1; j&lt;=n; j++){\n            scanf(\"%d\", &amp;weig);\n            if (weig != 0){\n                G[i].push_back({j, weig});  \n                in[j]++;\n\n                G_[j].push_back({i, weig});\n                in_[i]++;\n            }   \n        }\n    }\n\n    TopoSort();\n    memset(vl, 63, sizeof(vl));\n    vl[n] = ve[n];\n    TopoSort_();\n\n    //printf(\"ans\\n\");\n    for (int i=1; i&lt;=n; i++){\n        if (ve[i] == vl[i]){\n            printf(\"%d \", i);\n        }\n    }\n    return 0;\n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/","title":"KMP","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#1-\u524d\u7f00\u51fd\u6570","title":"1. \u200b\u524d\u7f00\u200b\u51fd\u6570","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#11-\u5b9a\u4e49","title":"1.1 \u200b\u5b9a\u4e49","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\)\uff0c\u200b\u5b9a\u4e49\u200b\u5176\u200b\u524d\u7f00\u200b\u51fd\u6570\u200b\u4e3a\u200b\u4e00\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u6570\u7ec4\u200b \\(nex\\)\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4f4d\u200b \\(nex[i]\\)\uff0c\u200b\u8868\u793a\u200b\u5b50\u4e32\u200b \\(s[0...i]\\) \u200b\u7684\u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u200b\u540e\u7f00\u200b\u7684\u200b\u957f\u5ea6\u200b\uff1b\u200b\u7279\u522b\u200b\u7684\u200b\uff0c\\(nex[0]=0\\)</p> <p>\u200b\u4f8b\u5982\u200b\u5bf9\u4e8e\u200b\u5b57\u7b26\u4e32\u200b \\(aabaab\\)\uff0c\u200b\u5176\u200b\u524d\u7f00\u200b\u51fd\u6570\u200b \\(nex[0]=0, nex[1]=1, nex[2]=0, nex[3]=1, nex[4]=2, nex[5]=3\\) </p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#12-\u8ba1\u7b97\u65b9\u6cd5","title":"1.2 \u200b\u8ba1\u7b97\u65b9\u6cd5","text":"<p>\u200b\u5047\u5b9a\u200b\u5bf9\u4e8e\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\), \u200b\u5df2\u77e5\u200b \\(nex[i]\\)\uff0c\u200b\u8981\u6c42\u200b \\(nex[i+1]\\)</p> <ol> <li>\u200b\u82e5\u200b \\(s[nex[i]]=s[i+1]\\)\uff0c\u200b\u5219\u200b \\(nex[i+1]=nex[i]+1\\) </li> <li> <p>\u200b\u82e5\u200b \\(s[nex[i]]\u2260s[i+1]\\)\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u5bf9\u4e8e\u200b\u5b50\u4e32\u200b \\(s[0...i]\\)\uff0c\u200b\u627e\u5230\u200b\u4ec5\u6b21\u4e8e\u200b \\(nex[i]\\) \u200b\u7684\u200b\u7b2c\u4e8c\u200b\u957f\u5ea6\u200b \\(j\\)\uff0c\u200b\u4f7f\u5f97\u200b \\(s[0...j-1]=s[i-j+1...i]\\) </p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u200b\u518d\u6b21\u200b\u6bd4\u8f83\u200b \\(s[j]\\) \u200b\u4e0e\u200b \\(s[i+1]\\)\uff0c\u200b\u82e5\u200b\u76f8\u7b49\u200b\u5219\u200b\u6709\u200b \\(nex[i+1]=j+1\\)\uff0c\u200b\u4e8e\u662f\u200b\u95ee\u9898\u200b\u4fbf\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5728\u200b\u5b50\u4e32\u200b \\(s[0...nex[i]-1]\\) \u200b\u4e2d\u200b\u627e\u5230\u200b\u6700\u957f\u200b\u7684\u200b\u516c\u5171\u200b\u524d\u200b\u540e\u7f00\u200b\u957f\u5ea6\u200b \\(j\\)\uff0c\u200b\u8fd9\u200b\u4e0e\u200b\u539f\u200b\u95ee\u9898\u200b\u76f8\u540c\u200b\uff0c\u200b\u5373\u200b \\(j=nex[nex[i]-1]\\)\u3002\u200b\u540c\u7406\u200b\uff0c\u200b\u6b21\u4e8e\u200b \\(j\\) \u200b\u7684\u200b\u7b2c\u4e8c\u200b\u957f\u5ea6\u200b \\(j^{(2)}\\) \u200b\u6ee1\u8db3\u200b  \\(j^{(2)}=nex[j-1]\\)</p> <p>\u200b\u6700\u7ec8\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b \\(j\\) \u200b\u7684\u200b\u9012\u63a8\u200b\u5f0f\u200b\uff1a\\(j^{(n)}=nex[j^{(n-1)}-1](j^{(n-1)}&gt;0)\\)</p> </li> </ol>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#13-\u7b97\u6cd5","title":"1.3 \u200b\u7b97\u6cd5","text":"C++<pre><code>void Getnex(string s, int *nex){\n    nex[0] = 0;\n\n    for (int i=1; i&lt;s.size(); i++){\n        int j = nex[i-1];\n\n        while (j&gt;0 &amp;&amp; s[i]!=s[j]){\n            j = nex[j-1];\n        }\n\n        if (s[i] == s[j]){\n            j++;\n        }\n        nex[i] = j;\n    }\n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#2-kmp-\u7b97\u6cd5","title":"2. KMP \u200b\u7b97\u6cd5","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#21-\u9762\u5411\u95ee\u9898","title":"2.1 \u200b\u9762\u5411\u200b\u95ee\u9898","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e24\u200b\u5b57\u7b26\u4e32\u200b \\(t\\) \u200b\u548c\u200b \\(s\\)\uff0c\u200b\u627e\u5230\u200b\u5e76\u200b\u8f93\u51fa\u200b \\(s\\) \u200b\u5728\u200b \\(t\\) \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u51fa\u73b0\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#22-\u8fc7\u7a0b","title":"2.2 \u200b\u8fc7\u7a0b","text":"<p>\u200b\u8bbe\u200b\u5b57\u7b26\u4e32\u200b \\(s\\) \u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\)\uff0c\u200b\u5b57\u7b26\u4e32\u200b \\(t\\) \u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(m\\)</p> <p>\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b \\(t'=s+\\#+t\\)\uff0c\u200b\u5176\u4e2d\u200b \\(\\#\\) \u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5728\u200b\u5b57\u7b26\u4e32\u200b \\(s\\) \u200b\u4e0e\u200b \\(t\\) \u200b\u4e2d\u5747\u200b\u4e0d\u200b\u51fa\u73b0\u200b\u7684\u200b\u5206\u9694\u7b26\u200b\uff0c\u200b\u6c42\u5f97\u200b\u6b64\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u524d\u7f00\u200b\u51fd\u6570\u200b \\(nex\\)</p> <p>\u200b\u5bf9\u4e8e\u200b \\(nex[i](i\u2265n+1)\\)\uff0c\u200b\u82e5\u200b \\(nex[i]=n\\)\uff0c\u200b\u5219\u200b\u8bf4\u660e\u200b \\(s\\) \u200b\u5b8c\u6574\u200b\u7684\u200b\u51fa\u73b0\u200b\u5728\u200b\u8be5\u200b\u4f4d\u7f6e\u200b (\u200b\u53f3\u200b\u7aef\u70b9\u200b\u4f4d\u4e8e\u200b \\(nex[i]\\))\uff0c\u200b\u4f46\u200b \\(i\\) \u200b\u662f\u200b\u5bf9\u4e8e\u200b\u5b57\u7b26\u4e32\u200b \\(s'\\) \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u51cf\u53bb\u200b \\(s+\\#\\) \u200b\u7684\u200b\u957f\u5ea6\u200b\u540e\u200b\uff0c\u200b\u6613\u200b\u5f97\u77e5\u200b\u5b57\u7b26\u4e32\u200b \\(s\\) \u200b\u5728\u200b \\(t\\) \u200b\u7684\u200b \\(i-(n-1)-(n+1)=i-2n\\) \u200b\u5904\u200b\u51fa\u73b0\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#23-\u4f8b\u9898","title":"2.3 \u200b\u4f8b\u9898","text":"<p>\u200b\u4f8b\u9898\u200b\uff1aP3375 [\u200b\u6a21\u7248\u200b] KMP</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n+m)\\)\uff0c\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n)\\)</p> C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN = 1e7+5;\n\nstring s1, s2;\nint nex[MAXN], nexans[MAXN];\n\nvoid Getnex(string s, int *nex){\n    nex[0] = 0;\n\n    for (int i=1; i&lt;s.size(); i++){\n        int j = nex[i-1];\n\n        while (j&gt;0 &amp;&amp; s[i]!=s[j]){\n            j = nex[j-1];\n        }\n\n        if (s[i] == s[j]){\n            j++;\n        }\n        nex[i] = j;\n    }\n}\n\nvoid work(string s1, string s2){    // search s1 in s2\n    string s = s1+'#'+s2;\n    Getnex(s1+'#'+s2, nex);\n\n    for (int i=s1.size()+1; i&lt;=s1.size()+s2.size(); i++){\n        if (nex[i] == s1.size()){\n            printf(\"%d\\n\", i-2*s1.size()+1);\n        }\n    }   \n}\n\nint main(){\n    cin &gt;&gt; s1 &gt;&gt; s2;\n\n    work(s2, s1);\n    Getnex(s2, nexans);\n\n    for (int i=0; i&lt;s2.size(); i++){\n        printf(\"%d \", nexans[i]);   \n    }\n    return 0;\n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#3-kmp-\u5e94\u7528","title":"3. KMP \u200b\u5e94\u7528","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#31-\u5b57\u7b26\u4e32\u7684\u5468\u671f","title":"3.1 \u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5468\u671f","text":"<p>\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\) \u200b\u4ee5\u53ca\u200b \\(0\uff1cp\u2264n\\)\uff0c\u200b\u82e5\u200b \\(s[i]=s[i+p]\\) \u200b\u5bf9\u200b\u6240\u6709\u200b \\(i\u2208[0, n-p-1]\\) \u200b\u6210\u7acb\u200b\uff0c\u200b\u5219\u200b\u79f0\u200b \\(p\\) \u200b\u662f\u200b \\(s\\) \u200b\u7684\u200b\u5468\u671f\u200b\uff0c\u200b\u5373\u5c06\u200b \\(s\\) \u200b\u7684\u200b\u5b50\u4e32\u200b \\(s[0...p-1]\\) \u200b\u91cd\u590d\u200b\u65e0\u9650\u200b\u6b21\u200b\u5f97\u5230\u200b\u5b57\u7b26\u4e32\u200b \\(s'\\)\uff0c\u200b\u6709\u200b \\(s\\) \u200b\u662f\u200b \\(s'\\) \u200b\u7684\u200b\u5b50\u4e32\u200b (\u200b\u5982\u200b \\(abcdab\\) \u200b\u4e3a\u200b \\(abcd\\) \u200b\u91cd\u590d\u200b\u65e0\u9650\u200b\u6b21\u200b\u5f97\u5230\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u4e32\u200b\uff0c\u200b\u5219\u200b \\(4\\) \u200b\u4e3a\u200b \\(abcdab\\) \u200b\u7684\u200b\u5468\u671f\u200b)</p> <p>\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\)\uff0c\u200b\u82e5\u200b \\(s\\) \u200b\u6709\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(0\u2264r\uff1cn\\) \u200b\u7684\u200b\u516c\u5171\u200b\u524d\u200b\u540e\u7f00\u200b\uff0c\u200b\u5219\u200b\u79f0\u200b \\(s\\) \u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(r\\) \u200b\u7684\u200b\u516c\u5171\u200b\u524d\u200b\u540e\u7f00\u200b\u4e3a\u200b \\(s\\) \u200b\u7684\u200b \\(border\\)</p> <ol> <li> <p>\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\)\uff0c\u200b\u82e5\u200b\u5176\u200b\u6709\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(r\\) \u200b\u7684\u200b \\(border\\)\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b \\(n-r\\) \u200b\u662f\u200b \\(s\\) \u200b\u7684\u200b\u5468\u671f\u200b\uff0c\u200b\u6700\u77ed\u200b\u7684\u200b\u5468\u671f\u200b\u4e3a\u200b \\(n-nex[n-1]\\)</p> </li> <li> <p>\u200b\u7279\u522b\u200b\u7684\u200b\uff0c\u200b\u5bf9\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(n\\) \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b \\(s\\) \u200b\u4ee5\u53ca\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(p\\) \u200b\u7684\u200b\u524d\u7f00\u200b \\(s'\\)\uff0c\u200b\u82e5\u200b \\(s\\) \u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b \\(s'\\) \u200b\u91cd\u590d\u200b \\(k\\) \u200b\u6b21\u200b\u5f97\u5230\u200b\uff0c\u200b\u79f0\u200b \\(s'\\) \u200b\u4e3a\u200b\u5468\u671f\u6027\u200b\u7684\u200b\uff0c\u200b\u5176\u200b\u5468\u671f\u200b\u4e3a\u200b \\(k\\)</p> <p>\u200b\u5bf9\u4e8e\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(r\\) \u200b\u7684\u200b \\(border\\)\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b \\(n-r \\equiv 0 (\\bmod n)\\) \u200b\u65f6\u200b (\u200b\u5373\u200b \\(n-r\\) \u200b\u6574\u9664\u200b \\(n\\))\uff0c\u200b\u8be5\u200b \\(border\\) \u200b\u4e3a\u200b\u5468\u671f\u6027\u200b\u7684\u200b\uff0c\u200b\u5176\u200b\u5468\u671f\u200b\u4e3a\u200b \\(\\frac{n}{n-r}\\)</p> </li> </ol>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/","title":"\u7b5b\u6cd5","text":"<p>\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u77e5\u9053\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b \\(n\\) \u200b\u7684\u200b\u81ea\u7136\u6570\u200b\u4e2d\u6709\u200b\u591a\u5c11\u200b\u7d20\u6570\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u6570\u90fd\u200b\u8fdb\u884c\u200b\u66b4\u529b\u200b\u7d20\u6570\u200b\u5224\u65ad\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n\\sqrt n)\\)\uff0c\u200b\u8fd9\u662f\u200b\u65e0\u6cd5\u200b\u63a5\u53d7\u200b\u7684\u200b\uff1b\u200b\u56e0\u6b64\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u7b5b\u6cd5\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#1-\u57c3\u6c0f\u7b5b","title":"1. \u200b\u57c3\u6c0f\u200b\u7b5b","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u5927\u4e8e\u200b \\(1\\) \u200b\u7684\u200b\u6570\u200b \\(i\\)\uff0c\u200b\u6211\u4eec\u200b\u7b5b\u6389\u200b\u9664\u200b\u5b83\u200b\u81ea\u5df1\u200b\u5916\u200b\u5b83\u200b\u7684\u200b\u6240\u6709\u200b\u500d\u6570\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6700\u540e\u200b\u5269\u4e0b\u200b\u7684\u200b\u6570\u200b\u5168\u4e3a\u200b\u7d20\u6570\u200b</p> <p>\u200b\u57c3\u6c0f\u200b\u7b5b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b \\(O(n\\log \\log n)\\)</p> <p>\u200b\u5b9e\u73b0\u200b\u65f6\u6709\u200b\u51e0\u4e2a\u200b\u5c0f\u200b\u4f18\u5316\u200b\uff1a 1. \u200b\u663e\u7136\u200b \\(n\\) \u200b\u4ee5\u5185\u200b\u6240\u6709\u200b\u7684\u200b\u5408\u6570\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u88ab\u200b \\(\\sqrt n\\) \u200b\u53ca\u200b\u4ee5\u5185\u200b\u7684\u200b\u6570\u200b\u6807\u8bb0\u200b\u5230\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ea\u200b\u7b5b\u5230\u200b \\(\\sqrt n\\) \u200b\u5373\u53ef\u200b 2. \u200b\u5f53\u200b\u6211\u4eec\u200b\u7b5b\u5230\u200b\u6570\u200b \\(i\\) \u200b\u65f6\u200b\uff0c\u200b\u6613\u77e5\u200b\u5408\u6570\u200b \\(2 \\times i, 3 \\times i, ..., (i-1) \\times i\\) \u200b\u90fd\u200b\u88ab\u200b\u4e4b\u524d\u200b\u7b5b\u8fc7\u200b\u7684\u200b\u6570\u200b \\(2, 3, ..., (i-1)\\) \u200b\u6807\u8bb0\u200b\u8fc7\u200b\u4e86\u200b\uff0c\u200b\u56e0\u6b64\u200b\u76f4\u63a5\u200b\u4ece\u200b \\(i \\times i\\) \u200b\u5f00\u59cb\u200b\u6807\u8bb0\u200b\u5373\u53ef\u200b 3. \u200b\u56e0\u4e3a\u200b\u9664\u4e86\u200b \\(2\\) \u200b\u7684\u200b\u5076\u6570\u200b\u90fd\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u7d20\u6570\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u53ea\u200b\u7b5b\u200b\u5947\u6570\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7edf\u8ba1\u200b\u65f6\u200b\u4e5f\u200b\u53ea\u200b\u7edf\u8ba1\u200b\u5947\u6570\u200b\u5373\u53ef\u200b 4. \u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b \\(bitset\\) \u200b\u6216\u200b \\(vector&lt;bool&gt;\\) \u200b\u4ee3\u66ff\u200b\u4f20\u7edf\u200b\u7684\u200b \\(bool\\) \u200b\u6570\u7ec4\u200b\u4f18\u5316\u200b\u5e38\u6570\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b \\(ui\\) \u200b\u4e3a\u200b \\(unsigned\\ int\\)\uff0c\u200b\u4e0b\u540c\u200b</p> C++<pre><code>vector&lt;ui&gt; ErSieve(ui n){\n    vector&lt;ui&gt; primes;\n    vector&lt;bool&gt; is_prime(INF, true);   \n    is_prime[0] = is_prime[1] = false;\n    primes.push_back(2);\n\n    for (ui i=3; i*i&lt;=n; i+=2){\n        if (is_prime[i] == true){\n            for (ui j=i*i; j&lt;=n; j+=i) is_prime[j] = false; \n        }\n    }\n    for (ui i=3; i&lt;=n; i+=2){\n        if (is_prime[i] == true) primes.push_back(i);\n    }\n    return primes;  \n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#2-\u6b27\u62c9\u7b5b","title":"2. \u200b\u6b27\u62c9\u200b\u7b5b","text":"<p>\u200b\u57c3\u6c0f\u200b\u7b5b\u200b\u975e\u7ebf\u6027\u200b\u7684\u200b\u539f\u56e0\u200b\u5728\u4e8e\u200b\u5408\u6570\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u91cd\u590d\u200b\u6807\u8bb0\u200b\uff0c\u200b\u5982\u200b \\(12\\) \u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b \\(2\\), \\(3\\) \u200b\u5404\u200b\u6807\u8bb0\u200b\u4e00\u6b21\u200b\uff1b\u200b\u6b27\u62c9\u200b\u7b5b\u200b\u7701\u6389\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u65e0\u200b\u610f\u4e49\u200b\u7684\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u7b97\u6cd5\u200b\u6548\u7387\u200b\u66f4\u9ad8\u200b</p> <p>\u200b\u5728\u200b\u6b27\u62c9\u200b\u7b5b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u200b\u6bcf\u4e2a\u200b\u5408\u6570\u200b\u90fd\u200b \u200b\u53ea\u200b\u88ab\u200b\u5176\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u7b5b\u6389\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u7b5b\u5230\u200b\u6570\u200b \\(i\\) \u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ece\u5c0f\u5230\u5927\u200b\u679a\u4e3e\u200b\u6bcf\u4e2a\u200b\u8d28\u6570\u200b \\(primes[j]\\)\uff0c\u200b\u671f\u671b\u200b \\(primes[j]\\) \u200b\u662f\u200b \\(i \\times primes[j]\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u5e76\u200b\u7b5b\u200b\u6389\u200b \\(i \\times primes[j]\\)\uff1b\u200b\u90a3\u4e48\u200b\u5982\u4f55\u200b\u4fdd\u8bc1\u200b\u8fd9\u4e00\u200b\u6027\u8d28\u200b\uff1f\u200b\u5f53\u200b\u6ee1\u8db3\u200b \\(i \\% primes[j] = 0\\) \u200b\u65f6\u200b\u4e0d\u518d\u200b\u7ee7\u7eed\u200b\u5f80\u200b\u4e0b\u200b\u679a\u4e3e\u200b \\(primes[j]\\)</p> <p>\u200b\u9996\u5148\u200b\u8bc1\u660e\u200b\u6240\u6709\u200b\u7684\u200b\u5408\u6570\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8fd9\u4e48\u200b\u7b5b\u6389\u200b\uff1b\u200b\u4efb\u53d6\u200b\u5408\u6570\u200b \\(num\\)\uff0c\u200b\u8bb0\u5176\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u4e3a\u200b \\(p\\)\uff0c\u200b\u5219\u200b \\(num\\) \u200b\u53ef\u200b\u88ab\u200b\u5206\u89e3\u200b\u4e3a\u200b \\(p \\times num'\\)\uff1b\u200b\u5728\u200b\u5916\u5c42\u200b\u5faa\u73af\u200b\u679a\u4e3e\u200b\u5230\u200b \\(num'\\) \u200b\u65f6\u200b\uff0c\u200b\u8bbe\u200b \\(num'\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u4e3a\u200b \\(q\\)\uff0c\u200b\u663e\u7136\u200b\u6709\u200b \\(q \\ge p\\)\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u679a\u4e3e\u200b\u5230\u200b \\(q\\) \u200b\u5e76\u200b\u4e0d\u518d\u200b\u7ee7\u7eed\u200b\u679a\u4e3e\u200b (\u200b\u53ca\u200b) \u200b\u4e4b\u524d\u200b\u65f6\u200b\u4e00\u5b9a\u200b\u80fd\u591f\u200b\u679a\u4e3e\u200b\u5230\u200b \\(p\\) \u200b\u5e76\u200b\u5220\u53bb\u200b \\(num\\)\uff1b\u200b\u53c8\u200b\u7531\u4e8e\u200b \\(num\\) \u200b\u53ef\u4ee5\u200b\u4efb\u53d6\u200b\uff0c\u200b\u5219\u200b\u5f97\u8bc1\u200b</p> <p>\u200b\u5176\u6b21\u200b\u8bc1\u660e\u200b\u8fd9\u4e48\u200b\u7b5b\u200b\u6ca1\u6709\u200b\u95ee\u9898\u200b\uff1b\u200b\u5177\u4f53\u200b\u7684\u200b\uff0c\u200b\u5bf9\u200b\u5916\u5c42\u200b\u679a\u4e3e\u200b\u5230\u200b\u7684\u200b\u6570\u200b \\(i\\) \u200b\u4e0e\u200b\u5185\u5c42\u200b\u679a\u4e3e\u200b\u5230\u200b\u7684\u200b\u8d28\u6570\u200b \\(primes[j]\\)\uff0c\u200b\u5373\u8bc1\u200b\u5bf9\u4e8e\u200b\u5728\u200b \\(i \\% primes[j]=0\\) \u200b\u4e4b\u524d\u200b\u7684\u200b\u6240\u6709\u200b \\(primes[j']\\)\uff0c\u200b\u90fd\u200b\u6709\u200b \\(primes[j']\\) \u200b\u662f\u200b \\(i \\times primes[j']\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u5728\u200b \\(i \\% primes[j]=0\\) \u200b\u4e4b\u540e\u200b\u7684\u200b\u6240\u6709\u200b \\(primes[j'']\\)\uff0c\u200b\u90fd\u200b\u6709\u200b \\(primes[j'']\\) \u200b\u4e0d\u662f\u200b \\(i \\times primes[j'']\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\uff1b</p> <p>\u200b\u540e\u200b\u4e00\u6761\u200b\u662f\u200b\u663e\u7136\u200b\u7684\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5185\u5c42\u200b\u4ece\u5c0f\u5230\u5927\u200b\u679a\u4e3e\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u6709\u200b \\(primes[j] &lt; primes[j'']\\)\uff0c\u200b\u90a3\u4e48\u200b \\(i \\times primes[j'']\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u4e00\u5b9a\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b \\(primes[j]\\)\uff0c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u662f\u200b \\(primes[j'']\\)</p> <p>\u200b\u524d\u200b\u4e00\u6761\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u53cd\u8bc1\u200b\uff0c\u200b\u5bf9\u4e8e\u200b \\(i \\times primes[j']\\)\uff0c\u200b\u82e5\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5185\u5c42\u200b\u4e00\u5b9a\u200b\u5faa\u73af\u200b\u4e0d\u5230\u200b \\(primes[j']\\) (\u200b\u5728\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u90a3\u91cc\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u4f1a\u200b\u7ed3\u675f\u200b\u4e86\u200b)</p> <p>\u200b\u6bcf\u4e2a\u200b\u5408\u6570\u200b\u53ea\u4f1a\u200b\u88ab\u200b\u7b5b\u200b\u4e00\u6b21\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5c31\u662f\u200b \\(O(n)\\) \u200b\u7684\u200b</p> C++<pre><code>vector&lt;ui&gt; EuSieve(ui n){\n    vector&lt;ui&gt; primes;\n    vector&lt;bool&gt; is_prime(INF, true);\n    is_prime[0] = is_prime[1] = false;\n\n    for (ui i=2; i&lt;=n; i++){\n        if (is_prime[i] == true) primes.push_back(i);\n        for (ui j=0; j&lt;primes.size() &amp;&amp; i*primes[j]&lt;=n; j++){\n            is_prime[i*primes[j]] = false;\n            if (i % primes[j] == 0) break;  \n        }\n    }\n    return primes;\n}\n</code></pre>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u4e24\u79cd\u7b5b\u6cd5\u7684\u6bd4\u8f83","title":"\u4e24\u79cd\u200b\u7b5b\u6cd5\u200b\u7684\u200b\u6bd4\u8f83","text":"<p>\u200b\u4e8b\u5b9e\u4e0a\u200b\uff0c\u200b\u57c3\u6c0f\u200b\u7b5b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5e76\u4e0d\u4e00\u5b9a\u200b\u6bd4\u200b\u6b27\u62c9\u200b\u7b5b\u52a3\u200b\uff0c\u200b\u5728\u200b \\(OI\\) \u200b\u4e0b\u200b\u5e38\u7528\u200b\u7684\u200b \\(1e8\\) \u200b\u7684\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u5185\u200b \\(\\log \\log n\\) \u200b\u53ef\u4ee5\u200b\u770b\u505a\u200b\u4e00\u4e2a\u200b\u5f88\u5c0f\u200b\u7684\u200b\u5e38\u6570\u200b (\u200b\u5927\u7ea6\u200b\u4e3a\u200b \\(4\\))\uff0c\u200b\u52a0\u4e0a\u200b\u4e0a\u6587\u200b\u63d0\u53ca\u200b\u7684\u200b\u51e0\u4e2a\u200b\u4f18\u5316\u200b\uff0c\u200b\u6027\u80fd\u200b\u751a\u81f3\u200b\u6bd4\u200b\u6b27\u62c9\u200b\u7b5b\u8981\u200b\u597d\u200b (\u200b\u53c2\u89c1\u200b OI-wiki \u200b\u7684\u200b\u6548\u7387\u200b\u6d4b\u8bd5\u200b)\uff1b\u200b\u5728\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e0a\u200b\uff0c\u200b\u4e24\u8005\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u5176\u4ed6\u200b\u5e94\u7528\u200b\uff0c\u200b\u53ea\u662f\u200b\u7b5b\u200b\u7d20\u6570\u200b\u7684\u8bdd\u200b\u53ef\u4ee5\u200b\u7528\u57c3\u6c0f\u200b\u7b5b\u200b\uff1b\u200b\u53cd\u4e4b\u200b\uff0c\u200b\u5982\u6c42\u200b\u6b27\u62c9\u200b\u51fd\u6570\u200b\u3001\u200b\u56e0\u6570\u200b\u4e2a\u6570\u200b\u65f6\u200b\uff0c\u200b\u5219\u200b\u7528\u200b\u6b27\u62c9\u200b\u7b5b\u200b\u66f4\u597d\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#3-\u6b27\u62c9\u7b5b\u7684\u5e94\u7528","title":"3. \u200b\u6b27\u62c9\u200b\u7b5b\u200b\u7684\u200b\u5e94\u7528","text":"","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u6c42\u6700\u5c0f\u8d28\u56e0\u6570","title":"\u6c42\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570","text":"<p>\u200b\u8fd9\u662f\u200b\u663e\u7136\u200b\u7684\u200b\u3002\u200b\u6b27\u62c9\u200b\u7b5b\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u5df2\u7ecf\u200b\u4fdd\u8bc1\u200b\u4e86\u200b\u5728\u200b\u7b5b\u5230\u200b\u5408\u6570\u200b \\(i \\times primes[j]\\) \u200b\u65f6\u200b\uff0c\\(primes[j]\\) \u200b\u5c31\u662f\u200b\u5176\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\uff1b\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u5373\u53ef\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u6c42\u6b27\u62c9\u51fd\u6570","title":"\u6c42\u200b\u6b27\u62c9\u200b\u51fd\u6570","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6570\u200b \\(i\\)\uff0c\u200b\u6b27\u62c9\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b \\(i\\) \u200b\u4e14\u200b\u4e0e\u200b \\(i\\) \u200b\u4e92\u8d28\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\uff1b\u200b\u6b27\u62c9\u200b\u51fd\u6570\u200b\u662f\u200b \u200b\u79ef\u6027\u200b\u51fd\u6570\u200b\uff1b\u200b\u6211\u4eec\u200b \u200b\u6309\u7167\u200b \\(i \\% primes[j]\\) \u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b\uff1a</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j] = 0\\)\uff0c\u200b\u8fd9\u200b\u8bf4\u660e\u200b \\(i\\) \u200b\u4e2d\u200b \u200b\u5305\u542b\u200b \\(i \\times primes[j]\\) \u200b\u7684\u200b\u5168\u90e8\u200b\u8d28\u200b\u56e0\u5b50\u200b\uff1b\u200b\u5c55\u5f00\u200b\u5f0f\u5b50\u200b\uff0c\u200b\u4ee3\u5165\u200b \\(num = i \\times primes[j]\\) $$ \\varphi(num) = num \\times \\prod_{k=1}^{c} (1-\\frac{1}{p_k})\\ = i \\times primes[j] \\times \\prod_{k=1}^{c} (1-\\frac{1}{p_k})\\ = (i \\times \\prod_{k=1}^{c} (1-\\frac{1}{p_k})) \\times primes[j]\\ = \\varphi(i) \\times primes[j] $$ \u200b\u7efc\u4e0a\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(\\varphi(i \\times primes[j]) = \\varphi(i) \\times primes[j]\\)</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j] \\ne 0\\)\uff0c\u200b\u5219\u200b\u8bf4\u660e\u200b \\(i\\) \u200b\u4e0e\u200b \\(primes[j]\\) \u200b\u4e92\u8d28\u200b\uff1b\u200b\u6839\u636e\u200b\u79ef\u6027\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6709\u200b $$ \\varphi(i \\times primes[j]) = \\varphi(i) \\times \\varphi(primes[j])\\ \\varphi(i \\times primes[j]) = \\varphi(i) \\times (primes[j]-1) $$ \u200b\u7efc\u4e0a\u200b\uff0c\u200b\u6b64\u65f6\u200b \\(\\varphi(i \\times primes[j]) = \\varphi(i) \\times (primes[j]-1)\\)</p> <p>\u200b\u6ce8\u610f\u200b\u4e3a\u200b \\(i\\) \u200b\u4e3a\u200b\u8d28\u6570\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7279\u5224\u200b \\(\\varphi(i) = i-1\\)\uff0c\u200b\u53e6\u5916\u200b\u8bb0\u5f97\u200b\u8bbe\u200b\u521d\u503c\u200b \\(\\varphi(1) = 1\\)</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u6c42\u56e0\u6570\u4e2a\u6570","title":"\u6c42\u200b\u56e0\u6570\u200b\u4e2a\u6570","text":"<p>\u200b\u5b9a\u7406\u200b\uff1a\u200b\u5c06\u6570\u200b \\(n\\) \u200b\u8fdb\u884c\u200b\u8d28\u200b\u56e0\u6570\u5206\u89e3\u200b\uff0c\u200b\u8bbe\u200b \\(n=\\prod_{i=1}^{m} p_i^{c_i}\\)\uff0c\u200b\u7531\u200b\u4e58\u6cd5\u200b\u539f\u7406\u200b\u6613\u77e5\u200b \\(n\\) \u200b\u6709\u200b \\(\\prod_{i=1}^{m} (c_i+1)\\) \u200b\u4e2a\u200b\u56e0\u6570\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u8bbe\u200b \\(dc_i\\) \u200b\u8868\u793a\u200b\u6570\u200b \\(i\\) \u200b\u7684\u200b\u56e0\u6570\u200b\u4e2a\u6570\u200b\uff0c\\(ec_i\\) \u200b\u8868\u793a\u200b\u6570\u200b \\(i\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b (\u200b\u6307\u6570\u200b)\uff0c\\(num = i \\times primes[j]\\)\uff1b\u200b\u6309\u7167\u200b \\(i \\% primes[j]\\) \u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j]=0\\)\uff0c\u200b\u8bf4\u660e\u200b \\(i\\) \u200b\u4e2d\u200b\u5305\u542b\u200b \\(num\\) \u200b\u7684\u200b\u5168\u90e8\u200b\u8d28\u56e0\u6570\u200b\uff0c\u200b\u533a\u522b\u200b\u53ea\u200b\u5728\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b \\(primes[j]\\) \u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u5c11\u200b\u4e86\u200b \\(1\\)\uff0c\u200b\u6709\u200b \\(ec_{num} = ec_i+1\\)\uff1b\u200b\u5c55\u5f00\u200b \\(dc_{num}\\) \u200b\u4e0e\u200b \\(dc_i\\) $$ dc_{num} = \\prod_{i=1}^{m}(c_i+1) = \\prod_{i=2}^{m} (c_i+1) \\times (ec_{num}+1)\\ dc_{i} = \\prod_{i=1}^{m}(c_i+1) = \\prod_{i=2}^{m}(c_i+1) \\times (ec_i+1) $$ \u200b\u4e24\u200b\u5f0f\u200b\u76f8\u9664\u200b\uff0c\u200b\u5f97\u5230\u200b $$ \\frac{dc_{num}}{dc_{i}} = \\frac{ec_{num}+1}{ec_i+1}\\ \\frac{dc_{num}}{dc_{i}} = \\frac{ec_{num}+1}{ec_{num}} $$ \u200b\u7efc\u4e0a\u200b\uff0c\u200b\u6709\u200b \\(dc_{num}=dc_{i} \\times \\displaystyle \\frac{(ec_{num}+1)}{ec_{num}}\\)</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j] \\ne 0\\)\uff0c\u200b\u8bf4\u660e\u200b \\(i\\) \u200b\u4e2d\u200b\u4e0d\u200b\u5305\u542b\u200b \\(primes[j]\\)\uff0c\u200b\u90a3\u4e48\u200b \\(num\\) \u200b\u4e2d\u200b\u53ea\u200b\u542b\u200b \\(1\\) \u200b\u4e2a\u200b \\(primes[j]\\)\uff0c\u200b\u5373\u200b \\(ec_{num}=1\\)\uff1b\u200b\u6211\u4eec\u200b\u4eff\u7167\u200b\u4e0a\u9762\u200b \u200b\u628a\u200b \\(dc_{num}\\) \u200b\u4e2d\u200b \\(primes[j]\\) \u200b\u4e00\u9879\u200b\u7684\u200b\u51fa\u73b0\u200b\u4e2a\u6570\u200b\u5355\u200b\u62c6\u51fa\u6765\u200b \u200b\u5373\u53ef\u200b\uff0c\u200b\u5176\u4f59\u200b\u7684\u200b\u6b63\u597d\u200b\u662f\u200b \\(dc_i\\) $$ dc_{num} = \\prod_{i=1}^{m}(c_i+1) = \\prod_{i=2}^{m}(c_i+1) \\times (1+1) = dc_i \\times 2 $$ \u200b\u7efc\u4e0a\u200b\uff0c\u200b\u6709\u200b \\(dc_{num} = dc_i \\times 2\\)</p> <p>\u200b\u540c\u6837\u200b\u6ce8\u610f\u200b \\(i\\) \u200b\u4e3a\u200b\u8d28\u6570\u200b\u65f6\u200b\uff0c\u200b\u7279\u5224\u200b \\(dc_i=2, ec_i=1\\) \u200b\u5373\u53ef\u200b</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u6c42\u56e0\u6570\u548c","title":"\u6c42\u200b\u56e0\u6570\u200b\u548c","text":"<p>\u200b\u5b9a\u7406\u200b\uff1a\u200b\u5c06\u6570\u200b \\(n\\) \u200b\u8fdb\u884c\u200b\u8d28\u200b\u56e0\u6570\u5206\u89e3\u200b\uff0c\u200b\u8bbe\u200b \\(n=\\prod_{i=1}^{m} p_i^{c_i}\\)\uff0c\u200b\u6613\u77e5\u200b \\(n\\) \u200b\u7684\u200b\u56e0\u6570\u200b\u548c\u200b\u4e3a\u200b \\(\\prod_{i=1}^{m} \\sum_{j=0}^{c_i}(p_i^j)\\)\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u4efb\u9009\u200b\u6bcf\u4e2a\u200b \\(p_i\\) \u200b\u4e0a\u200b\u7684\u200b\u6307\u6570\u200b \\(j\\)</p> <p>\u200b\u6211\u4eec\u200b\u8003\u8651\u200b\u8bbe\u200b \\(ds_i\\) \u200b\u8868\u793a\u200b\u6570\u200b \\(i\\) \u200b\u7684\u200b\u56e0\u6570\u200b\u4e2a\u6570\u200b\uff0c\\(es_i\\) \u200b\u8868\u793a\u200b\u6570\u200b \\(i\\) \u200b\u7684\u200b\u6700\u5c0f\u200b\u8d28\u56e0\u6570\u200b\u7684\u200b\u7b49\u6bd4\u6570\u5217\u200b\u6c42\u548c\u200b (\u200b\u5373\u200b \\(\\sum_{i=0}^{c_{p}} p^i\\))\uff0c\\(num = i \\times primes[j]\\)\uff1b\u200b\u4ecd\u7136\u200b\u6309\u7167\u200b \\(i \\% primes[j]\\) \u200b\u5206\u7c7b\u200b\u8ba8\u8bba\u200b (\u200b\u4ee5\u4e0b\u200b\u7b80\u5199\u200b \\(primes[j]\\) \u200b\u4e3a\u200b \\(p\\))</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j]=0\\)\uff0c\u200b\u5219\u200b \\(num\\) \u200b\u4e2d\u200b\u53ea\u200b\u6bd4\u200b \\(i\\) \u200b\u591a\u200b\u4e00\u4e2a\u200b \\(p\\)\uff0c\u200b\u8bb0\u200b \\(i\\) \u200b\u4e2d\u6709\u200b \\(c_p\\) \u200b\u4e2a\u200b \\(p\\)\uff0c\u200b\u6211\u4eec\u200b\u6253\u5f00\u200b \\(es_{num}\\) \u200b\u4e0e\u200b \\(es_i\\) \u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b  $$ es_{num} = p<sup>0+p</sup>1+p<sup>2+...+p</sup>\\ es_{i} = p<sup>0+p</sup>1+p<sup>2+...+p</sup> $$ \u200b\u89c2\u5bdf\u200b\u5230\u200b\u57fa\u672c\u200b\u53ea\u5dee\u200b\u4e00\u4e2a\u200b \\(p\\)\uff0c\u200b\u4e0d\u59a8\u200b\u4e58\u200b\u4e0a\u53bb\u200b\uff0c\u200b\u5219\u200b\u5f97\u5230\u200b $$ es_{num} = es_{i} \\times p + p^0 $$ \u200b\u56e0\u6b64\u200b\uff0c\u200b\u6709\u200b \\(es_{num} = es_{i} \\times p + 1\\)\uff1b\u200b\u7531\u4e8e\u200b\u5728\u200b\u7b49\u6bd4\u6570\u5217\u200b\u6c42\u548c\u200b\u7684\u200b\u5f62\u5f0f\u200b\u4e0b\u200b\u4e0d\u200b\u65b9\u4fbf\u200b\u76f4\u63a5\u200b\u6bd4\u8f83\u200b \\(ds_{num}\\) \u200b\u4e0e\u200b \\(ds_{i}\\)\uff0c\u200b\u4e0d\u59a8\u200b\u76f4\u63a5\u200b\u5957\u7528\u200b\u516c\u5f0f\u200b\u7b80\u5316\u200b\u4e3a\u200b $$ \\sum_{i=0}^{c_{p}} p^i = \\frac{p^{c_p+1}-1}{p-1} $$ \\(ds_{num}\\) \u200b\u4e0e\u200b \\(ds_i\\) \u200b\u5dee\u200b\u7684\u200b\u5b9e\u9645\u4e0a\u200b\u53ea\u6709\u200b\u8fd9\u200b\u4e00\u9879\u200b\uff0c\u200b\u76f4\u63a5\u200b\u76f8\u9664\u200b $$ \\frac{ds_{num}}{ds_i} = \\frac{p<sup>{c_p+2}-1}{p</sup>\\ \\frac{ds_{num}}{ds_i} = p + \\frac{p-1}{p^{c_p+1}-1} $$ \u200b\u5728\u200b\u5206\u6570\u200b\u7684\u200b\u4e0a\u4e0b\u200b\u540c\u9664\u200b }-1\\(p-1\\)\uff0c\u200b\u53d8\u200b\u56de\u200b\u7b49\u6bd4\u6570\u5217\u200b\u6c42\u548c\u200b\u7684\u200b\u5f62\u5f0f\u200b $$ \\frac{ds_{num}}{ds_i} = p + \\frac{1}{\\sum_{i=0}^{c_{p}} p^i}\\ \\frac{ds_{num}}{ds_i} = \\frac{p \\times \\sum_{i=0}^{c_{p}} p^i + 1}{\\sum_{i=0}^{c_{p}} p^i} $$ \u200b\u795e\u5947\u200b\u7684\u200b\u4e8b\u60c5\u200b\u51fa\u73b0\u200b\u4e86\u200b\uff01\u200b\u6b64\u65f6\u200b\u4e0a\u4e0b\u200b\u4e24\u9879\u200b\u521a\u597d\u200b\u5206\u522b\u200b\u662f\u200b \\(es_{num}\\) \u200b\u4e0e\u200b \\(es_i\\)\uff0c\u200b\u5373\u200b $$ \\frac{ds_{num}}{ds_i} = \\frac{es_{num}}{es_i}\\ $$ \u200b\u7efc\u4e0a\u200b\uff0c\\(ds_{num} = {ds_i} \\times \\displaystyle  \\frac{es_{num}}{es_i}\\)</p> <p>\u200b\u82e5\u200b \\(i \\% primes[j] \\ne 0\\)\uff0c\u200b\u5219\u200b \\(num\\) \u200b\u4e2d\u200b\u53ea\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b \\(p\\)\uff0c\u200b\u90a3\u4e48\u200b \\(es_{num} = p+1\\)\uff1b\\(ds_{num} = (es_{num}) \\times ds_i\\)\uff0c\u200b\u5373\u200b\u6709\u200b \\(ds_{num} = (p+1) \\times ds_i\\)</p> <p>\u200b\u540c\u6837\u200b\u6ce8\u610f\u200b\u5728\u200b \\(i\\) \u200b\u662f\u200b\u8d28\u6570\u200b\u65f6\u200b\uff0c\u200b\u7279\u5224\u200b \\(ds_i = p+1, es_i = p+1\\)</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#\u540e\u8bb0","title":"\u540e\u8bb0","text":"<p>\u200b\u6284\u88ad\u200b\u4e86\u200b \u200b\u53c2\u8003\u200b\u4e86\u200b masonxiong \u200b\u5927\u4f6c\u200b\u7684\u200b blog</p>","tags":["\u5b66\u4e60\u8bb0\u5f55"]},{"location":"blog/archive/2024/","title":"08/2024","text":""},{"location":"blog/category/%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u505a\u200b\u9898\u200b\u8bb0\u5f55","text":""},{"location":"blog/category/%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%AE%B0%E5%BD%95/","title":"\u6a21\u62df\u200b\u8d5b\u200b\u8bb0\u5f55","text":""},{"location":"blog/category/%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/","title":"\u8bad\u7ec3\u200b\u8bb0\u5f55","text":""}]}